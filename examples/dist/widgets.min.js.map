{"version":3,"sources":["widgets.min.js"],"names":["UIColor","color","_this","this","ok","charAt","substr","toLowerCase","colorRegex","re","bits","parseInt","process","processor","i","channels","b","r","isNaN","g","toHex","toString","length","toRGB","$","extend","getBrightness","type","lightenColor","Math","percent","R","num","slice","G","round","amt","B","darkenColor","calculateBrightness","kolor","hasAttribute","theme","on","eventStart","e","target","classList","contains","w","d","min","offsetWidth","offsetHeight","max","h","offset","y","isAndroid","getBoundingClientRect","navBkColor","touches","pageX","left","backgroundColor","pageY","top","ripple","nodeName","createElement","closest","css","brightness","rippleColor","dataset","rippleWave","style","append","setTimeout","height","remove","x","block","opacity","document","querySelector","screen","setAttribute","display","add","unblock","UIBusy","removeAttribute","settings","options","element","spinner","iOSBusy","parent","position","busy","id","parentWidth","width","array","parentHeight","clientHeight","find","size","innerWidth","tmpLeft","window","androidActivityIndicator","center","ReorderList","clientWidth","accessibility","ariaRole","tabIndex","focus","items","tmpTop","FixForChrome","testElementStyle","pageYOffset","transitionJSPropertyName","transformCSSPropertyName","transformJSPropertyName","userSelectJSPropertyName","hwTopLayerMagicStyle","globalInstances","onContainerFocus","list","prototype","setState","bind","states","idle","state","onTouchEnd","onMouseUp","usingTouch","onMouseLeave","mouseHandlersAttached","onSelection","startPosition","latestPosition","onEventStart","previousPosition","onEventMove","canPreventScrolling","removeMouseHandlers","insertBefore","detail","allowTextSelection","transform","node","undecided","original","getComputedStyle","getPropertyValue","holdTimer","value","parentNode","hwLayerMagicStyle","attachedBodyHandlerHack","leaveState","clearTimeout","onMove","move","onEnd","willChange","onLeave","allowDefault","reorder","reorderStateInit","getAbsoluteMovement","nodes","originalIndex","zero","baseTransform","getTransform","pos","t","mouseOutsideTimer","originalTarget","otherNodes","o","getTotalMovement","off","onTouchCancel","childNodes","offsetTop","nodeType","call","push","spliceIndex","zIndex","animateToZero","webkitTransformStyle","dispatch","forEach","addEventListener","setChildNodesAriaRoles","eventMove","attach","unSetChildNodesAriaRoles","body","noop","ctor","prevState","nextState","newStateCtor","findTargetNode","targetNode","detach","self","Array","isRelated","iOS","navigator","userAgent","preventDefault","outline","addMouseHandlers","isTouchEnabled","test","button","startAtPosition","setTarget","scrollContainer","documentElement","relatedTarget","scrollHeight","origScrollTop","origScrollHeight","clientX","clientY","time","updatePosition","timeStamp","abs","directionY","scrollable","containerRect","bottomOffset","bottom","topOffset","triggerOffset","event","initCustomEvent","scrollTop","createEvent","scrollOffset","initEvent","eventName","updateScrolling","targetRect","innerHeight","UIEditList","undefined","doneLabel","maxScrollTop","callback","data","deletable","reorderable","dispatchEvent","html","__editMade","moveDownIndicator","deleteLabel","stateProp","deletionIndicator","_templateObject","elm","temp","val","$this","siblings","boundComponents","dir","dispelDeletable","editButton","isArray","item","render","editBtn","map","li","prepend","cancelBtn","moveHandle","backBtn","hide","get","deleteListItem","selectedItems","getAttribute","direction","-webkit-transform","transition","movedItems","listItem","__newarray","found","__data","editLabel","nav","cancelLabel","toggle","show","UIMultiSelectList","selected","selections","liData","uuid","listItems","purge","select","replace","idx","text","selectionIndicator","_classCallCheck","selection","name","index","buttonText","textContent","decorateBackButton","isNavigating","getScreen","makeScreenCurrent","makeScreenNext","apply","querySelectorAll","indexOf","destinationScreen","regex","destination","checked","currentScreen","makeScreenPrevious","Router","dataObj","arguments","fn","ChuiRoutes","route","trim","chuiBackButtonSVG","GoTo","handleNavigationEvent","globalNav","split","GoBack","pagingControls","chunks","nextPage","currPage","getElementById","GoBackTo","dest","disabled","previousElementSibling","className","empty","goto","is","UIPopover","title","_templateObject4","positionPopover","popoverID","chunk","po","calcLeft","calcTop","nextElementSibling","offsetLeft","clientLeft","popover","closePopover","content","message","cancelButton","popup","closePopup","trigger","triggerEl","el","input","newPlace","newPoint","UIPopup","ranges","_range","ctx","range","continueButton","_$$css","-webkit-justify-content","-webkit-align-items","_defineProperty","subscribe","isChrome","ClosePopup","getFullRoute","join","UISegmented","UIRange","createSegmentedButton","androidSelectionIndicator","__segmented","labels","background-size","androidSelectionBorder","_len","_key","match","publish","settingsData","segmented","eq","selectedButton","sib","btn","UISheet","UISelectList","background","slideDown","slideFrom","sheet","populate","UISlideOut","slideoutID","buttonID","slideOut","slideOutButton","slideout","shownScreen","screenToShow","handle","key","UIStepper","stepper","increaseSymbol","template","disabledDecrease","defaultValue","disabledIncrease","label","increaseButton","decreaseButton","slideOutBtn","newValue","decreaseStepperValue","currentValue","JSON","menuItems","__element","swipeOn","swipeOff","appendChild","__switch","__el","checkbox","dataVal","stringify","parse","UITabbar","__stepper","UISwitch","screens","Stack","screenPrefix","__tabbarScreens","showIcons","tab","checkState","tabbarTmpl","insertAdjacentHTML","makeTab","tabbar","selectedTabButton","__tabbarButtons","__selectedTabbarButton","handleTabSelectionForAndroid","console","getSelectedScreen","__selectedTabbarScreen","tabbarButtons","currBtn","navRoutes","navRoutesFull","icons","currScreen","prevScreen","routing","ui","whichRoute","routes","icon","wr","getSelectedTab","chuiRoute","fullRoute"],"mappings":"2pLAgBMA,QAAU,SAASC,GAAO,GAAAC,GAAAC,IAC9BA,MAAKC,IAAK,EAKa,KAAnBH,EAAMI,OAAO,KACfJ,EAAQA,EAAMK,OAAO,EAAE,IAEzBL,EAAQA,EAAMM,aAmDZ,KAAA,GA1DFC,KAkBIC,GAAI,2DAdJR,QAAMI,SAANK,GACFT,OACDU,SAAAD,EAAA,IACOT,SAAMM,EAAAA,IAgBNI,SAASD,EAAK,QARhBF,GAAAA,0BAEFI,QAAA,SAAAF,GACI,OACJE,SAASF,EAAA,GAAA,IACPC,SACEA,EAASD,GAAK,IAIjBC,SAAAD,EAAA,GAAA,QAcDD,GAAA,0BAIAG,QAAS,SAASF,GAChB,OAFEC,SAAAD,EAAA,GAAAA,EAJN,GAAA,IAKEE,SAASF,EAAA,GAAAA,EAAA,GAAe,IACtBC,SACEA,EAASD,GAAAA,EAAUA,GAAK,QAaxBG,EAAAA,EAAAA,EAAYL,EAAAA,IAAAA,CAClB,GAAME,GAAOD,EAAQR,GAArBQ,GACIC,EAAMF,EAAAM,GAAAF,QACFG,EAAAA,EAAAA,KAAWF,EACjB,IAAAH,EAAA,CACA,GAAAK,GAASA,EAATL,EACAP,MAAKa,EAAID,EAAS,GAClBZ,KAAKC,EAALW,EAAA,GACDZ,KAAAa,EAAAD,EAAA,GACFZ,KAAAC,IAAA,GAODD,KAAKa,EAAKb,KAAAc,EAAA,GAAcC,MAAMf,KAANc,GAAf,EAAsCd,KAASc,EAAV,IAAA,IAA4BD,KAA1EC,EADAd,KAAKgB,EAAKhB,KAAKgB,EAAI,GAAKD,MAAMf,KAAKgB,GAAM,EAAMhB,KAAKgB,EAAI,IAAO,IAAMhB,KAAKgB,EAG1EhB,KAAKiB,EAALjB,KAAaa,EAAA,GAAAE,MAAMf,KAAAa,GAAA,EAAAb,KAAAa,EAAA,IAAA,IAAAb,KAAAa,EAEjBb,KAAAiB,MAAQ,WACR,GAAIJ,GAAId,EAAAe,EAAAI,SAAA,IACJJ,EAAEK,EAAFH,EAAAE,SAAmB,IACnBF,EAAEG,EAAFN,EAAAK,SAAmB,GAEvB,OADgB,IAAZL,EAAEM,SAAaN,EAAI,IAAMA,GACtB,GAAPG,EAAAG,SAAOH,EAAP,IAAAA,GAPF,GAAAH,EAAAM,SAAAN,EAAA,IAAAA,GAOS,IAAMC,EAAIE,EAAIH,GAKtBb,KAFDoB,MAAA,WAxFF,MAAA,OAAApB,KAAAc,EAAA,IAAAd,KAAAgB,EAAA,IAAAhB,KAAAa,EAAA,KA+FEQ,GAAAC,QAOEC,cAAcT,SAANhB,GAAR,MATK,WAAAuB,EAAAG,KAAA1B,KAAAA,EAAAD,QAAAC,IASa,KAAVA,EAAMgB,EAAuB,KAAVhB,EAAMkB,EAAuB,KAAVlB,EAAMe,GASpDY,aAAYC,SAAAA,EAAAC,GACZ,GAAIC,GAAKC,SAAD/B,EAARgC,MAAA,GAAA,IACIC,EAAKF,KAAAG,MAAW,KAAUC,GAC1BC,GAAKL,GAAM,IAAAI,EACfF,GAAOF,GAAO,EAAA,KAAaD,EAtBtBM,GAAA,IAAAL,GAAAI,CAsBL,OAAO,KAAO,SAA8C,OAAjCL,EAAI,IAAMA,EAAI,EAAI,EAAIA,EAAI,KAAmD,KAAjCG,EAAI,IAAMA,EAAI,EAAI,EAAIA,EAAI,MAAgBG,EAAI,IAAMA,EAAI,EAAI,EAAIA,EAAI,MAAMhB,SAAS,IAAIY,MAAM,IASpKK,YAAYT,SAAAA,EAAKM,GACjB,GAAIJ,GAAKC,SAAD/B,EAARgC,MAAA,GAAA,IACIC,EAAKF,KAAAG,MAAW,KAAUC,GAC1BC,GAAKL,GAAM,IAAAI,EACfF,GAAOF,GAAO,EAAA,KAAaD,EAnCtBM,GAAA,IAAAL,GAAAI,CAmCL,OAAO,KAAO,SAA8C,OAAjCL,EAAI,IAAMA,EAAI,EAAI,EAAIA,EAAI,KAAmD,KAAjCG,EAAI,IAAMA,EAAI,EAAI,EAAIA,EAAI,MAAgBG,EAAI,IAAMA,EAAI,EAAI,EAAIA,EAAI,MAAMhB,SAAS,IAAIY,MAAM,IASpKM,oBAAkBvC,SAAAA,GACX,WAAPwB,EAAAG,KAASD,KAATzB,EAAAA,EAAAmB,QACD,IAAAoB,GAAA,GAAAxC,SAAAC,EA9CH,OAAAuB,GAAAE,cAAAc,MAqDMhB,EAAA,WACWiB,YAAXjB,EAAAkB,OACElB,EAAA,QAAAmB,GAAAnB,EAAAoB,WAAA,qHAAA,SAAAC,GACD,GAAAC,GAAA3C,IAFD,KAAI2C,EAAOL,aAAa,cAAeK,EAAOC,UAAUC,SAAS,YAAjE,CAOAC,GAAIC,GAAJrB,KAAAsB,IAAAhD,KAAAiD,YAAA,KACIF,EAAJrB,KAAAsB,IAAAhD,KAAAkD,aAAA,KAFMH,EAAIrB,KAAKyB,IAAIL,EAAGM,EAItBN,GAAMO,EAFND,EAAIL,CAKJ,IAAMO,GAAMC,KAAFC,wBAENC,EAAAA,EAAAA,UAAJf,EAAAgB,QAAA,GAAAC,MAAAN,EAAAO,KAAAlB,EAAAiB,MAAAN,EAAAO,KACIC,EAAAA,EAAAA,UAAAA,EAAAA,QAAJ,GAAAC,MAAAT,EAAAU,IAAArB,EAAAoB,MAAAT,EAAAU,IAEMC,MAAAA,GACJrB,MAAAA,GAEEA,EAAOsB,SAAaC,cAAYvB,gBAGnC,IAFCtB,EAAAsB,GAAIc,OAAAA,GAEaQ,WAHnBtB,EAGYA,UAAoBA,EAAYtB,UAAU8C,SAAQ,oBAAY,CACxEV,GAAAA,GAAed,EAAAA,mBAAuByB,GAAzB,GAA6BA,IAAA,mBAC1CP,GAAkB,GAAIhE,SAAQ4D,GAAYxC,YAEZ,WAApB0B,EAAOsB,UAAyB5C,EAAEsB,GAAQwB,QAAQ,OAAA,IAC5DV,EAAapC,EAAEsB,GAAQwB,QAAQ,OAAAC,IAAWA,oBAC1CP,EAAkB,GAAIhE,SAAQ4D,GAAYxC,SAGZ,WAA9B4C,EAAAA,UAA8BxC,EAAAsB,GAA9BwB,QAAA,WAAA,IACAV,EAAKI,EAAAA,GAADM,QAAoBN,WAAAA,IAAoB,oBAC1CA,EAAAA,GAAkBhE,SAAlB4D,GAAAxC,UAFF4C,EAAkBxC,EAAErB,MAAMoE,IAAI,sBAMhC,qBAAAP,IACMQ,EAAejC,OAInBkC,IAAAA,GAAc,MAGhBA,GAFCjD,EAAAe,oBAAAyB,GAJgB,IAMNU,OAEV,OAGDC,EAAWC,QAAMZ,cACjBW,EAAA7B,EAAA4B,QAAAD,YAGAE,IAAAA,GAAiBT,SAAcX,cAA/B,cAJAoB,GAAWC,MAAMZ,gBAAkBS,EAMnCN,EAAOU,MAAOF,MAAdpB,EAAAY,KACAW,EAAWF,MAAAG,OAAWxB,EAAtBuB,KACEtD,EAAAoD,MAAUI,KAAVC,EAAA1B,EAAA,EAAA/B,KACDmD,EAFDC,MAAAV,IAAAT,EAAAF,EAAA,EAEC,KAEJY,EAAAU,OAAAF,GAnEHG,WAAA,WAgEQtD,EAAE2C,GAAQa,UAOT,UAMLxD,EAAAC,QAKEyD,MAAA,SAAAC,GACD,IAHDC,SAAAC,cAAA,WAGC,CACD7D,EAAA,QAAM8D,OAAN,uBACAF,SAAIE,cAAeC,WAAaX,MAAAY,QAAe,QAd1CV,WAAA,WAUHM,SAASC,cAAc,WAAWtC,UAAU0C,IAAI,UAOpDN,GAAA3D,EAAA,WAAA+C,KAAAY,QAAAA,KAJE,IAAMG,GAASF,SAASC,cAAc,oBAOxCK,IAASJ,EAAAC,aAAM,eAAA,KAAfG,QAAS,WAQLC,EAAAA,WACJX,QAAqB,IAAAM,GAAAF,SAAAC,cAAA,oBANfC,IAAQA,EAAOM,gBAAgB,qBAQnCD,QAIAnE,QAAAA,GAASqE,GACT,GADmBC,gBAAAA,KAAAA,GACbC,EAAN,CALA,GAAIF,IAOAG,KAAAA,GACJ/F,MAAA,OAJAuB,GAAEC,OAAOoE,EAAUC,EAOnB,IAAMG,GAAUzE,EAAAqE,EAAVI,SAEJD,MAAAA,EA+GW5B,aAAP8B,EAAAA,MA9BU,WACdL,EAAaE,GAAAA,EAAAA,MACb,IAAMG,GAAN,IACA,IAAIC,EAAAA,gBASAA,MARFC,GAAAA,4CAAAP,EAAAQ,GAAAD,0LAEAP,EAAA5F,MAFAmG,2PAIFP,EAAA5F,MAJEmG,sJAOEE,GAAAA,OAAAA,EAGFvB,GAAAA,YAAAc,EAAAQ,GAAAtB,6HACAwB,EAAQH,OAAKI,GACbC,EAAAA,MAAeP,GAAAA,UAAOQ,IAAAA,wBACtBJ,EAAcJ,OALhB1E,EAMO,IAAAqE,EAAAQ,IAAAM,KAAA,UAAApC,IAAA,SAAAuB,EAAA7F,OAGLwG,EAAAA,IAAAA,EAAe9F,IAAAA,KACf2F,OAAAA,EAAc3F,KAAYuF,KACxBE,MAAFP,EAAYe,KAAA,UASOC,QAAnBC,EAAYC,OA7GZf,WADFrF,SAiBOkF,EAAAe,KAAA,IAAA,IACLZ,EAAAA,uCAA4CH,EAA5Ce,KAAAZ,eAAAH,EAA0EA,KAA1EG,qPAiBDH,EAAA5F,MAjBC+F,sIAvBJH,EAAA5F,MAuBI+F,uIAbsEH,EAAS5F,MAa/E+F,uIAoBJH,EAAA5F,MApBI+F,wIAXsEH,EAAS5F,MAW/E+F,wIAVsEH,EAAS5F,MAU/E+F,wIAuBsBH,EAAA5F,MAvBtB+F,wIAwBFH,EAAA5F,MAxBE+F,uFA2BAgB,EAAAA,OAAAA,KAUAA,EAAAA,iCAAwCnB,EAAxCe,KAAAI,eAAAnB,EAAAe,KAAAI,8PAEAnB,EAAA5F,MAFA+G,sIAGmBnB,EAAA5F,MAHnB+G,uIAIEnB,EAAA5F,MAJF+G,uIAKCnB,EAAA5F,MALD+G,uIAMDnB,EAAA5F,MANC+G,wIAOuBnB,EAAA5F,MAPvB+G,wIAOuBnB,EAAA5F,MAPvB+G,wIASyBnB,EAAA5F,MATzB+G,wIAOFnB,EAAA5F,MAPE+G,wIAdJnB,EAAA5F,MAcI+G,wIAzBsEnB,EAAS5F,MAyB/E+G,wIAaJnB,EAAA5F,MAbI+G,uFAgBEtE,EAAFmC,OAAYmB,OA2Cb7F,KAAA8G,OAAA,SAAAd,GACD,GAAIA,EAAJ,CACAC,GAAAA,GAASL,EAAAY,KAAA,cACDG,EADCf,EAAAS,MAAA,EAEPtC,GAFFkC,EAAA7B,IAAA,WAAA4B,GAvCFA,EAAAC,EAAA7B,IAAA,WASE,IAAIQ,OAAAA,GAyCVwB,MAAAA,GAvCUE,MAAAA,GACAH,MAAAA,EACa,cAAbH,GACFC,EAAK7B,IAAI,WAAY,YAuCvB2C,EAAAA,EAAeV,MAAA,GAAWE,aAC9BH,EAAAH,EAAAI,MAAA,GAAAW,YArCMV,EAAeP,EAAOQ,aAuCtBU,EAAgBlB,EAAAiB,cAElBE,EAAU1G,SADNyF,EAAA7B,IAAA,UAAA,IAEJ+C,EAAU3G,SAFNyF,EAAA7B,IAAA,SAAA,IAGJgD,EAAO5G,SAAAa,EAAA0E,GAAA3B,IAAA,UAAA,IAJW+B,EAAA3F,SAAAa,EAAA0E,GAAA3B,IAAA,SAAA,IAMpBiD,EAAAA,GAAOjD,KACL8C,cADK,OAELC,eAFK,SANT,IAAAG,OAAAA,GA1BQX,MAAAA,EAaJ,OA0Be,SAAfY,EAAAA,UACAC,EAAAA,OAAmBvC,YAASf,EAAAA,OAAcuD,YAA9C7C,EAAA,EAAA,KACM8C,EAAAA,OAAAA,WAA2B,EAAAtB,EAAgBoB,EAAAA,OAE3CG,EAAAA,EAA2BC,EAAAA,EAAAA,EAAAA,KAC3BC,EAAAA,EAA2B,EAAAzB,EAAA,EAAgBoB,MAE7CM,aAAAA,IAAuBN,EAAAA,GAC3BA,EAAAA,KArCM5D,KAAM+C,EAuCRoB,IAAAA,IApCO9B,MAgDTc,YAAKiB,WATP,QAASjB,GAAYkB,EAAMtC,GAEzB,GAqCFoB,EAAAA,SAAYmB,cAAYD,IArCjBjI,MAAQA,OAAS4G,OAAQ,MAAO,IAAIG,GAAYkB,EAAMtC,EAuC3DsC,MAAAA,QAFsBtC,EAAAA,MAGtBA,KAAAA,cAHsB3F,KAAAmI,SAAAC,KAAApI,KAAAA,KAAAqI,OAAAC,MAItBC,KAAAA,WAJsBvI,KAAAwI,WAAAJ,KAAApI,MAKtB2C,KAAAA,UALsB3C,KAAAyI,UAAAL,KAAApI,MAMtB0I,KAAAA,aANsB1I,KAAA2I,aAAAP,KAAApI,MAOtB4I,KAAAA,YAAAA,KAAuBC,YAPDT,KAAApI,MAQtB8I,KAAAA,iBARsB9I,KAAAgI,iBAAAI,KAAApI,MAStB+I,KAAAA,aATsB/I,KAAAgJ,aAAAZ,KAAApI,MAUtBiJ,KAAAA,YAAkBjJ,KAVIkJ,YAAAd,KAAApI,MAWtBmJ,KAAAA,SAAAA,KAAAA,OAXsBb,MAYtBD,KAAAA,OAAQJ,GAEJ5G,EAAA4G,GAAAzF,GAAA,kBAAA,SAAAE,GACA,GAAA1C,KAAKoJ,UAAAA,SAAL,kBAIC,MADC1G,GAAAC,OAAKA,WAAS0G,aAAd3G,EAAAC,OAAAD,EAAA4G,OAAAD,eACD,IACD,GAGEE,QAAAA,GAAAA,GADK,GAAPC,GAAAC,EAAAhF,MAAAmD,EAGD,IAbK4B,EAxBN,OAuCAE,MAAAA,EACEC,SAAAH,EAGA,IAAA5C,OAAKjE,iBAAkB+E,CArCzB,GAAIjD,GAAQmC,OAAOgD,iBAAiBH,GAAMI,iBAAiBlC,EAuCzD,IAAAlD,GAAgBE,SAAZmF,EAAuB,OAAAC,MAAWtF,EAAAkF,SAAA,IAEpC,OAAAI,MAAI,GAAKZ,SAAAA,IA9Df,GAAAlC,IACAgB,MArCEf,SAAU,UAuCVe,SAAS,EACTb,OAAK,GAEJC,OACD3E,SAASsH,SACT7C,UAAO,EALTC,OAAA,IAUAG,EAAkBkC,gBAAW7B,KAAAA,UAAAA,WAC7BJ,EAAevC,SAAAf,cAAA,OAAAO,MACbiD,EAAO,cAAAF,GAAA,aAAA,mBACLuC,EADK,aAAAvC,GAAA,YAAA,kBAELmC,EAASH,oBAAAA,EAAAA,oBAAAA,YAFX3B,EAAA,cAAAL,GAAA,aAAA,mBAIDyC,EAAAzC,EAAAI,GAAA,iBAAA,GACDE,EAAW8B,EAAkBhC,GAAA,mBAAA,EAC3BJ,GAAYZ,IAEb,IAAAmB,GAAA,EACDmC,GAAkBP,CA2jBlB,OAlhBK5C,GAL0BmB,WAO3BD,KAAA,KACEkC,WACEC,MAAAA,KACDzH,OAHI,KAlCX+F,YAAY,EAuCN2B,uBAAQ,EACNvB,cAAMwB,KACNvB,eAAIuB,KACFrB,iBAAKd,KACNgB,qBAAA,EACDd,QACEC,KAAA,WASJiC,MAPEvK,MAAAoJ,sBAbGpJ,KAAA2C,SAvBL3C,KAAK2C,OAAO8G,KAAKhF,MAAM+F,WAAa,GAuCpCC,KAAAA,OAAS,MAERzK,KAlBI0I,YAAA,GAqBHa,oBAAMmB,IArBHhB,UAAP,WAXA1J,KAAK2C,OAAOiC,OAAS5E,KAAK2C,OAAO8G,KAAKvG,aAuCxCyH,KAAAA,OAASlB,KAASmB,MAAAA,WAAmBjD,EACnC3H,KAAI2C,OAAKA,KAAO8G,MAAKrC,GAA6BA,EAEjD,IAAA0C,GAAAnF,WAAA,WACD,GAAKhC,GAAOiC,KAAZiG,qBACMC,MAAAA,qBAANR,EAAAxF,EAAA,IAAAwF,EAAAhH,EAAA,IACIyH,KAAAA,SAAAA,KAAkB1C,OAAK1F,UAE3ByF,KAAM4C,MAAO,IAEb,QACEb,WAAI,WACJC,aAAUN,IAGRL,OAAMqB,WACNG,GAAAA,GAAAA,KAAeC,qBAOnB,IANIC,EAAKC,EAAKA,IAAAd,EAAWQ,EAAApJ,KAASwB,IAAAA,IAApBlD,KAAL2C,OAA6CqI,SAHpDhL,KAAAmI,SAAAnI,KAAAqI,OAAAC,MAhCMgC,EAAKhH,EAAI,IAuCZX,KAALwF,SAAiBvF,KAAAA,OAAc0F,MAE1B3F,EAAO8G,EAAW5B,IAANpD,EAAjBnB,EAAuBuE,OAAAA,GAGtB4C,QAAA,WArCGzK,KAAKmI,SAASnI,KAAKqI,OAAOC,OAyC5BiC,MAAIc,WACFjB,GAAAA,GAAaiB,KAAAA,SAAbrL,KAAA2C,OAAA2I,eAAA,MAED,OADCD,MAAAA,SAAAA,KAAAA,OAAA/C,MACDoC,KAKCC,QAAA,WA8BAY,QAAAA,KACEC,KAAAA,kBACAA,IACDpB,aAHDiB,GAdGA,EAAA,KAoBLhB,IAAAA,GAAQA,KApBHoB,kBAnBLzL,MAAK2C,OAAO8G,KAAKhF,MAAMmD,GAA2B,eAAiB0C,EAAKhH,EAAI,OAASwE,EAAuB9H,KAAK2C,OAAOsI,cAAclB,KAyCtIU,IAAAA,GAASzK,KAAA2C,OAAAiC,MAaL,OAZF2G,GAAIF,QAAAA,SAAmBjB,GACvBiB,GAAAA,GAAAA,CACEA,GAAAA,IAAAA,GAAAA,EAAoB/H,EAApB,GAAAkI,EAAAL,IAAAb,EAAAhH,EACAoI,EAAKC,EA1BJH,EAAAL,IAAA,GAAAb,EAAAhH,EAAA,GAAAkI,EAAAL,IAAAb,EAAAhH,IAXDoI,GAAO9G,GA0CT4G,EAAA/B,KAAMa,MAAO1C,GAAb8D,EAAA,eAAAA,EAAA,OAAAzB,EAAAuB,EAAAP,cAAAlB,MAAAyB,EAAAP,cAAAtB,YAIE,EAlDF3J,KAAIwL,OAAQ/B,KAAKa,OAASrD,EAAaqD,MAAvClD,OACEsE,KAAAA,OAAM9G,KAANwC,QAGAsE,KAAAA,OAAM9G,OAAN5E,KAAA2C,OAAA8G,KAAAvG,YAOL,KAAA,GANI4H,GAAA9K,KAAAiI,KAAA2D,WACDJ,EAAa5D,EAAAA,KAAAA,QAAAA,QARfyD,MAAAA,GA7BIL,EAAOhL,KAAK2C,OAAO8G,KAAKoC,UAAY7L,KAAK2C,OAAOiC,OAAO,EAyC3D2G,KACD5K,EAAA,EAAAA,EAAAmK,EAAA3J,OAAAR,IAvCC,GAAyB,GAArBmK,EAAMnK,GAAGmL,UAAiBhB,EAAMnK,KAAOX,KAAK2C,OAAO8G,KAAvD,CAyCFY,GAAO0B,GAAKjB,EAAZnK,GAAAkL,SAvCEf,GAAMnK,GAAG8D,MAAMiD,GAA4BC,EAA2B,oBAyCxE4D,EAAOS,MACL7B,KAAAA,EAAYxJ,GACVsK,cAAII,EAAmBjB,EAAAA,IACvBe,IAAI5D,GAAAA,EAAAA,EAAcuD,EAAAnK,GAAAuC,aAAA,GAAA8H,IAqChBiB,MAjCAjM,MAAA2C,OAAKsF,KAAKb,UAAV9B,IAAA,wBACDtF,KAAA2C,OAAA8G,KAAAhF,MAAAyH,OAAA,QACDlM,KAAA2C,OAAKA,KAAO8G,MAAK7G,GAAiB,OAClC2E,IACAvH,KAAAiI,KAAKkE,MAAAA,qBAA+B,eA2B/B9B,EAAA0B,KAAA/L,OAGJmK,WAAM,WACLkB,GAAoBlK,aAAUR,GAC5B4G,IACEvH,KAAAiI,KAAAxD,MAAA2H,qBAAA,IAEHpM,KAAAiI,KAAAb,OAAAH,EAAAgB,KAAAb,OACD6E,KAAAA,KAAAA,QAtCFjM,KAAK2C,OAAO8G,KAAK7G,UAAUiC,OAAO,wBAyClC7E,KAAKqM,OAAAA,KAAS5H,MAAK9B,GAAyBsJ,GAC5CjM,KAAKmI,cAAcE,SAAOC,GAC1B3F,EAAO8G,KAAPhF,MAAAyH,OAAA,KApDJX,EAAAe,QAAA,SAAAd,GAuDDA,EAAA/B,KAAAhF,MAAAmD,GAAA4D,EAAAP,cAAAtB,SAjLmB6B,EAAA/B,KAAAhF,MAAAiD,GAAA,MAsLhB2C,OAAKpC,EAEPiC,QAAAA,WACAjF,GAAcsH,aAAiBlB,GAChCA,EAAA1G,WAAA,WAvCO0G,EAAoB,KAyCvBpD,KAAOA,iBAvCJG,KAAKpI,MAAO,MA2CnBuK,MAAA,WACGtD,GAAAA,GAAcgB,KAAKf,mBAChBe,MAAAA,GACNgE,MAAAA,EACIO,IAAAA,EAAAA,EAAAA,EAAAA,CACAvE,IAAKsE,EAAAA,EAAAA,EAAAA,EAAVpL,UACKoK,EAAL5K,GAAAwK,IAAAb,EAAAhH,GADyC0E,KAKlCC,EAAStH,MACH6B,CACNyF,IAAMzF,EAAGnB,EAAhBF,OAAkC+H,EAAAA,GAAAA,KA5MdqC,EAAA5K,GAAAwK,IAAAb,EAAAhH,GA4MpB3C,KAKEsE,EAActE,EAAA,EAKZ,MAFFX,MAAFqM,SAAmBI,KAAAA,OAAWhD,KAAKP,WAAa+C,YAAhDA,EAAA5C,aAAAkC,EAAAU,GAAAV,EAAAU,GAAAxC,KAAA,KAAAsB,cAAAA,IAvCM/K,KAAKmI,SAASnI,KAAKqI,OAAOC,OAyC5B,MAMJoE,OAAKC,SAAAA,GAvCL5E,IAyCAA,KAAAA,MAAAA,KAAAA,UACKA,GAAmBmC,IACtBA,GAA0B,EAC1B7I,SAAAuL,KAAcL,iBAAgBM,aAA9BxL,EAAAwL,MAAA,IArCF7M,KAAKiI,KAAOA,GA0CT,IAAAhB,EAAwBrE,KAAAA,WAvCzB5C,KAAKiI,KAAKd,SAAWF,EAAcgB,KAAKd,UA0CxCF,EAAe6F,KAAX5F,UACJlH,KAAIiI,KAAKM,aAAM4B,YAAiB5B,EAAiBwD,KAAK7E,UAExDlH,KAAI+M,yBACJ/M,KAAIgN,KAAAA,iBAAYC,QAAkBjN,KAAlCgI,kBAAA,GACAhI,KAAIuL,cAEFlK,EAAA4D,UAAAzC,GAAawK,kBAAbhN,KAAA6I,aAAA,GACDxH,EAAArB,KAAAiI,MAAAzF,GAAA,cAAAxC,KAAA2L,eAAA,GAjPmBtK,EAAArB,KAAAiI,MAAAzF,GAAA,WAAAxC,KAAAwI,YAAA,GA2MpBnH,EAAErB,KAAKiI,MAAMzF,GAAGnB,EAAEoB,WAAYzC,KAAKgJ,cAAc,GAyCnDkE,EAAAA,KAAAA,MAAAA,GAAgB7L,EAAAoL,UAAAzM,KAAAkJ,aAASiE,IAGtBC,OAAA,WACDpN,KAAA2L,gBAxPoBtK,EAAA4D,UAAAyG,IAAA,kBAAA1L,KAAA6I,aAAA,GAkNpBxH,EAAErB,KAAKiI,MAAMyD,IAAI,cAAe1L,KAAK2L,eAAe,GAyCtD3D,EAAAA,KAAAA,MAAAA,IAAkB,WAAAhI,KAAAwI,YAAY,GAC5BnH,EAAArB,KAAIiI,MAAKA,IAAKrF,EAAAA,UAAUC,KAASqG,aAAA,IAEjC,IAAKsD,EAALvE,KAAAd,UA9PoBnH,KAAAiI,KAAAxC,gBAAA,YAiQtB+G,EAAAA,KAAwBtF,UACtBlH,KAAMqN,KAAO5H,gBAAb,aAEAzF,KAAI2M,8BAEF5E,GACW3C,IACV8E,GAAA,EACD7I,EAAA,QAAIqK,IAAUzE,aAAcI,EAAAA,MAAMF,KAIrCgB,SA7QqB,SAAA8E,GAsOpB,IAAGjN,KAAKiI,MAASjI,KAAKiI,KAAKrF,UAAUC,SAAS,kBAA9C,CA0CA,GAAMiI,KAAAA,MAAQwC,CACd,GAAItN,KAAIW,MAAOA,OAAUQ,EAAa,MAChC2J,MAAAA,MAASgB,YAAb9L,KAA4BuI,MAAA4B,WAAA4B,KAAA/L,MAE1B8K,GAAAA,GAASrF,KAAAA,MACVuH,EAAAC,EAAAlB,KAAA/L,KACDA,MAAIuI,QAAUtB,IACZ6D,EAAAgC,KAASrH,EACVzF,KAAAuI,MAAAyE,KAIHE,eAAMK,SAAc5K,GACpB,KAAM6K,GAAML,EAAAnD,aAA2ByD,KAAUC,MACjDP,EAAAA,EAAgBnD,UAEhB,OAAAmD,IAGEnF,iBAAUO,SAAMgB,GACd7G,KAAEiL,KAAAA,UAAF9K,SAAA,oBACD7C,KAAAiI,KAAAxD,MAAAmJ,QAAA,OACF5N,KAAAwM,2BAGHqB,uBAAkB,WAGdxM,IAAE4D,GAFCoI,GAAKzE,KACRkC,EAAKlC,MAAAA,UAAL9G,MAAAiK,KAAAsB,EAAApF,KAAA2D,YACE3G,EAAF,EAAYzC,EAAGsI,EAAA3J,OAAcR,IAC7B,GAAEsE,EAAFtE,GAAY6B,WACVyC,EAAaoC,MAAQH,UACxB4D,EAAAnK,GAAAyE,aAAA,YAAA6B,EAAAI,MAAAH,WAtCK,IAAUD,EAAcI,MAAMF,WAyCtCiC,EAAAA,GAAAA,SAAqBnC,EAAAI,MAAAF,YAKjB9F,yBAAA,WAvTkB,IAAA,GAwTnByJ,GAAAwC,MAAApF,UAAApG,MAAAiK,KAAAsB,KAAApF,KAAA2D,YAxTmBjL,EAAA,EAAAA,EAAAmK,EAAA3J,OAAAR,IAkRO,GAArBmK,EAAMnK,GAAGmL,WAyCjBnD,EAActB,MAAAH,UACR4D,EAAKpC,GAAAA,gBAAY,cAEf,IAAAzB,EAAoBI,MAAAF,UACtB2D,EAAKvC,GAAAA,gBAAmB,cApC9BM,YAAa,SAASnG,GAyCtBsG,GAAAA,GAActG,EAAAC,SAAAsC,UAAYjF,KAAAkN,eAAAxK,GAClBoL,EAAAA,sBAAgBC,KAAAN,UAAAC,aAAA,qBAAAK,KAAAN,UAAAC,UACpBH,KAEAC,EACExN,KAAAmI,SAAKA,KAASE,OAAKA,MAEpBrI,KAAAuI,MAAAgB,oBACD7G,EAAIiL,mBACiBE,iBAArB,WARF7N,KAaO4I,wBACL5I,KAAI4I,uBAAqBoF,EACzB3M,EAAA4D,UAAK4I,GAAAA,aAAL7N,KAAA2I,cAAA,GACAtH,EAAA4D,UAAKkE,GAAAA,UAALnJ,KAAAyI,WAAA,GACApH,EAAA4D,UAAKgJ,GAAAA,OAAgBjO,KAAA2L,eAAA,KAAAvC,oBAArB,WAKDpJ,KAAA4I,wBA3VmB5I,KAAA4I,uBAAA,EAqTlBvH,EAAE4D,UAAUyG,IAAI,aAAc1L,KAAK2I,cAAc,GAyCrDuF,EAAAA,UAAWxC,IAAA,UAAA1L,KAAYyI,WAAA,GACrBpH,EAAM8L,UAAAA,IAAa,OAAKD,KAAAA,eAAxB,KAICvE,aAAA,SAAAjG,GACGyL,KAAAA,YACJzL,EAAAC,SAAOwL,SAAiBC,iBAAA1L,EAAA2L,gBAAApJ,SAAAmJ,iBAClBD,KAAAA,MAAAA,SACJnO,KAAImO,MAAAA,QAAgBG,KAAAA,OAKtBtF,aAAA,SAActG,GACZ4I,GAAAA,EAAAA,eAAkB3I,CAGlB4L,GAFA9E,KAAAA,YAFY,EAGZ0E,KAAAA,qBAAiBA,EACjBI,EAAAA,QAAAA,OAAeJ,EAEflD,WADAuD,MAAAA,SAAAA,KAAkBL,OAAAA,KAGpB,KAAOnO,KAAPkO,UAAAxL,GAAA,MApXoB1C,MAAAiO,iBA8UhBnJ,EAAGpC,EAAEgB,QAAQ,GAAG+K,QAyCtBR,EAAAA,EAAAA,QAAiB,GAAAS,QACfC,KAAK7F,EAAAA,gBAxXe,CAmVlB,GAAI9I,KAAK0I,YAA0B,GAAZhG,EAAEsL,SAAgBhO,KAAKkO,UAAUxL,GAAI,MAyChEkM,MAAAA,mBACE5O,KAAImJ,qBAAqB,EACvBnJ,KAAAiO,iBACDnJ,EAAApC,EAAA+L,QACDnL,EAAKyF,EAAAA,QAvCD4F,KAAMjM,EAAEmM,cA6CXX,UAAA,SAAAxL,GACD,GAAIyK,GAAKpE,KAAe4F,eAAY1F,EAAAA,OAClC,KAAAkE,EAxYkB,MAyYnBnN,MAAAmI,SAAAnI,KAAAqI,OAAAC,OAzYmB,CA6YpB,KADFY,GAAAA,GAAaiE,EAAAnD,WACL8D,GACJK,GAAuBlJ,SAAA2H,QACrB9H,EAAgB2J,aADKN,EAAA5H,cAAA,WAAAK,OAAAgD,iBAAAuE,GAAA,gBAErB7K,EAAgBoL,EAFK1E,UA1BzB,OA0ByBmE,GAAvBA,GAAAlJ,SAAA2H,KAMD5M,KAPD2C,QAQE2I,eAAKsD,EAAAA,OACH9J,KAAGpC,EACHY,gBAFqB6K,EAGrBQ,cAAQE,EAAAA,UAHaL,iBAAvBL,EAAAG,aAKDrD,cAAAC,EAAAiC,KAtCM,GAGTc,gBAAiB,SAAS9C,GAyCxBnL,KAAI8I,cAAA9I,KAAoBiJ,iBAAqBsB,KAAXxB,eAA6BoC,EAC7DzI,KAAEiL,SAAAA,KAAFtF,OAAAqB,YArCJkF,eAAgB,SAASlM,EAAGyI,GAyChB,MAAZ3C,KAAAA,SAGGxI,KAFD+I,eAEsBwB,EAErBvK,KAAAuI,MAAA8B,SA1amB,IAAArK,KAAAuI,MAAA8B,OAAA0B,KAAA/L,OAoYhB0C,EAAEiL,iBA2CN3N,KAAO+I,eAAA4F,KAAA3O,KAAAiJ,iBAAA0F,KAAA,MACL7J,KAAGmE,iBAAAjJ,KAAwB+I,kBAI9BG,YApbqB,SAAAxG,GA6YhBrB,EAAEyM,gBAyCRjD,KAAAA,eAAqBnI,GACb4H,EAAAA,EAAAA,QAAYmB,GAAAA,QAClBnI,EAAOZ,EAAAgB,QAAA,GAAAgL,QACL5J,KAAQgK,EAAAA,YAERH,KAAAA,qBAHK,GAKLI,KAAAA,eAAYrM,GALdoC,EAAApC,EAAA+L,QAxboBnL,EAAAZ,EAAAgM,QAwZhBC,KAAMjM,EAAEmM,aA6CZpG,UAAMuG,SAAatM,GACjBuM,KAAAA,YAA2BzL,IAAXwL,EAAAA,QAEhBE,KAAAA,MAAAA,QAAoBlM,IAAIiM,KAAAA,MAAcE,MAAQvI,KAAAA,OAHhDlE,EAIE0M,kBAIA/L,WAAAA,SAASX,GADXA,EAAAgB,QAGS0L,OAAYC,EACnBhM,KAAAA,gBACDrD,KAAAuI,MAAAgC,QAAA,IAAAvK,KAAAuI,MAAAgC,MAAAwB,KAAA/L,OACDgP,EAAAA,kBAIAvD,iBAAYxG,WACZ,GAAIqK,GAAeC,KAAAA,OAAAA,gBAAiBC,UAAAxP,KAAA2C,OAAA4L,aAClCe,QADFxK,EAAA9E,KAEO+I,eAAAjE,EAAA9E,KAAA8I,cAAAhE,EACLwK,EAAAA,KAAQrK,eAASwK,EAAAA,KAAY3G,cAA7BxF,EAAAoM,EACAJ,KAAMK,KAAAA,eAAUhB,KAAaiB,KAA7B9G,cAAA6F,OAIH9D,oBA/dqB,WAubpB,GAAMP,GAAOtK,KAAKyL,kBA0CpBU,QACExJ,EAAAA,KAASA,IAAAA,EAAUmC,GAxCjBxB,EAAG5B,KAAKoN,IAAIxE,EAAKhH,GA0CnBX,KAAO8G,EAAKhF,KACZ9B,WAAY8B,EAAMmD,EAAAA,EAAAA,OAAAA,QAClBjD,WAAW2F,EAAAhH,EAAW,EAAA,KAAA,SAIrBuM,gBAAa,WACf,GA3eHxM,GAAA,EApEF2L,EAAAhP,KAAA2C,OAAAwL,gBAmjBAc,EAAAD,EAAAxL,wBAxCQsM,EAAa9P,KAAK2C,OAAO8G,KAAKjG,wBAC9B0L,EAAexN,KAAKsB,IAAIiM,EAAcE,OAAQvI,OAAOmJ,aAAeD,EAAWX,OAC/EC,EAAYU,EAAW/L,IAAMrC,KAAKyB,IAAI8L,EAAclL,IAAK,GAyC3DiM,EACJhQ,KAAA2C,OAAA6L,iBAAqB9M,KAAAsB,IAAAgM,EAAAzI,aAAAK,OAAAmJ,YAvCbb,GA+BL,GASIvJ,EAASjE,KAAAsB,IATb,GAAA,GASakM,GAEVxJ,EAXH,KAYCE,EAASqK,KADI9M,KAXd,GAWciM,EAXd,KAcCc,EAAWV,UAHE9N,KAAAyB,IAAA,EAAAzB,KAAAsB,IAAAmN,EAAAnB,EAAAQ,UAAAnM,KAMb+M,SAAU/O,SANG8L,EAAAyC,EAAAS,GAObC,GAAAA,GAAWrL,SAPEwK,YAAA,cAxBb,OAgCAc,IAAajB,EARAC,gBASbhH,EAAO0H,gBATM,WAAAL,GAAA,GAAA,EAAAS,IAAff,EAAArK,SAAAwK,YAAA,SAYEnO,EAAOoE,UAAUC,WAAnBiK,GAAA,GAAA,GAtCIN,EAAMe,KAAOA,GAERlD,EAAWqD,cAAclB,IAmElCnD,cAAiBsE,SAAbL,EAAAzN,GA/DFA,EAASA,GAAU3C,KAAK2C,OA6EtB+N,EAAAA,KAAAA,MAAJhJ,GAAAC,EAAA,iBACAhF,EAAKyN,KAAW1K,MAAAA,GAAhB,kBAAAuE,EAAAtH,EAAAsI,cAAAlB,MA1EEpF,WAAW,WA4ERe,EAAAA,KAAS4K,MAAV5I,GAA8C,GAChD/E,EAAA8G,KAAAhF,MAAAmD,GAAAjF,EAAAsI,cAAAtB,SACDyG,GAAAA,EAAArE,KAAA/L,KAAA2C,IA1EGyF,KAAKpI,MAAO,OA8EhB+G,KAKI4J,WACJ,QAAAX,GAAIpK,GACJ,GADcF,gBAAAA,KAAAA,GACVkL,EAAJ,CACA,GAAAvD,GAAa3H,KA1ETA,GA4EAA,YAAS4K,GACXrL,UAASC,OACVgL,UAAA,OACGxK,YAAS6K,SACXtL,YAASC,SACVkL,SAAA/O,EAAAwL,KA1ECyD,WAAW,EA4ET3K,aAAJ,EA1EE4C,UAAO0H,GA4ETY,UAAc,KAEZxP,GAAAC,OAAKoE,EAASE,EAEb,IAAAkL,GAAAL,KAAAM,iBAeGC,EAAQtL,KAARsL,iBAEOC,EAAXL,aAYGM,EAAMT,KAANS,kBA7DDR,GAAa,CAGjB,IAuEI1Q,KAAAoQ,SAAA1K,EAAA0K,UAAA/O,EAAAwL,KAvECnH,EAAS4K,WAAc5K,EAAS6K,YAArC,CA6EMY,GAAOC,EAAAA,OAAWhN,EAAIuB,EAMxBD,GAAAE,OAKF5F,MAAAgR,IAAA3P,EAAAqE,EAAAE,SAxEEF,EAAS4K,WA2EXrL,SAAIS,cAAJA,EAA0BE,SAAAhD,UAAA0C,IAAA,aAEzBI,EAAA6K,aAzEDtL,SAASC,cAAcQ,EAASE,SAAShD,UAAU0C,IAAI,eAGrDK,EAAQ4C,OAAO5C,EAAQ4C,MAAM8I,gBAAgBrF,KAAKhM,MA4EtDsR,KAAMA,OAAUlR,SAAAA,GACZkR,GAAAA,GAAQ,EACVC,IAAAA,EAAAA,WAKEC,GAAAA,EAAAA,QACArM,EAAS9D,EAAEqE,MAASE,OAGxB0H,MAAAmE,QAAApB,IAAA,CACI3L,EAAO8M,IAAAA,SAAXE,GACAT,GAAAvL,EAAAiM,OAAAD,KAME1R,KAAKgK,IAAAA,YAAL,EADF,IAAAgH,GAAA3P,EAAAqE,EAAAE,QAGAgM,GAAQpP,QACNwO,EAAIG,OAAQF,GACZD,EAAAxK,KAAA,MAAAH,MAAAwL,IAAA,SAAAC,GA1EMpM,EAAS4K,YACXjP,EAAEyQ,GAAIC,QAAQjB,GA4EdkB,EAAAA,GAAAA,OAAYb,IAEdxM,EAAW4L,aACTY,EAAAA,GAAMvO,OAANqP,OAKA5Q,KAAAA,IAAE6Q,WAAAA,MAASC,GAAX5J,MAAA6J,OAGD/Q,EAAA,WAVH,QAeWgR,GAAexP,GACxB,GAAAmO,GAAA3P,EAAAqE,EAAAE,SA3EIuL,EAAQnR,IACZ0Q,IAAa,CA6Eb/L,IAAAA,GAAWtD,EAAA8P,GAAYhN,QAAA,KAKrB8D,GAAAA,GAAKrF,QAAUiC,SAAO,MACtB,IAAIyN,GAAAA,QAC+B,SAAnCA,SAAAA,cAAsB,QAAAC,aAAa,SAAAC,EAAA,SACjCV,EAAAA,GAAGlP,WAAUiC,KADf4N,oBAAA,eAAAD,EAAA,QAGER,qBAAe,kBAVnBxI,UAAA,eAAAgJ,EAAA,QAhEEE,WAAc,oBA8EhB/N,WAAIgO,WA3EFC,EAAS/N,UA6EX,KAMI,GAAAa,EAAImN,YACJ,CAAenN,GAAAA,aAAkBc,EAAjCZ,SAGEqL,EAAAA,EAAKjF,SAAUzH,GAAAA,MAAf,UAAA8N,IAGA,IAAAf,GAAIwB,SAAQC,GACVzB,GAAAA,EAAAA,EAAOQ,cAAP,GADF,QAECR,IACUtF,YAJb,aASF,IAAAwF,GAAAA,wBAAA9L,EAAAsN,UAAA,YA3EF7N,EAAS9D,EAAEqE,EAASE,SAASzB,QAAQ,aA6EnCkJ,EAAK+C,EAAL5J,KAAA,MAhENyM,GAAAvO,OAAA8M,GAoEAQ,EAAAA,KAAUxP,SAAU2P,OAClBc,EAAI9B,QAAJ,0BAAAzL,EAAAwN,YAAA,aACAD,EAAIrB,KAAAA,WAAYlM,MAChBkM,IAAAA,GAAalM,EAAAA,EAASsN,SAAtB7O,QAAA,aAAAqC,KAAA,aACAoL,EAAAvQ,EAAiBuB,EAAUiC,SAAOV,QAAlC,aAAAqC,KAAA,cACAoL,GAAAA,EAAQvL,SAASzD,GAAAA,MAAjB,sBAAA,WACA+B,KAAAA,WAAW/B,UAAYuQ,OAAA,cAErBvB,EAAIM,GAAAA,MAAUf,WACd9P,GAAE6Q,GAASkB,KAxETpB,EAAYb,EAAMnH,WAAW9E,cAAc,UAC/C,IAAIlF,KAAK4C,UAAUC,SAAS,QA+E5BwQ,WAAAA,WACiBlC,EAAAvO,UAAAiC,OAAA,QA7EbsM,EAAMvO,UAAU0C,IAAI,QA8ErBK,EAAAA,GAAYA,KAAAA,EAAQC,WACnByH,SAANnI,cAAAQ,EAAAE,SAAAhD,UAAA0C,IAAA,iBACII,IAAAA,GAAWyL,EAAAnH,WAAA9E,cAAA,QACbU,GAAAA,GAASqK,OACTqD,EAAAA,GAFalP,IAAA,UAAA,eASXmP,IAAAA,KAAa7N,UAAS4N,SAA1B,QAAA,CA6BG,GAzBD3O,WAAA,WADFwM,EAAAvO,UAAAiC,OAAA,QAeIa,EAAS6C,UAAOjD,IAAA,QAClBI,EAAAA,GAAe2L,KAAAA,EAAAA,WAChBpM,SAAAC,cAAAQ,EAAAE,SAxFUhD,UAAUiC,OAAO,kBA0F5BxD,EAAAqE,EAAAE,QAAA,gBAxFoB0G,QAAQ,SAASwF,GAC7BA,EAAGlP,UAAUiC,OAAO,cA2FtBoM,EAAAA,GAAJ7M,IAAA,UAAA,WAGCsM,EAAA,MAMGpD,IAAAA,EAAA/E,MAAJ,CAEI0I,GAAQvL,GAASiM,EAAOD,MAAxBU,MADFS,KAGKW,EAAAnS,EAAAqE,EAAAE,SAAAY,KAAA,MACLyK,IACDuC,GAAAnN,MAAAwL,IAAA,SAAAH,GAxFOT,EAAKjF,KAAK0F,EAAKnN,QAAQ2B,MA2F3BG,EAASzD,QAAAA,SAAAA,GACb,GAAAkQ,GAAAC,EAAAvM,KAAA,SAAAsL,GACWb,MAAXa,GAAA2B,OAAA/B,GAEMrB,GAAO3K,KAAS6C,KAEpBmL,EAAcnL,MAAAoL,QACZjC,EAAakC,MAAbC,QAA2BC,GACvBpO,KAtFJ2H,EAAK+C,SAASrE,KAAKsB,EAAMA,EAAK+C,cA0FN4B,EAApBxP,GAAA,MAAA,WAID,GAAA2O,GAAAnR,KACF4R,EAAAvQ,EAAAqE,EAAAE,SAAAzB,QAAA,aAAAqC,KAAA,YACDnF,GAAA0S,KAAQhC,EAAQiC,WAChB3S,EAAAgF,MAAQ3B,GAAR9B,UAAAiC,OAAA,QACD+M,EAdDvL,MAAA,GAAAzD,UAAA0C,IAAA,QAHFX,WAAA,WAtBFM,SAAAC,cAAAQ,EAAAE,SAAAhD,UAAAiC,OAAA,iBA/CI,IAAIqN,GAAUf,EAAMnH,WAAW9E,cAAc,QA0F5C1C,GAAG0P,GAAOkB,OACP1B,EAAAA,GAAOtN,IAAb,UAAA,eAOI2F,kBAFY,QAAAsJ,GAAd1N,GAIA,GAJAsO,gBAAAjU,KAAAqT,GAIA1N,GAAIwF,EAAJvF,QAAA,CACAyH,GAAAA,GAAK6G,KACHxO,GACEyF,YAAAA,GACDmI,YACFa,KAJD9S,EAAAoS,OAAA,KApFFrD,SAAU/O,EAAEwL,KA0FVQ,UAAK6G,GAGNlU,MAlBDkU,aAmBE7G,EAAAA,OAAK6G,EAAUlI,EACboI,IACArK,IADOrE,EADW4N,SAEX5B,EAAKnN,MAFd0D,EAAA5G,EAAAqE,EAAAE,QA4BAF,GAAIsI,OACFtI,EAAM2O,MAAAA,gBAAoBC,KAAAA,MAJlCtU,KAAA2R,OAAA,SAAAtB,EAAA3L,GAWE,GAAAuM,GAAY,EACV,IAAAvL,EAAS6O,WAITC,GAAAA,EAAJjM,QACMkM,EAAAA,EAAYlM,MAAZkM,OAhGEnH,MAAMmE,QAAQpB,IAAlB,CAkGEqE,EAAAA,IAAAA,SAAoBhD,EAAAoC,GACnB3O,GAAQO,EAAAiM,OAAAD,KACN9O,KAAAA,GAKP,IAAKuC,GAAL9D,EAAaqE,EAAAE,QACbT,GAAAA,MAAOvC,GAAAA,UAAiB0C,IAAA,qBACxBH,EAAAA,QACAA,EAAAA,OAAOvC,GAJT+B,WAAA,WAMMgQ,GAAAA,GAAAA,EAAiBpM,MAAjBoM,KACSrH,OAAApF,UAAApG,MAAA8S,MAAA5D,EAAA,GAAA6D,iBAAA,OACNjS,IAAUiC,SAAAA,EAAOiP,GACxB3O,EAAOvC,QAAUiC,OAAOwL,EAAAyD,GAAxB/J,MACOnH,EAAU0C,UAAjBI,EAAA4N,SAAAnS,QAJFuE,EAAA4N,SAAAwB,QAAAhB,IAAA,IA3FYpC,EAAK9O,UAAU0C,IAAI,YAEnB+H,EAAK6G,UAAUlI,MAkGzBoI,MAAAN,EAhGY/J,MAAOsG,EAAKyD,GAAK/J,SAqGzByK,EAAAA,GAAAA,SAAFnE,EAAAyD,GAAApO,EAAAqE,OAjEE2H,qxBAkEF/M,EAAAA,GAAWD,OAAXC,gCAAuBwP,EAAvBxP,YAAuB0L,EAAAyD,GAAA/J,MAAvBpF,YAKAsD,EAAAzF,GAAMuS,MAAAA,KAAAA,WACJ,GAAI9D,GAAAA,IACJ,IAAAS,EAAMsD,UAAQnS,SAAd,YAAA,CACAoO,EAAAA,UAAalD,OAAKkH,YAClBvD,EAAAjM,gBAAO,gBAJiBiM,EAA1BxM,cAAA,SAAAgQ,SAAA,CAMA,IAAIC,IACAJ,MAAAA,EAAAA,GAAAA,QACJK,MAAAA,EAAAA,QAAmBD,QAEnBE,MAAAA,EAvBKhI,GAAA6G,UAAA5H,QAAA,SAAAoF,EAAAoC,GAxEGpC,EAAK3H,QAAUuL,EAAQvL,QAkGjCoB,EAAA2I,KAIEzG,EAAMmH,UAAAA,OAAcrJ,EAAA,GAClBqJ,EAAAA,SAAeI,MAAjB5U,KAAAuV,eAGAlI,GAAM4H,UAAAA,MACAF,MAAAA,EAAAA,GAAAA,QACJhL,MAAIkH,EAAAA,QAAJ2C,SAEA3C,EAAAA,UAAalD,SACb2D,EAAA9O,UAAO6R,IAAUxD,YAJOS,EAA1BtM,aAAA,gBAAA,GAMAsM,EAAIyD,cAAJ,SAAsBA,SAAiB3F,EACvC9J,EAAIqP,SAAAA,MAAsBA,KAAAA,cAO3B1T,GAAA,WAUEA,EAAAmU,GAFgBlU,QAGjBiT,mBAAMQ,WACN/U,KAAAsM,QAASmJ,SAAAA,GACP,GAAIC,EAAAA,UAAUD,SAAd,SAAAzH,EAAApL,UAAAC,SAAA,UAAA,CACA6S,GAAQA,GAAY1H,EAApBsG,YAAAqB,MACA3H,GAAI7I,UAAJ,SAAAkP,EAAA,UACAM,EAAAA,GAAAA,QAhHAiB,yiBA+CGvU,EAAT,WA1BEA,EAAE,SAASkT,qBAkGblT,EAAA,WAAAkT,sBAGAlT,IACMoT,GAAKnS,SAAAA,GAAAA,MAAajB,GAAA,IAAtB8D,GAAmCkB,MAAA,IADrCqO,EAAA,SAAAvP,GA7FOA,IAkGPA,EAAAvC,UAAA0C,IAAA,WAhGEH,EAAOvC,UAAUiC,OAAO,YACxBM,EAAOvC,UAAUiC,OAAO,UAmGpBxD,EAAgB,SAAA8D,GACfS,IACLT,EAAMS,UAASzB,OAAQ,WACvBgB,EAAI8P,UAAAA,OAAcrP,QAClBT,EAAAvC,UAAA0C,IAAA,cAEAM,EAAA,SAAAT,GACAR,IAAWQ,EAAAvC,UAAcA,OAAAA,WAAduC,EAAXvC,UAAAiC,OAAA,YACAM,EAAAvC,UAAA0C,IAAA,SAGAjE,GAAAA,QAGFwU,KAAA,SAAAZ,GA5FI,IAAI5T,EAAEmT,aAAN,CAgGFnT,EAAAmT,cAAW,EACX7P,WAAO6P,WACLsB,EAAAA,cAAAA,GACD,KAHHzU,EAAAoU,WAAAzJ,KAAAiJ;oBAKMc,IAAAA,GAAA1U,EAAA,qBAANgF,MAAA,GACU0L,EAAV,WA5JF,GAAAd,OAAAA,EAiEQ,OA+FRA,GAjGsB,OAiGtBlD,KAAAkH,GAAAA,EAAAe,MAAA,KAAA,GAAAf,EA/FeR,EAAUxD,KAEfkE,KAAeA,EAAc3F,UAAY,GACzCuF,IAAmBA,EAAkBvF,UAAY,GACrD4F,EAAmBD,GACnBT,EAAkBK,GAClBM,OAAOhJ,SAAS4I,KAoGlBgB,OAAKtQ,WACCuQ,IAAAA,EAAAA,aAAAA,CASAxQ,EAAAA,cAAN,CACEpE,IAAOoE,GAATrE,EAAA,qBAAAgF,MAAA,EACIlB,GAAAA,WAAWO,KACfP,IAAOqB,GAAY9B,EAAOwR,WAAAA,EAAAA,WAA1B/U,OAAA,GACIgV,EAA0B9F,WArG1B,GAAIY,OAAAA,EAGJ,OADAA,GAqGJ,OArGiBlD,KAAKkH,GAAeA,EAAYe,MAAM,KAAK,GAAKf,EACtDR,EAAUxD,KAwGjBkE,GAAF,KAAuB1S,EAAY,GAAA+M,UAAW,GACxCuF,EAAe,KAAAA,EAAA,GAAAvF,UAAA,GACnBmF,EAAe1P,GACfyP,EAAeK,GACfM,OAAIe,SAAWC,GACf1R,WAAIyR,WACFC,EAAAA,cAASzT,GACTyT,OAGApR,cAASqR,EAKZC,SAfD,SAAAtB,GAoBE,IAJA,GAAAjP,GAAA3E,EAAFoU,WAA2BhT,UAAY,SAAW+T,GAChD,MAASC,KAEJJ,EAAU5B,EAAAQ,GACXmB,EAAAA,WAAWC,OAASK,EAAAA,GAAAA,CACxB,GAAIN,GAAAA,EAAYA,WAASO,KACvBN,GAAAA,EAASzT,MAAU0C,KAAI,EACvB+Q,IAAAA,GAASzT,EAAUiC,EACnBuR,GAASxT,GAETqC,EAASqR,GACTjB,OAAKe,SAASM,MAQpBrV,EAAA,QAAKsQ,GAAL,MAAc,QAAW,WACnBV,KAAAA,aAAJ,aACA5P,EAAA4U,UAOA,IAAIjF,GAAM,SAAApL,GACVoL,IAAI4F,EAAAA,cACAlS,EAAOuM,QAAX4F,OAXFxV,EAAAuE,GAAAzB,QAAA,MAAA2S,GAAA,cAAA,CA3FA,GAAI7B,GAAcrP,EAAQrB,QAAQsS,IA6GhCE,KACiBnR,EAAAhD,UAAA0C,IAAA,YA1GnBX,WAAW,WAAA,MAAMiB,GAAQhD,UAAUiC,OAAO,aAAa,KAIvDxD,EAAEwU,KAAKZ,KA6GPtP,GAAAA,QAAUA,GAAAA,MAAAA,KAAV,WACAmQ,EAAe9V,QAGbgX,EAAAA,QAAOxU,GAAA,YAAA,KAAA,WAHTnB,EAAAmT,cAKElT,EAAFtB,OAGC,IAFD+V,GAEOtF,KAFPwG,iBAGEvR,GAAAA,QAAAA,QAAAqQ,QAaI9Q,UACA5D,QAAAA,GAAE6V,GACH,GADGA,gBAAAA,KAAAA,GAFJvR,EAGC,CACF,GASDwR,KACFzR,GAAAA,OAAS0K,EAASrE,EAzGL1K,GAAEqE,EAASP,QACjBqB,KAAK,OAAO9B,OAwFjBwR,u+BAqBJ5U,IAAF6U,GAAS9U,EAAA+V,MAAA1R,EAAA2K,KAAA3K,EAAAe,KAKLpF,GAAA,WACAA,EAAIgW,gBAAO7U,GAAAnB,EAAAoB,WAAX,WACA6U,IAAAA,KAAWD,SAAXC,CACAC,GAAAA,GAAa1L,SAAetF,cAA5B,kBA3GI,IAAK8P,EAAL,CA6GApR,GAAAA,GAAAoR,EAAwBmB,kBACrBH,IAA6BI,SAAjBzQ,EAAZ2P,YACHU,EAAOzU,UAAA0C,IAAA,YACL1B,EAAUyC,UAASqR,OAAAA,WACnBtB,EAAQmB,UAADjS,IAAiB,WAF1B8Q,EAAAxT,UAAAiC,OAAA,QADFI,SAKOqR,eAAA,mBAAA7Q,gBAAA,YACEgS,EAAAA,oBAAkBrB,EAAAoB,mBAAA5U,UAAAC,SAAA,UACvBwU,KAAOZ,UAAA,QAIRpV,EAAA,oBAAMmB,GAAAnB,EAAAoB,WAAA,WACL4U,IAAAA,KAAOZ,SAAPY,CACEzT,GAAAA,GAAOA,SAAasB,cADf,kBAEL,IAAAmR,EAAA,CAFK,GAAPD,GAAAC,EAAAK,sBAIDN,IAAA,aAAAA,EAAAO,YACFN,EAAAzT,UAAA0C,IAAA,QAlBH+Q,EAmBOzT,UAAAiC,OAAA,WACAwS,EAASzU,UAAGoE,IAAZ,WACHqQ,EAAOzU,UAAAiC,OAAA,YACLjB,SAAOgD,eAAA,eAAgCI,gBAAjC,YACNoP,EAAOM,wBAAiBN,EAAAM,uBAAA9T,UAAAC,SAAA,cAF1B7C,KAAAyW,UAAA,UAUHzW,KAAA2R,OAAA,WAzCI,GAAAV,GAAA,EAjEH,IAAI3D,MAAMmE,QAAQ0E,GAAlB,CA8GEwB,EAAAA,EAAU1S,OAASC,EAKxB,IAAA8L,GAAA3P,EAAAqE,EAAAP,QAAAqB,KAAA,UAlDHwK,GAAA4F,QAoDE5F,EAAAtM,OAAMuM,OACN8F,UAOA1V,QAAAA,GAAAsE,GACEtE,GADaoB,gBAAAA,KAAAA,GACXmV,EAAFvW,CAtGAsE,EAAUA,KA8GV,IAAKA,IACDD,GAAAA,EAAAA,OACJA,SAAcrE,EAAEoS,KAChB/N,MAASmS,GAETxW,GAAI+E,OAAAA,EAAJT,GACID,GAASU,EAAOyR,QAClBzR,EAAAA,QAAAA,EAAwBV,QA3GxBA,EAASmS,QAAU,EA+GrB,IAAMb,GAAAA,eAAQtR,EAAAsR,MAARA,iBACAc,EAAAA,mBAAUpS,EAAAQ,GAAV4R,KAA+CnS,EAA/CmS,mCACAC,EAAepS,IAAAA,EAAQoS,EAEvB3H,UAAW1K,GAEjB1F,MAAI0F,KAASkR,WACXoB,EAAAA,MAAAA,MACK/S,SAAA2H,KAAAhK,UAAAC,SAAA,mBACLmV,SAAAA,eAAAA,EAAkC9R,IAAlCzB,MAAAY,QAAA,QACDV,WAAA,WACDM,SAASgT,eAAkBvS,EAAAQ,IAAAtD,UAAA0C,IAAA,UACnB1C,EAAAA,gBAAiB8C,EAAvBwS,aAGExS,SAASkR,eAAOlR,EAAAQ,IAAAzB,MAAAY,QAAA,QAAAJ,SAAAqR,eAAA5Q,EAAAQ,IAAAtD,UAAA0C,IAAA,UA3GhBjE,EAAE6V,gBAAgBxR,EAASwS,WA+G3B7W,EAAA,QAAAqD,OAAAiT,GAHFtW,EAAA8V,GAAA,GAAA5S,QAAA4T,UAAAzS,EAAAwS,QAQD7W,EAAA8V,GAAA3Q,KAAA,WAAA9B,OAAAgB,EAAAmS,SACDnS,EAAA0K,SAAarE,KAAWrG,EAAA0K,SAAA1K,EAAAwS,UAKtB7W,GAAAA,QACE6V,gBAAa,SAAAtR,GACb,GAAIvE,GAAEkC,SAAF2B,cAA2BU,GAC7ByH,EAAKzK,EAAAA,WAEHyK,MAAAA,GACAhM,EAAEA,EAAA,oBACF+O,GAAAA,MAAcA,GAAAA,WACfmH,EAJDa,EAAAvM,UAAAuM,EAAA7R,aAMW,QAAX0R,SAAAA,IACA7H,EAAAA,MAASrE,GAAKqE,YAAdgI,EAAAX,WAAA7Q,OAAAF,WACD2Q,EAAAjT,KAZHR,KAAAyT,EAAAhR,MAAA,GAAAqR,WAAA,GAAA,KAcD3T,IAAAwT,EAAA,GAAA,OAGOlK,EAAOoK,WAAb,IACMlU,EAAAA,KACCX,KAAAA,OACL+B,IAAW4S,EAAY,GAAA,OAGpBF,EAHHjT,KAIKR,KAAAA,EAAA,GAAA,KACHqU,IAAWD,EAAX,GAAA,OAKFX,EAAFhR,MAAe,GAAAW,YAAOoR,EAAaX,WAAA7Q,OAAAF,WACjC2Q,EAAKzU,KADPgB,KAAAgD,OAAAF,WAAA2Q,EAAAhR,MAAA,GAAAW,YAAA,GAAA,KADFjD,IAAAwT,EAAA,GAAA,OAOQS,EAAAA,KACFA,KAAOpU,EAAA,KACToU,IAAMpV,EAAN,GAAuB,QAxG7BgV,aAiHA,WAAmB,GAAAD,GAAA1S,SAAAC,cAAA,oBA/GZyS,KAgHLtW,EAAAkE,UACEoS,EAAKU,UAASA,OAAMpU,UACpB0T,EAAIW,MAAAA,QAAJ,WAGAjX,EAAA,WACAuF,OAAI2R,SAAJ,WAEC,GADCtT,SAAAC,cAAA,qBACSqT,CACTD,GAAAA,GAAArT,SAAAC,cAAA,qBAAAX,QAAA4T,SADK9W,GAAA6V,gBAEAgB,KAGN7W,EAAA,QAAAmB,GAAAnB,EAAAoB,WAAA,UAAA,SAAAC,GACDrB,EAAAuW,sBAKEvW,SACE,QAAAmX,GAAA7S,GAwBV,QAAAsS,GAAAD,GA9GMA,EAAMpV,UAAUiC,OAAO,UAwFtB,GAFGoP,gBAAAjU,KAAAwY,GAEH7S,EAAA,CACF,GAAAD,KACDf,GAAWuB,GAAA7E,EAAAoS,OACT/N,EAAM+S,SAAW,EACjBpX,EAAAC,OAAImX,EAAatX,EACfsX,IAAAA,GAAOpS,EACLqS,GAAOC,QACRvS,EAAAA,gBAFDV,EAAAU,MAEC,MAGH,IAAFF,GAAaR,EAASQ,GACpBwS,EAAAhT,EAAAsR,MAAA,eAAAtR,EAAAsR,MAAA,iBAAA,GADFc,EAAApS,EAAAoS,QAAA,kBAAAnS,EAAAmS,QAAA,OAAA,GAGIc,EAAOjT,EAAAoS,aAAA,wCAAArS,EAAAqS,aAAA,YAAA,GACPc,EAAMnT,EAAAmT,eAAA,0CAAAnT,EAAAmT,eAAA,YAAA,GACNH,EAAAhT,EAAA0K,UAAA/O,EAAAwL,KADFmL,MAAAA,EAYU,IAvHVA,EA8GDtS,EAAAkR,MA9GCoB,YAAoB9R,EAApB,wBAA8CE,EAA9C,kDAmHJ9E,0BAAO4E,EAAP5E,+DAAO0V,EAAAc,EAAPxW,iBAAOyW,EAAAc,EAAPvX,wBAIAD,EAAA,QAAAqD,OAAcsT,GAAAtS,EAAAkR,MAAA,CAAA,GAAAkC,EAAEzX,GAAA,WAAA+C,KAAA0U,GA7GVzT,QAAW,eACX0T,0BAA2B,SAC3BC,sBAAuB,UA2GbC,gBAAAH,EAAA,UA1GC,QA0GDG,gBAAAH,EAEK,kBAAA,UAFLG,gBAAAH,EAEJnT,cAAS,UAFLmT,IAGdnT,KAAAA,MAAQ2G,WAAQ,GAAA0L,GAAUkB,SAAUxH,eAAiBtB,EAArClK,GAAhB8R,IAAAA,EAAApV,UAAAiC,OAAA,WApGIuL,GAAYyI,GACdxX,EAAE,IAAM6E,GAAIM,KAAK,aAAahE,GAAG,MAAO,WACtC,GAAM6K,GAAOrN,IACTqB,GAAEkC,WAAalC,EAAE8X,UACnB9L,EAAKzK,UAAU0C,IAAI,YAoGpB+P,WAAQ,WACLhI,EAAAzK,UAAAiC,OAAA,YACH6Q,EAAL,UAAY0D,aACRnI,EAAJlF,KAAAqE,IACIlK,OAEF+K,EAAa+E,EAAAA,MAAb7R,QAAA,UAAAkC,MAAA,IACAH,EAAA6F,KAAAqE,MAIH/O,EAAA,IAAA6E,GAAAM,KAAA,WAAAhE,GAAA,MAAA,WAXH,GAAAwV,GAAA3W,EAAArB,MAAAmE,QAAA,UAAAkC,MAAA,GAtFYgH,EAAOrN,IAoGVqB,GAAEoU,WAAYpU,EAAA8X,UACrBE,EAAAA,UAAcxU,OAASwU,YACrB1U,WAAY2U,WACbjM,EAAAzK,UAAAiC,OAAA,YAHHoT,EAAAD,IA9FW,MAqGHC,EAAa5R,KA/FjBhF,EAAE,WAqGAkY,EAAAA,UACJ/W,GAAA,MAAA,SAAAE,GAAqB1C,KAAA4C,UAAAiC,OAAA,cAGnB7E,KAAI0F,KAAAA,WACF4N,GAAAA,GADarO,SAAAqR,eAAA5Q,EAAAQ,GAEbkK,KAFF4H,EAAApV,UAAAiC,OAAA,YAIEvD,EAAOoE,UAAUC,IAAnB,cA5FE6T,QAoGF,QAAAA,GAASC,GACP,QAAIC,GAAAA,GACJ,GAAMnX,GAAmB,UAAX8V,EAAApU,SAAd,CACEyV,GAAAA,OAAAA,GACDtT,EAAAiS,EAAArR,YACG2S,GAAetB,EAAAtO,MAAAsO,EAAnB9F,aAAA,SAAA8F,EAAA9F,aAAA,OAAA8F,EAAA9F,aAAA,QACAqH,GAAe,GACTlU,GAAS4N,EACXqG,EAAAA,EACKvF,EAAL,EAFFkE,EAGOlS,GAENkS,EAAAlS,EAAAmS,EAAAlV,EAlGDA,GAAUkV,GAqGVoB,EAAAA,OAAA,YAAAtY,EAAiBkB,MATnBlB,EAAAgX,GAAAjU,KAWAuV,kBAAiBD,KAAAA,MAAAA,GAA4B,qBAG7CrM,EAAKW,GAAL5J,KAIDyV,kBAAAnY,KAAAM,MAAAsW,GAAA,aAxBQmB,gBAAAA,KAAAA,GA1ET9U,WAAW,WACT,GAAM8T,GAASpX,EAAE,oBAuGfyY,GAAAA,MAAAA,QACEvX,EAAF8D,MAAYiG,QAAW,SAAAqM,GACzBmB,EAAAA,OAIAA,EAAAA,QAAAA,GAAAA,QAAAA,oBAAmC1T,WACpCsS,EAAA1Y,QAEKoQ,GACJ/O,EAAA,WACIqX,EAAK1O,KAGT3I,GAAAC,QACA+L,mBAEAgI,mBACAjF,QAAAA,KAASrE,gBAAAA,KAAAA,2DAET,IAAA,GAAAgO,GAAAxE,UAAApU,OAAAwE,EAAA2H,MAAAyM,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAArU,EAAAqU,GAAAzE,UAAAyE,EAjGFrU,GAAQ2G,QAAQ,SAAAoF,GAAA,MAAQrQ,GAAE6X,UAAUxH,EAAKgE,MAAOhE,EAAKtB,oBAsGjD/O,GAAAC,OAAA+T,QACAhJ,SAAIpH,SAAAA,GACFrB,GAAAA,EAAAA,CACD,GAAAqN,OAAAA,GACD6I,MAAAA,EACDpE,GAAAuE,MAAA,QApBHhJ,EAAAyE,EAAAM,MAAA,KA5EE9P,EAAK+K,EAAK,GACVyE,EAAQzE,EAAK,IAsGI5P,EAAA6Y,QAAAxE,EAAAxP,OAGnB7E,EAAAC,OAAIoE,EAAAA,YACFE,aAASqK,WACTqD,MAAAA,MAAUrD,KAAAA,QAIV0B,EAAAA,WACA5H,EAAAA,aAAOkG,MAAAA,SAAAA,EAAAA,WAAAA,QAPT5O,EAAAoU,WAAAzJ,KAAA3K,EAAA,aAAAgF,MAAA,GAAAH,SAaAqT,aAlGF,QAAAA,GAAY5T,GAoGV,GApGmBsO,gBAAAjU,KAAAuZ,GAoGbvF,GAAAA,EAAqBpO,QAA3B,CACE,GAAAyH,GAAArN,KADF0F,GAgBIA,SAAS6C,EACX7C,SAAS6C,EAATsE,KAEFxL,GAAI8Y,OAAAA,EAAAA,GAEJna,KAAK+J,MACL,IAAKqK,OAAAA,GA/GCwF,EAAUlU,EAASkU,OAAUlU,EAASkU,SAiH5C5Z,MAAK2R,MACH3R,KAAIiR,QAAJvL,EAAAE,QAEE,WACD,GAAA8T,GAAA,IA/GGrY,EAAEkB,MAAQ,aAiHVmX,EAAyB,+CAE5B,IAAAC,IAAA,iBA/GDC,GAAOtN,QAAQ,SAASqM,EAAK7E,GAiHzBxG,EAAAgG,WAAqBQ,GACvBzD,EAASrE,KAAS0F,8DAChBT,EAAAA,MAAQvL,GAFZiU,EAIO3N,KAAA,yBA7GL2N,EAAY3N,KAAK2M,GAiHnBgB,EAASrF,KAAT,eAEAtD,EAAAhF,KAAA0N,EAAA,mBACA1I,EAAWC,EAAXqI,KAAA,IACA3U,EAAAA,EAAWiB,SAAAlB,OAAW0V,GACpB/M,EAAIgD,OAAO3K,EAAAA,EAAAE,SAAXY,KAAA,UAAA6T,GAAA3U,EAAA4N,UAAAjN,MAAA,KAUF,IAAMqL,OAAAA,EACNrE,IAAa,YAAbA,EAAKtD,MAAa7E,CAClBmI,EAAAhM,EAAArB,KAAA4F,SAAAY,KAAA,0BA/GA,IAAI8T,GAAiBjZ,EAAErB,KAAK4F,SAASY,KAAK,UAAU6T,GAAG3U,EAAS4N,UAiH5DlC,EAAAA,EAAyB/K,MAA7B,GAAAW,YACAoK,EAAS9E,EAAiBiO,MAAK,GAAA9C,UAC7B8C,GAAoBnW,KAAAgC,MAApBA,EAAA,KAAAxC,KAAAA,EAAA,OAGD,GAJDwM,GAAA1K,EAAA0K,QAKA/O,GAAArB,KAAK4C,SAAU0C,GAAI,MAAA,wBAAnB,SAAA5C,GACA,IAAK0C,KAAAA,WAAaxC,UAAlBC,SAAA,YACAxB,EAAArB,MAAKkF,SAAc,UAASgQ,MAA5BrD,IAAsC,SAAA2I,GAAA,MAAtCA,GAAA5X,UAAAiC,OAAA,cACAa,EAAAA,MAAS0K,SAASwE,UAAlBvO,MAA8BkP,IAA9B,SAAAiF,GAAA,MAAAA,GAAA/U,gBAAA,kBAdFzF,KAAA4C,UAAA0C,IAAA,YAhGE+H,EAAK+G,MAAQ/S,EAAErB,MAAMoU,QACrB/G,EAAKW,OAAShO,KAmHdya,KAlHKrV,aAmHT,gBAAqB,GAAAgL,EAAArE,KAAA/L,KAAA0C,GA7GD,YAAZrB,EAAEkB,OAAqB,CACzB,GAAI6D,GAAQpG,KAAKgH,YACbpD,EAAO5D,KAAKyX,UACK,SAAjBxS,SAASqM,MACX1N,EAAO5D,KAAKyX,YAmHb9R,EAASvB,KAAAgC,MAAAA,EAAA,KAAAxC,KAAAA,EAAA,YA1GZ8W,aAkHFrZ,QAAAA,GAASqE,GAhHT,GAgHmBC,gBAAAA,KAAAA,GAhHdA,GAAYA,EAAQC,QAAzB,CAkHA,GAAIF,GAASiV,KACTjV,GACFA,YAASkV,GADXtH,aAEOrD,GACLvK,KAAAA,EAASmV,OACVzK,SAAA/O,EAAAwL,KACGnH,UAAAA,GAhHFiM,WAAQ1B,GA0HJ6K,UAAAA,GAEJzZ,GAAAC,OAAQoD,EAAOoW,GAxHjB9a,KAAK+J,MAAQrE,EAASqE,MA0HpB/J,KAAAoU,MAAM1O,EAAac,QACXd,GAAaW,IACrBpB,MAAAA,IAASC,EAAAA,EAATU,QAvHF,IAAMoO,GAAqB,SAASjK,GA0HpC,MAAA,2CACsCrE,EADtC,WACEA,EAAAyO,KADF,0vBAeIzO,GAAMA,OACRT,EAASC,MAAAA,gBAAc8G,KAAAhM,KAvHzB,IAAIma,OAAAA,EA0HCY,GAALxS,QAAgB4R,EAAAzU,EAAA6C,MAAA6J,OAAApS,KAAA+J,MAAgBoQ,EAAmB3T,EAAKd,EAA1B4N,UAAdvJ,MAAA,GAAhB/J,KAAAoU,MAAA1O,EAAA4N,SArHAtT,KAAK2R,OAAS,SAAStB,EAAM3L,GA0H3BsW,GAAAA,GAzHW,EA0Hf,IAAAtV,EAAAE,WAEEyK,GAAU4K,EAAV1S,QACM2S,EAAAA,EAAW3S,MAAA6J,OAGf9E,MAAQyE,QAAQoJ,IAAhB,CACA9K,EAAFwB,IAAUnN,SAAO0W,GACjBnK,GAAAvL,EAAAiM,OAAAD,KAtHO4H,KAAK,IA4HZtZ,KAAAgR,IAAAsD,YAAA,EAtHE,IAAItD,GAAM3P,EAAEqE,EAASE,QACrBoL,GAAI4F,QAwHNyE,EAAAA,OAASjW,GACPT,WAAF,WACEQ,GAAAA,GAAOC,EAAamD,MAAA6J,KADtB9E,OAAApF,UAAApG,MAAA8S,MAAA5D,EAAA,GAAA6D,iBAAA,OAGS3P,IAAAA,SAAAA,EAAc4O,GACvB7O,EAAAA,GAASC,OAAAA,EAA2BE,EAAAA,GAAa2E,QAtHvC+J,GAAOpO,EAAS4N,UAAU5B,EAAK9O,UAAU0C,IAAI,kBA6HrDjE,EAAAqE,EAAK9C,SAAUuQ,GAAf,MAAsB,KAAtB,WACAkI,GAAAA,GAASzY,EAAAA,KACTyK,GAAIgO,MAASzY,KAAAA,cAAmB,SAASmH,MACvC1I,EAAE0D,MAAM2M,EAAR0C,QAEA1C,EAAAN,SAAA,MACD9E,QAAA,SAAAiO,GAPHA,EAAA9U,gBAAA,gBA/GI8U,EAAI3X,UAAUiC,OAAO,YAyHvBwW,EAAAA,cAAoB,SAAMnG,SAAW,IAErCmG,KAAAA,UAASjW,IAAAA,YACT/D,KAAEkE,aAAF,gBAAA,GAvHAvF,KAAKkF,cAAc,SAASgQ,SAAU,EAyHtCxP,EAAA0K,SAAAwE,MAAA5U,KAAAuV,eAMCkF,QAvHL,QAAAA,GAAY9U,GAyHR,GAzHiBsO,gBAAAjU,KAAAya,GAyHjB9U,GASA2V,EAAAA,CACAA,GAAAA,IACApV,GAAMqV,EAAAA,OACNZ,WAAA,GAvHAa,QAAQ,EACRX,UAAW,GA2HVxZ,GAAAC,OAFDoE,EAAAC,GAIAD,EAAAiV,aAAAjV,EAAAiV,WAAA,4BAAAjV,EAAAiV,WAAA,MACqBpW,QAArB8Q,EAAOhJ,UACP3G,EAAAkV,UAAA,sBAtHAlV,EAASmV,UAAY,KAoFvB,IAAAnV,EAAA8V,OAAA9V,EAAA8V,OAAA,GAuCD9V,EAAA8V,OAAA,wiBAOE,IAFDV,GAAAA,iBAEOpV,EAAAQ,GAFP,KAEOR,EAAAkV,UAFP,IAEOlV,EAAAiV,WAFP,IAEOjV,EAAA8V,OAFP,gCAIEna,GAAA,QAAI4G,OAAOoT,GAETha,EAAA,IAAAqE,EAAS+V,IAATjV,KAAA,mBAAqBhE,GAAAnB,EAAAoB,WAAA,WACnBpB,EAAA,IAAAqE,EAAI+V,IAAQpV,MAAZ,GAAsBzD,UAAAiC,OAAA,UACpBxD,SAAAA,cAAe,qBAAAuB,UAAAiC,OAAqC4W,aAGrDzb,KAAAoT,KAAA,WACF,GAAA0H,GAAA7V,SAAAqR,eAAA5Q,EAAAQ,GACFjB,UARDC,cAAA,qBAAAtC,UAAA0C,IAAA,WASDwV,EAAAlY,UAAA0C,IAAA,UACFjE,EAAAkC,WAAAlC,EAAA8X,UArHK2B,EAAMrW,MAAMY,QAAU,QACtBV,WAAW,WACTmW,EAAMlY,UAAU0C,IAAI,WACnB,KAsHLoW,EApHQ9Y,UAqHZ0C,IAAA,WAEEtF,KAAIqN,KAAO,WACXhM,EAAKsa,IAALjW,EAAiBC,IAAQC,MAAAA,GAAzBhD,UAAAiC,OAAA,UACM7B,SAAM2C,cAAZ,qBAAA/C,UAAAiC,OAAA,YAGA7E,KAAI4b,SAAAA,SAAAA,GAAAA,MAAJva,GAAA,IAAAqE,EAAAQ,IAAAM,KAAA,WAAA9B,OAAAmX,MAKI7Y,sBACF8Y,QAAAA,GAAAA,GAAAA,gBAAAA,KAAAA,EADF,IAEOb,GAAYc,GAAAA,EAAAA,MACjBC,MAAAA,GAAAA,CACD,IAAAd,GAAA,oBAEKe,EAAAA,oBAAAhB,EAAAgB,qCACN5a,GAAM6a,QAAAA,QAAAA,GACJvW,EAAAA,QAAQC,OAHJuW,oEAOJJ,IAAAA,GAAcA,SAAAA,eAAAA,GAHhBK,EAAAnX,SAAAqR,eAAA4E,EASEG,GAAMtR,aAAQ,eAAqBnE,GACnCvE,EAAA,aAAY0I,QAAZ,SAAA5E,GACAA,EAAIkX,aAAJ,eAAA,KAEAhb,SAAEsE,cAAF,aAAwB/C,UAAxB0C,IAAgDe,QAChDhF,SAAEsE,cAAF,aAAiCoO,aAAjC,cAAA,SAPF1S,EAAA,IAAA6Z,GAAA1Y,GAAA,MAAA,WArGExC,KAAK4C,UAAUuQ,OAAO,WAoHlBmJ,EAAAA,UAAAA,OAAuB,QACrBC,EAAAA,UAAiB5W,SAAQC,QACzBmE,EAAAA,MAAQyS,MAEdH,EAAAA,YAIAhP,EAAAA,GAAA7K,GAAa6Z,MAAb,KAAA,WACA,GAAIA,GAAarZ,EAAjBqY,GAAsB7U,KAAA,gBA3GtB,KA4GE6U,EAAKjW,aAAa,cAAY,QAC/B/D,EAAAkE,UAGH6W,EAAAxZ,UAAAuQ,OAAA,WAhHS9R,EAAEoU,WAAWtU,OAAS,GAoH7BwE,EAAAA,QAQiB8W,GAAAnQ,QAAA,SAAAoF,GApHXA,EAAK9O,UAAUC,SAAS,aAqH3B8C,EAAD/C,UAAa+C,OAAQC,aAGnByH,IAAAA,GAANpI,SAAAC,cAAA,iBACIQ,GAAW9C,UAAAiC,OAAA,QACbe,EAASqK,aADI,eAAA,EAEbkE,IAAMlE,GAFO,IAAAjQ,KAAAuE,QAAA6O,KAAA4C,MAAA,KAAA,EAMbtK,YAAOmB,WANT5H,SAAAC,cAAAqW,GAAA3Y,UAAAiC,OAAA,SAQEvD,KACF2D,SAAAC,cAAwBgQ,GAAxBtS,UAAA0C,IAAA,QAEIoX,OAAAA,SAAchX,KAAAA,QAASE,MAhHzByV,EAASzY,UAAUiC,OAAO,gEAwH1B8X,GACAC,GAAAA,EAAAA,CACD,GAAAvB,GAAApW,SAAAqR,eAAAtW,KAAAkG,GAnHD,IAAKP,EAAL,CAGE0V,EAASnW,cAAc,WAAW2X,YAAYxb,EAAE+B,EAAE,0BAqHpDsZ,IAAAA,GAAUhY,EAAOoY,cAAjB,KACAC,GAAAzQ,QAAc5G,SAAAA,GACTN,IAAAA,GAAAA,KAAauT,GAnHA,WAAR8C,EAqHDvG,EAAAA,GAASxQ,OAAA,+BAAAiU,EAAA8C,GAAA,cAEXrW,EAAAA,GAAAA,OAAa,kBAAlBqW,EAAA,SAAA9C,EAAA8C,GAAA,2BAWEuB,UACA,QAAAtB,GAAKxG,GACL7H,GADe4G,gBAAAjU,KAAA0b,GACfrO,GAAe1H,EAAfC,SAAAD,EAAA3C,KAAA2C,EAAAxC,IAAAkK,CACA0P,GAAAA,GAAK7H,IACLlV,MAAA2b,QAAajQ,EAAAA,EAAK9F,QAChBF,IAAAA,GAAAA,EAAaqG,IACd5I,EAAAwC,EAAAxC,IATH4Y,EAUOpW,EAAAoW,aAAApW,EAAAoW,aAAApW,EAAA3C,IAGL+Z,EAAA,GACAf,EAAkB,EAClBhc,MAAA+J,MACAsD,IAAK6H,EACL4G,EAAiB,aACfpW,IAAYqG,IACbiQ,EAAA,aArBL,IAAAG,GAAA,WAAAL,EAAA,4CAyBAY,EAAAA,UAAsBX,EAAtBW,qCAAiCX,EAAjCW,KACQM,EAAgB9X,WAAc8W,EAApC,4CACA3a,GAAAsE,EAAS/C,SAAUC,OAAAA,EAAqBoZ,EAAAC,EACtC,IAAAe,IACAja,IAAKoC,EACL2X,IAAK7H,EACL8H,aAASvX,EAET4H,GAAAA,EAAK6H,SAAU7O,MAAf,GAAA9B,QAAAwF,MAAAyS,KAAAU,UAAAD,EAEEvX,IAAAA,GAAA,WACD,GAAA6W,GAAAlb,EAAAsE,EAAAC,SAAAY,KAAA,SAAAH,MAAA,GAAA0D,MACFA,EAAAyS,KAAAW,MAAA9b,EAAAsE,EAAAC,SAAAS,MAAA,GAAA9B,QAAAwF,OAZH5G,EAAA4G,EAAA5G,IAcAuZ,MAAAA,EACEL,GAAMW,SAAgB9X,EAAc,IAApC,EACA7D,EAAIsE,EAAM/C,SAAUC,KAAAA,wBAAqBwD,MAAA,GAAAZ,gBAAA,YACvCpE,EAAAsE,EAAK/C,SAAc4D,KAAA,SAAnBuN,KAAAsI,GACAW,EAAAA,EAAS5X,SAAAA,KAAa,SAAWiB,MAAA,GAAjC0D,MAAAsS,EACAhP,EAAKjI,MAAAA,EACL2X,GAAe5Z,GACfnD,KAAKkV,aAAL,WAAA,aAICoH,EAAA,WACF,GAAAC,GAAAlb,EAAAsE,EAAAC,SAAAY,KAAA,SAAAH,MAAA,GAAA0D,MArHGsS,GAyGNG,KAAAW,MAAA9b,EAAAsE,EAAAC,SAAAS,MAAA,GAAA9B,QAAAwF,WAzGMsS,GACJA,GAAW7b,SAAS+b,EAAc,IAAM,EA0HxCa,EAAAA,EACJxX,SAAAY,KAAA,uBAAqBH,MAAA,GAAAZ,gBAAA,YAAApE,EAAAsE,EAAAC,SAAAY,KAAA,SAAAuN,KAAAsI,GAxHjBhb,EAAEsE,EAAQC,SAASY,KAAK,SAASH,MAAM,GAAG0D,MAAQsS,EAyHhDhP,EAAC1H,MAAS0W,EACVnW,IAAJlD,GACI0C,KAAAA,aAAW,WAAA,YAIfrE,GAAIsE,EAACD,SAAevE,KAApB,uBAA4BqB,GAAAnB,EAAAoB,WAAA,WAC1BiD,EAAiBA,KAASkU,KAA1B5Z,KAAAqd,aAGA3X,EAAAA,EAASQ,SAATM,KAAA,wBAAAhE,GAAAnB,EAAAoB,WAAA,WADF6Z,EAEOvQ,KAAA/L,KAAAA,KAAAqd,eAlHLC,SAyHF,QAAAA,GAAIC,GACJ,GADkBC,gBAAAA,KAAAA,GACZC,GAAe9X,EAArBC,QAAA,CAvHA5F,KAAKkV,SAAU,EAyHflV,KAAI0F,UAAS6X,EACX7X,IAAAA,GAAS6X,KACP7X,GACEgY,YAAAA,GACAA,SAAAA,GACD3T,UAAMkG,GACLyN,SAAAA,EACArc,GAAE8D,EAAAA,KACHuG,IAAArK,EAAAwL,KARLxL,GAAAC,OAUOoE,EAAAC,GACLD,KAAAA,QAAAA,EAAwBwP,QACtBwI,KAAAA,MAAAA,EAAA3T,KACD,IAFD2S,GAAArb,EAAAqE,EAAAE,SAGDmX,EAAAL,EAAArW,MAAA,GAICqT,EAAAA,aACDkD,EAAA,WACsC,SAAjCe,SAAAA,gBAAqBA,MAvHzBhB,EAAU,YAyHZC,EAAA,aAGE,IAAIlX,GAAS4N,EAAaQ,QAAK,WAAA,GAC7B8J,EAAAA,yCAAAlY,EAAAyO,KAAAyJ,KAAAC,EAAAD,WAAAlY,EAAAqE,MAAA6T,IAEDlB,GAAAhY,OAAAoY,GACDc,EAAAA,MAAAlY,EAAAqE,MACAgT,EAAIrX,aAAS6X,OAAW7X,EAAS6X,MAEhCvd,KAAAkV,UACD0I,EAAAA,UAAAA,IAAAA,WACAb,EAAOa,aAAP,OAAA,YAXFb,EAAA7H,SAAA,GAiBA4I,EAAWC,GAAAA,MAAAA,WACXD,GAAAA,GAAgBpY,KAASQ,cAAzB,QACO4X,MAAAA,UAAaA,SAApB,YAvHI9d,KAAK4C,UAAUiC,OAAO,WAyHtBa,KAAAA,aAAgBvE,gBAAQ,GAC1BuE,EAASkU,gBAAe,WACtB5Z,KAAI4d,SAAMI,EACVF,EAAAA,SAAWjB,EAFbE,EAAA7H,SAAA,EAIDxP,EAAAgG,KAvHKhG,EAASgG,IAAIK,KAAK/L,QAGpBA,KAAK4C,UAAU0C,IAAI,WAyHvB0X,EAAA5X,aAAA,UAAA,WACM6Y,EAAAA,SAAiBvY,EACjBwY,KAAAA,aAAoBD,gBAAY,GAvHlCje,KAAKkV,SAAU,EA0HnB7H,EAAA6H,SAAA,EACMiJ,EAAAA,IACAC,EAAAA,GAAAA,KAAAA,SAKN1B,EAAS2B,GAAAA,EAAAA,WACP,GAAIjY,GAAYY,KAAAA,cAAhB,QACIpD,MAAOga,UAAInG,SAAf,aACAqC,KAAAA,UAAAA,OAAA,WACD9Z,KAAAoF,aAAA,gBAAA,GACK7C,EAAF2S,SAAY,EACZ8H,EAAAvX,gBAAW,WACX6Y,KAAAA,SAAYJ,EACZG,EAAAA,SAAAA,EAFF3Y,EAAAlD,IAKDkD,EAAAlD,GAAAuJ,KAAA/L,SAED0c,EAAAla,GAAAoa,EAAA,WAvHE,GAAMI,GAAWhd,KAAKkF,cAAc,QA2HjCqZ,MAAAA,UAAL1b,SAAyB,aACvB7C,KAAOwe,UAAAA,IAAAA,WADTxB,EAAA5X,aAAA,UAAA,WAvHIpF,KAAKoF,aAAa,gBAAgB,GA2HtC2X,EAAA7H,SAAA,EACElV,KAAAkV,SAAM,EAzHJ7H,EAAK6H,SAAU,EA2HXuJ,EAAAA,KAzHF/Y,EAASgG,IAAIK,KAAK/L,WAkIpBod,SAzHN,QAAAA,GAAYzX,GAoNJ,QAAA0Y,GAAAT,GACAvc,GAAEoU,GAAAA,EAAFzO,YACAqO,EAAOhJ,EAAAA,UACRyN,GAAA1V,KAAAgC,MAAAA,EAAA,KAAAxC,KAAAA,EAAA,OA5FD,GA3HeqQ,gBAAAjU,KAAAod,GA2HfzX,EAAA,CACA,GAAAO,GAAIwY,EAAAA,OACJA,GACAA,SAAQna,EAERlD,GAAAC,OAAIqd,EAAUxd,GACZyd,EAAAA,MAAgBhB,SAzHpBlY,EAASmZ,MAAQnZ,EAASkU,QAEvBlU,EAASQ,GA6HN4Y,EAAAA,EAAAA,GAFFpZ,EAAMoZ,GAAAA,CAMN,IAAApB,GAAgB,GAAAF,OAEduB,EAAAA,GAAWnc,MAGb+b,GAAAA,QACEjZ,EAAMsZ,QAAAA,QAAgBhJ,SAAtB7Q,EAAA2O,GACA,kBAAiBkL,KAAA7Z,IAIfA,EAAOvC,OAAcvB,EAAA4d,GAAA9Z,IACrBA,EAAAA,GAAOC,MAAAA,GAAAA,UAAaE,IAAA,eAJtBoY,EAAazY,KAAAA,SAASqR,eAAe4I,IACrCxB,EAAYyB,MAAOhe,GAAPyB,UAAmB0C,IAAA,gBAO7BH,EAAAA,OAAOC,QAAAA,SAAaD,EAAe2O,GACpC4J,EAAA1R,KAAAuR,EAAAlD,GAAAvG,KAGH,IACAzS,GAAA,EACOgL,aAAPgJ,EAAAA,QAzHJqE,EAA4B,+CA4HxB,IAvHAsE,IAuHItY,EAAYiY,UAvHN,SAAC1B,EAAOmD,EAAMtL,GA2HxB,GAAA8J,GAAA,6BAAAwB,CAUC,OAlDH1Z,GAyCO4N,WAAAQ,IACL8J,GAAMzY,YAzHR9D,EAAEoU,YAAc/P,EAAS6X,QAAQzJ,KA4H/B8J,GAAMkB,IACNpZ,EAAIoZ,SAAYpZ,EAAA6X,QAAApc,SACd2d,GAAAA,aAAWlc,EAAX2a,QAA4BzJ,GAA5BgL,sBAAApZ,EAAA6X,QAAAzJ,GAAAgL,KAEAA,GAAAA,qCAAuCpZ,EAAvCkU,OAAA9F,GAAAgL,sBAIFhB,EAAIiB,SAAY7a,cAAA,YACd6a,GAAAA,KAAWnc,WACXmc,EAAAA,WAAWnc,EAAcA,UAAzB0C,IAAA,aACAyZ,EAAAA,mBAAA,YAAwBrF,GACzBoE,EAAA5X,GAAAR,EAAAQ,GAzHPU,OAAOkX,WAAaA,EA4HdF,EAAIhb,OAAU0C,QACdI,EAAMnD,OAAF+J,QAAY,SAAW2P,EAAAnI,GACzBuK,GAAAA,GAAAA,EAAAA,EAAAA,EAAAQ,MAAA/K,GAAAA,EACDgK,GAAAjB,YAAAxb,EAAA+B,EAAAwa,MAKCvc,EAAA,QAAMge,QAAKpa,EAGToa,IAAAA,GAAGzc,EAAAA,IAAU0C,EAAIY,IACjBmZ,EAAgBpB,EAAAzX,KAAhB,mBAKE6Y,EAAa/Z,EAAIkB,KAAjB,UACA6Y,EAAgBlB,EAAhB9D,GAAA3U,EAAA4N,UACDkL,EACAd,EAAArD,GAAA3U,EAAA4N,UAzHLwG,EAAyBmE,EAAOzX,KAAK,0BAM3B,aAAZnF,EAAEkB,OA6HFlB,EAAA,WACAid,QAAAhN,IAAa+I,GA7GjBgE,EAAAH,EAAA7X,MAAA,MAuHJrG,KAAAsf,eAAA,WACA,MAAAlB,IAGApe,KAAAue,kBAAA,WACA,MAAAC,IAIAnd,EAAA,WAEA4c,EAAAzX,KAAA,SAGAyX,GAAAzb,GAAA,MAAA,SAAA,WACA,GAAAob,GAAA5d,KACAmf,EAAAvB,EAAArZ,QAAAgb,UAAAvJ,MAAA,KACAwJ,EAAAne,EAAAoU,WAAA6D,KAAA,KACAsF,EAAAhB,EAAArZ,QAAAgb,UACAZ,EAAAC,EAAA5I,MAAA,KAIA0I,GAHArd,EAAAoU,WAGAxQ,SAAAC,cAAA,6BAIA,IAHAwZ,EAAA9b,UAAAiC,OAAA,YA/HQ6Z,EAAQna,QAAQgb,UAAYC,EAiIpCxf,KAAA4C,UAAA0C,IAAA,YACAqZ,EAAAxd,OAAA,EAAA,CA/HUyd,EAAgBhB,EAAIrZ,QAAQgb,SAkItC,IAAAZ,GAAAC,EAAA5I,MAAA,KAEA8I,EAAA7Z,SAAAC,cAAA,oBACA4Z,KACAA,EAAAlc,UAAAiC,OAAA,WACAia,EAAAlc,UAAA0C,IAAA,QAEA,IAAAyZ,GAAA9Z,SAAAC,cAAA,qBACA6Z,KACAA,EAAAnc,UAAAiC,OAAA,YACAka,EAAAnc,UAAA0C,IAAA,SAGAqZ,EAAArS,QAAA,SAAAoJ,EAAA5B,GACA,GAAAkL,GAAAtJ,EAAAM,MAAA,KACAkJ,EAAAF,EAAA,GACA7Z,EAAAF,SAAAqR,eAAA4I,EACApL,KAAAqL,EAAAhe,OAAA,GACAgE,EAAAvC,UAAAiC,OAAA,QACAM,EAAAvC,UAAA0C,IAAA,YACAH,EAAAC,aAAA,eAAA,KAEAD,EAAAvC,UAAAiC,OAAA,QA/HcM,EAAOvC,UAAU0C,IAAI,WAiInCH,EAAAC,aAAA,eAAA,MAKA/D,EAAAoU,WAAA0J,EACA9J,OAAAhJ,SAAA8S,EAAAA,EAAAhe,OAAA,IAGA,YAAAE,EAAAkB,OACA8b,EAAAT,OAIA,CACA,GAGAkB,IAHAzd,EAAA,aAAAgZ,GAAAhZ,EAAAuc,GAAAxJ,SAGAnP,SAAAC,cAAA,qBACA4Z,KACAA,EAAAlc,UAAAiC,OAAA,WA/HYia,EAAWlc,UAAU0C,IAAI,QAiIrCwZ,EAAA1Z,aAAA,eAAA,GAEA,IAAA2Z,GAAA9Z,SAAAC,cAAA,qBAEA6Z,KACAA,EAAAnc,UAAAiC,OAAA,YA/HYka,EAAWnc,UAAU0C,IAAI,QAiIrCyZ,EAAA3Z,aAAA,eAAA,IAIAwY,EAAAhb,UAAA0C,IAAA,YACA,YAAAjE,EAAAkB,OA/HY8b,EAA6BT,GAmIzCuB,EAAA7S,QAAA,SAAAoJ,EAAA5B,GACA,GAAAkL,GAAAtJ,EAAAM,MAAA,KACAkJ,EAAAF,EAAA,GA/HkBK,EAAKpa,SAASqR,eAAe4I,EAiI/CpL,KAAAqL,EAAAhe,OAAA,GACAke,EAAAzc,UAAAiC,OAAA,QACAwa,EAAAzc,UAAA0C,IAAA,YACA+Z,EAAAja,aAAA,eAAA,IAGAia,IACAA,EAAAzc,UAAAiC,OAAA,QACAwa,EAAAzc,UAAA0C,IAAA,WACA+Z,EAAAja,aAAA,eAAA,MAOA/D,EAAAoU,WAAA0J,EACA9J,OAAAhJ,SAAAmT,MAIAne,EAAA,aAAAgZ,GAAA3U,EAAA4N,UAAAjN,MAAA,GAAAzD,UAAAiC,OAAA,QA/HMxD,EAAE,aAAagZ,GAAG3U,EAAS4N,UAAUjN,MAAM,GAAGzD,UAAU0C,IAAI","file":"widgets.min.js","sourcesContent":["\n\n/**\n * Create a color object from provided color value.\n * Handles three values:\n * rgb(255,0,0) -- with or without spaces\n * #ff0000\n * #f00\n * The returned object has two methods:\n * myColor.toHex()\n * myColor.toRGB()\n *\n * @constructor - Must use new keyword\n * @param {string} color - A hex or rgb value.\n * @return {object} UIColor\n */\nconst UIColor = function(color) {\n  this.ok = false\n  /**\n   * Check for hex color value.\n   * String \"#\" if found.\n   */\n  if (color.charAt(0) == '#') {\n    color = color.substr(1,6)\n  }\n  color = color.toLowerCase()\n\n\n  /**\n   * Array of color format regex patterns.\n   * These will identify the format of the color provided above.\n   * The process function converts hex color values into decimal (rgb).\n   */\n  const colorRegex = [\n    {\n      /* Example: ['rgb(123, 234, 45)', 'rgb(255, 234, 245)'] */\n      re: /^rgb\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*\\)$/,\n      process: function(bits) {\n        return [\n          parseInt(bits[1]),\n          parseInt(bits[2]),\n          parseInt(bits[3])\n        ]\n      }\n    },\n    {\n      /* Example: ['#00ff00', '336699'] */\n      re: /^(\\w{2})(\\w{2})(\\w{2})$/,\n      process: function(bits) {\n        return [\n          parseInt(bits[1], 16),\n          parseInt(bits[2], 16),\n          parseInt(bits[3], 16)\n        ]\n      }\n    },\n    {\n      /**\n       * Example: ['#fb0', 'f0f']\n       */\n      re: /^(\\w{1})(\\w{1})(\\w{1})$/,\n      process: function(bits) {\n        return [\n          parseInt(bits[1] + bits[1], 16),\n          parseInt(bits[2] + bits[2], 16),\n          parseInt(bits[3] + bits[3], 16)\n        ]\n      }\n    }\n  ]\n\n  /**\n   * Check for a match using each regex.\n   */\n  for (let i = 0; i < 3; i++) {\n    const re = colorRegex[i].re\n    const processor = colorRegex[i].process\n    const bits = re.exec(color)\n    if (bits) {\n      const channels = processor(bits)\n      this.r = channels[0]\n      this.g = channels[1]\n      this.b = channels[2]\n      this.ok = true\n    }\n  }\n\n  /**\n   * Validate/cleanup values.\n   */\n  this.r = (this.r < 0 || isNaN(this.r)) ? 0 : ((this.r > 255) ? 255 : this.r)\n  this.g = (this.g < 0 || isNaN(this.g)) ? 0 : ((this.g > 255) ? 255 : this.g)\n  this.b = (this.b < 0 || isNaN(this.b)) ? 0 : ((this.b > 255) ? 255 : this.b)\n\n  this.toHex = () => {\n    let r = this.r.toString(16)\n    let g = this.g.toString(16)\n    let b = this.b.toString(16)\n    if (r.length == 1) r = '0' + r\n    if (g.length == 1) g = '0' + g\n    if (b.length == 1) b = '0' + b\n    return '#' + r + g + b\n  }\n\n  this.toRGB = function() {\n    return 'rgb(' + this.r +',' + this.g + ',' + this.b + ')'\n  }\n}\n\n$.extend({\n\n  /**\n   * Make global method to get brightness of provided color.\n   * This is based on the values of YIQ color formula.\n   * This method expects a color object created by UIColor.\n   */\n  getBrightness: (color) => {\n    if ($.type(color) === 'string') color = UIColor(color)\n    return (color.r * .299) + (color.g * .587) + (color.b * .114)\n  },\n\n  /**\n   * Function to light a color.\n   * Expects a hex value as string and an integer as percent:\n   */\n  lightenColor: (color, percent) => {\n    const num = parseInt(color.slice(1), 16)\n    const amt = Math.round(2.55 * percent)\n    let R = (num >> 16) + amt\n    let G = (num >> 8 & 0x00FF) + amt\n    let B = (num & 0x0000FF) + amt\n    return \"#\" + (0x1000000 + (R < 255 ? R < 1 ? 0 : R : 255) * 0x10000 + (G < 255 ? G < 1 ? 0 : G : 255) * 0x100 + (B < 255 ? B < 1 ? 0 : B : 255)).toString(16).slice(1)\n  },\n\n  /**\n   * Function to darken a color.\n   * Expects a hex value as string and an integer as percent:\n   */\n  darkenColor: (color, percent) => {\n    const num = parseInt(color.slice(1), 16)\n    const amt = Math.round(2.55 * percent)\n    let R = (num >> 16) - amt\n    let G = (num >> 8 & 0x00FF) - amt\n    let B = (num & 0x0000FF) - amt\n    return \"#\" + (0x1000000 + (R < 255 ? R < 1 ? 0 : R : 255) * 0x10000 + (G < 255 ? G < 1 ? 0 : G : 255) * 0x100 + (B < 255 ? B < 1 ? 0 : B : 255)).toString(16).slice(1)\n  },\n\n  /**\n   * Method to calculate color contrast.\n   * It expects a hex or rgb value:\n   */\n  calculateBrightness: (color) => {\n    if ($.type(color) === 'object') color = color.toHex()\n    const kolor = new UIColor(color)\n    return $.getBrightness(kolor)\n  }\n})\n\n\n$(function() {\n  if ($.theme === 'android') {\n    $('body').on($.eventStart, 'button, ul.editing > li, li[data-show], li[data-select], li[data-goto], ui-sheet-handle, ui-switch, .ui-popover li', function(e) {\n      let target = this\n      if (target.hasAttribute(\"disabled\") || target.classList.contains(\"disabled\")) {\n        return\n      }\n\n      let w = Math.min(this.offsetWidth, 160)\n      let h = Math.min(this.offsetHeight, 160)\n      const d = Math.max(w, h)\n      w = d\n      h = d\n\n      const offset = this.getBoundingClientRect()\n\n      const x = $.isAndroid ? e.touches[0].pageX - offset.left : e.pageX - offset.left\n      const y = $.isAndroid ? e.touches[0].pageY - offset.top :  e.pageY - offset.top\n\n      let navBkColor\n      let backgroundColor\n\n      const ripple = document.createElement('ripple-sheath')\n      $(target).append(ripple)\n\n      if (target.nodeName === 'BUTTON' && target.classList.contains('slide-out-button')) {\n        let navBkColor = $('ui-screen > nav').eq(0).css('background-color')\n        backgroundColor = new UIColor(navBkColor).toHex()\n      } else if ((target.nodeName === 'BUTTON' && $(target).closest('nav')[0])) {\n        navBkColor = $(target).closest('nav').css('background-color')\n        backgroundColor = new UIColor(navBkColor).toHex()\n\n      } else if ((target.nodeName === 'BUTTON' && $(target).closest('toolbar')[0])) {\n        navBkColor = $(target).closest('toolbar').css('background-color')\n        backgroundColor = new UIColor(navBkColor).toHex()\n\n      } else {\n        backgroundColor = $(this).css('background-color')\n        if (!backgroundColor || backgroundColor === 'rgba(0, 0, 0, 0)') {\n          backgroundColor = '#fff'\n        }\n      }\n\n      let rippleColor = '#fff'\n      const brightness = $.calculateBrightness(backgroundColor)\n      if (brightness > 195) {\n        rippleColor = '#aaa'\n      } else {\n        rippleColor = '#fff'\n      }\n\n      if (target.dataset.rippleColor) {\n        rippleColor = target.dataset.rippleColor\n      }\n\n      const rippleWave = document.createElement('ripple-wave')\n      rippleWave.style.backgroundColor = rippleColor\n      rippleWave.style.width = `${h}px`\n      rippleWave.style.height = `${h}px`\n      rippleWave.style.left = `${x - (h/2)}px`\n      rippleWave.style.top = `${y - (h/2)}px`\n\n      ripple.append(rippleWave)\n      setTimeout(function() {\n        $(ripple).remove()\n      }, 1000)\n    })\n  }\n})\n\n\n$.extend({\n\n  /**\n   * Cover screen:\n   */\n  block: opacity => {\n    if (document.querySelector('ui-mask')) return\n    $('body').append(`<ui-mask></ui-mask>`)\n    document.querySelector('ui-mask').style.display = 'block'\n    setTimeout(function() {\n      document.querySelector('ui-mask').classList.add('opened')\n      if (opacity) $('ui-mask').css({opacity: opacity})\n    })\n    const screen = document.querySelector('ui-screen.current')\n    if (screen) screen.setAttribute('aria-hidden', true)\n  },\n\n  /**\n   * Uncover screen:\n   */\n  unblock: () => {\n    $('ui-mask').remove()\n    const screen = document.querySelector('ui-screen.current')\n    if (screen) screen.removeAttribute('aria-hidden')\n  }\n})\n\n\nclass UIBusy {\n  constructor(options) {\n    if (!options) return\n    let settings = {\n      size: 40,\n      color: '#666',\n    }\n    $.extend(settings, options)\n    const element = $(settings.element)\n\n    let spinner\n    /**\n     * For iOS:\n     */\n    const iOSBusy = () => {\n      let small\n      /**\n       * Smaller busy indicator (less tines):\n       */\n      if (parseInt(settings.size, 10) < 30) {\n        spinner = `<svg class='chui-busy small' width='${ settings.size }px' height='${ settings.size }px' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100' preserveAspectRatio='xMidYMid'>\n        <g x='0' y='0' width='100' height='100' fill='none' class='bk'>\n          <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(0 50 50) translate(0 -30)'></rect>\n          <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(45 50 50) translate(0 -30)'></rect>\n          <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(90 50 50) translate(0 -30)'></rect>\n          <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(135 50 50) translate(0 -30)'></rect>\n          <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(180 50 50) translate(0 -30)'></rect>\n          <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(225 50 50) translate(0 -30)'></rect>\n          <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(270 50 50) translate(0 -30)'></rect>\n          <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(315 50 50) translate(0 -30)'></rect>\n        </g>\n      </svg>`\n        element.append(spinner)\n      /**\n       * Larger busy indicator (more tines)\n       */\n      } else {\n        spinner = `<svg class='chui-busy' width='${ settings.size }px' height='${ settings.size }px' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100' preserveAspectRatio='xMidYMid' class='uil-default'>\n        <g x='0' y='0' width='100' height='100' fill='none'>\n          <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(0 50 50) translate(0 -30)'></rect>\n          <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(30 50 50) translate(0 -30)'></rect>\n          <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(60 50 50) translate(0 -30)'></rect>\n          <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(90 50 50) translate(0 -30)'></rect>\n          <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(120 50 50) translate(0 -30)'></rect>\n          <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(150 50 50) translate(0 -30)'></rect>\n          <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(180 50 50) translate(0 -30)'></rect>\n          <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(210 50 50) translate(0 -30)'></rect>\n          <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(240 50 50) translate(0 -30)'></rect>\n          <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(270 50 50) translate(0 -30)'></rect>\n          <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(300 50 50) translate(0 -30)'></rect>\n          <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(330 50 50) translate(0 -30)'></rect>\n        </g>\n      </svg>`\n        element.append(spinner)\n      }\n    }\n\n    /**\n     * For Android:\n     */\n    const androidBusy = () => {\n      settings.id = $.uuid()\n      let androidActivityIndicator = null\n      if ($.isNativeAndroid) {\n        androidActivityIndicator = `<svg class=\"chui-busy\" version=\"1.1\" id=\"${ settings.id }\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" enable-background=\"new 0 0 100 100\" xml:space=\"preserve\">\n        <g>\n          <path fill=\"none\" stroke=\"${ settings.color }\" stroke-width=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M74.2,65c2.7-4.4,4.3-9.5,4.3-15c0-15.7-12.8-28.5-28.5-28.5S21.5,34.3,21.5,50c0,5.5,1.6,10.6,4.3,15\"/>\n        </g>\n        <polyline fill=\"none\" stroke=\"${ settings.color }\" stroke-width=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"89.4,56.1 74.3,65 65.4,49.9 \"/>\n      </svg>`\n\n        element.append(androidActivityIndicator)\n        return\n      } else {\n        androidActivityIndicator = `<svg id=\"${ settings.id }\" class=\"chui-busy\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\"><circle stroke=\"url(#SVGID_1_)\" cx=\"50\" cy=\"50\" r=\"28.5\"/></svg>`\n        element.append(androidActivityIndicator)\n        element.array[0].classList.add('hasActivityIndicator')\n        if (options.color) {\n          $('#' + settings.id).find('circle').css('stroke', options.color)\n        }\n      }\n      $('#' + settings.id).css({\n        'height': settings.size + 'px',\n        'width': settings.size + 'px'\n      })\n    }\n\n    /**\n     * Create Busy control for appropriate OS:\n     */\n    if ($.theme === 'android') {\n      androidBusy(options)\n    } else if ($.theme === 'ios') {\n      iOSBusy(options)\n    }\n\n    this.center = function(position) {\n      if (!element) return\n      const busy = element.find('.chui-busy')\n      const parent = element.array[0]\n      if (position) {\n        busy.css('position', position)\n      } else {\n        position = busy.css('position')\n      }\n      let height\n      let width\n      let parentHeight\n      let parentWidth\n      if (position === 'absolute') {\n        busy.css('position', 'absolute')\n        height = busy.array[0].clientHeight\n        width = busy.array[0].clientWidth\n        parentHeight = parent.clientHeight\n        parentWidth = parent.clientWidth\n      } else {\n        height = parseInt(busy.css('height'), 10)\n        width = parseInt(busy.css('width'), 10)\n        parentHeight = parseInt($(parent).css('height'), 10)\n        parentWidth = parseInt(($(parent)).css('width'), 10)\n        $(busy).css({\n          'margin-left': 'auto',\n          'margin-right': 'auto'\n        })\n      }\n      let tmpTop\n      let tmpLeft\n      if (parent.nodeName === 'body') {\n        tmpTop = ((window.innerHeight / 2) + window.pageYOffset) - height / 2 + 'px'\n        tmpLeft = ((window.innerWidth / 2) - (width / 2) + 'px')\n      } else {\n        tmpTop = (parentHeight / 2) - (height / 2) + 'px'\n        tmpLeft = (parentWidth / 2) - (width / 2) + 'px'\n      }\n      if (position !== 'absolute') tmpLeft = 0\n      busy.css({\n        left: tmpLeft,\n        top: tmpTop\n      })\n      return busy\n    }\n\n  }\n}\n\n\n/**\n * Class to enable reording list items.\n */\nconst ReorderList = (function() {\n  'use strict'\n\n  const accessibility = {\n    list: {\n      ariaRole: \"listbox\",\n      tabIndex: 0,\n      focus: false\n    },\n    items: {\n      ariaRole: \"option\",\n      tabIndex: -1,\n      focus: false\n    },\n  }\n\n  let FixForChrome = /Chrome\\/[3-5]/.test(navigator.userAgent)\n  let testElementStyle = document.createElement('div').style\n  const transitionJSPropertyName = \"transition\" in testElementStyle ? \"transition\" : \"webkitTransition\"\n  const transformJSPropertyName = \"transform\" in testElementStyle ? \"transform\" : \"webkitTransform\"\n  const transformCSSPropertyName = transformJSPropertyName === \"webkitTransform\" ? \"-webkit-transform\" : \"transform\"\n  const userSelectJSPropertyName = \"userSelect\" in testElementStyle ? \"userSelect\" : \"webkitUserSelect\"\n  let hwLayerMagicStyle = testElementStyle[transformJSPropertyName] ? 'translateZ(0) ' : ''\n  let hwTopLayerMagicStyle = testElementStyle[transformJSPropertyName] ? 'translateZ(1px) ' : ''\n  testElementStyle = null\n\n  let globalInstances = 0\n  let attachedBodyHandlerHack = false\n\n  function ReorderList(list, options) {\n    list = document.querySelector(list)\n    if (!this || this === window) return new ReorderList(list, options)\n    this.options = options = options || {}\n    this.onTouchCancel = this.setState.bind(this, this.states.idle)\n    this.onTouchEnd = this.onTouchEnd.bind(this)\n    this.onMouseUp = this.onMouseUp.bind(this)\n    this.onMouseLeave = this.onMouseLeave.bind(this)\n    this.onSelection = this.onSelection.bind(this)\n    this.onContainerFocus = this.onContainerFocus.bind(this)\n    this.onEventStart = this.onEventStart.bind(this)\n    this.onEventMove = this.onEventMove.bind(this)\n    this.setState(this.states.idle)\n    this.attach(list)\n\n    $(list).on('reorder:reorder', function(e) {\n      if (!this.classList.contains('showIndicators')) {\n        return\n      }\n      e.target.parentNode.insertBefore(e.target, e.detail.insertBefore)\n      return false\n    }, false)\n  }\n\n  function getTransform(node) {\n    const transform = node.style[transformJSPropertyName]\n    if (transform) {\n      return {\n        value:transform,\n        original:transform,\n      }\n    }\n    if (window.getComputedStyle) {\n      let style = window.getComputedStyle(node).getPropertyValue(transformCSSPropertyName)\n      if (style && style !== 'none') return {value:style, original:''}\n    }\n    return {value:'', original:''}\n  }\n\n  ReorderList.prototype = {\n\n    list: null,\n    options: {},\n    state: null,\n    target: null,\n    usingTouch: false,\n    mouseHandlersAttached: false,\n    startPosition: null,\n    latestPosition: null,\n    previousPosition: null,\n    canPreventScrolling: false,\n    states: {\n      idle: function idleStateInit() {\n        // if(this.list && !this.list.classList.contains('showIndicators')) return\n        this.removeMouseHandlers()\n        if (this.target) {\n          this.target.node.style.willChange = ''\n          this.target = null\n        }\n        this.usingTouch = false\n\n        return {\n          allowTextSelection: true,\n        }\n      },\n\n      undecided: function undecidedStateInit() {\n        // if(!this.list.classList.contains('showIndicators')) return\n        this.target.height = this.target.node.offsetHeight\n        this.target.node.style.willChange = transformCSSPropertyName\n        this.target.node.style[transitionJSPropertyName] = ''\n\n        let holdTimer = setTimeout(function() {\n          const move = this.getAbsoluteMovement()\n          if (this.canPreventScrolling && move.x < 15 && move.y < 25) {\n            this.setState(this.states.reorder)\n          }\n        }.bind(this), 300)\n\n        return {\n          leaveState: function() {\n            clearTimeout(holdTimer)\n          },\n\n          onMove: function() {\n            const move = this.getAbsoluteMovement()\n            if (move.x > 20 && move.y < Math.max(100, this.target.height)) {\n              this.setState(this.states.idle)\n            }\n            if (move.y > 20) {\n              this.setState(this.states.idle)\n            }\n            if (move.x > move.y*1.2) return false\n          },\n\n          onLeave: function() {\n            this.setState(this.states.idle)\n          },\n\n          onEnd: function() {\n            const allowDefault = this.dispatch(this.target.originalTarget, 'tap')\n            this.setState(this.states.idle)\n            return allowDefault\n          },\n        }\n      },\n\n      reorder: function reorderStateInit() {\n        if (this.target.node.focus && accessibility.items.focus) {\n          this.target.node.focus()\n        }\n        this.target.height = this.target.node.offsetHeight\n        const nodes = this.list.childNodes\n        let originalIndex = $(this.target).index()\n        let mouseOutsideTimer\n        const zero = this.target.node.offsetTop + this.target.height/2\n        const otherNodes = []\n        for(let i = 0; i < nodes.length; i++) {\n          if (nodes[i].nodeType != 1 || nodes[i] === this.target.node) continue\n          const t = nodes[i].offsetTop\n          nodes[i].style[transitionJSPropertyName] = transformCSSPropertyName + ' 0.2s ease-in-out'\n          otherNodes.push({\n            node: nodes[i],\n            baseTransform: getTransform(nodes[i]),\n            pos: t + (t < zero ? nodes[i].offsetHeight : 0) - zero,\n          })\n        }\n\n        this.target.node.classList.add('reordering-list-item')\n        this.target.node.style.zIndex = '99999'\n        this.target.node.style[userSelectJSPropertyName] = 'none'\n        if (FixForChrome) {\n          this.list.style.webkitTransformStyle = 'preserve-3d'\n        }\n\n        function onMove() {\n          this.updateScrolling()\n          if (mouseOutsideTimer) {\n            clearTimeout(mouseOutsideTimer)\n            mouseOutsideTimer = null\n          }\n          const move = this.getTotalMovement()\n          this.target.node.style[transformJSPropertyName] = 'translate(0,' + move.y + 'px) ' + hwTopLayerMagicStyle + this.target.baseTransform.value\n          const height = this.target.height\n          otherNodes.forEach(function(o) {\n            let off = 0\n            if (o.pos < 0 && move.y < 0 && o.pos > move.y) {\n              off = height\n            }\n            else if (o.pos > 0 && move.y > 0 && o.pos < move.y) {\n              off = -height\n            }\n            o.node.style[transformJSPropertyName] = off ? 'translate(0,'+off+'px) ' + hwLayerMagicStyle + o.baseTransform.value : o.baseTransform.original\n          })\n\n\n          return false\n        }\n\n        onMove.call(this)\n\n        return {\n          leaveState: function() {\n            if (mouseOutsideTimer) clearTimeout(mouseOutsideTimer)\n            if (FixForChrome) {\n              this.list.style.webkitTransformStyle = ''\n            }\n            if (this.list.focus && accessibility.list.focus) {\n              this.list.focus()\n            }\n            this.target.node.classList.remove('reordering-list-item')\n            this.target.node.style[userSelectJSPropertyName] = ''\n            this.animateToZero(function(target) {\n              target.node.style.zIndex = ''\n            })\n            otherNodes.forEach(function(o) {\n              o.node.style[transformJSPropertyName] = o.baseTransform.original\n              o.node.style[transitionJSPropertyName] = ''\n            })\n          },\n\n          onMove: onMove,\n\n          onLeave: function() {\n            if (mouseOutsideTimer) clearTimeout(mouseOutsideTimer)\n            mouseOutsideTimer = setTimeout(function() {\n              mouseOutsideTimer = null\n              this.onTouchCancel()\n            }.bind(this), 700)\n          },\n\n          onEnd: function() {\n            const move = this.getTotalMovement()\n            let i\n            let spliceIndex\n            if (move.y < 0) {\n              for (i = 0; i < otherNodes.length; i++) {\n                if (otherNodes[i].pos > move.y) {\n                  break\n                }\n              }\n              spliceIndex = i\n            } else {\n              for (i = otherNodes.length-1; i >= 0; i--) {\n                if (otherNodes[i].pos < move.y) {\n                  break\n                }\n              }\n              spliceIndex = i+1\n            }\n\n            this.dispatch(this.target.node, 'reorder', {spliceIndex:spliceIndex, insertBefore:otherNodes[spliceIndex] ? otherNodes[spliceIndex].node : null, originalIndex: originalIndex})\n            this.setState(this.states.idle)\n            return false\n          },\n        }\n      },\n    },\n\n    attach: function(list) {\n      globalInstances++\n      if (this.list) this.detach()\n      if (!attachedBodyHandlerHack && FixForChrome) {\n        attachedBodyHandlerHack = true\n        document.body.addEventListener('touchstart', $.noop, false)\n      }\n\n      this.list = list\n\n      if (false !== accessibility.list.tabIndex) {\n        this.list.tabIndex = accessibility.list.tabIndex\n      }\n      if (accessibility.list.ariaRole) {\n        this.list.setAttribute('aria-role', accessibility.list.ariaRole)\n      }\n      this.setChildNodesAriaRoles()\n      this.list.addEventListener('focus', this.onContainerFocus, false)\n      this.otherNodes = []\n\n      $(document).on(\"selectionchange\", this.onSelection, false)\n      $(this.list).on('touchcancel', this.onTouchCancel, false)\n      $(this.list).on('touchend', this.onTouchEnd, false)\n      $(this.list).on($.eventStart, this.onEventStart, false)\n      $(this.list).on($.eventMove, this.onEventMove, false)\n    },\n\n    detach: function() {\n      this.onTouchCancel()\n      $(document).off(\"selectionchange\", this.onSelection, false)\n      $(this.list).off('touchcancel', this.onTouchCancel, false)\n      $(this.list).off('touchend', this.onTouchEnd, false)\n      $(this.list).off($.eventMove, this.onEventMove, false)\n\n      if (false !== accessibility.list.tabIndex) {\n        this.list.removeAttribute('tabIndex')\n      }\n      if (accessibility.list.ariaRole) {\n        this.list.removeAttribute('aria-role')\n      }\n      this.unSetChildNodesAriaRoles()\n\n      globalInstances--\n      if (!globalInstances && attachedBodyHandlerHack) {\n        attachedBodyHandlerHack = false\n        $('body').off('touchstart', $.noop, false)\n      }\n    },\n\n    setState: function(newStateCtor) {\n      if(this.list && !this.list.classList.contains('showIndicators')) return\n\n      if (this.state) {\n        if (this.state.ctor === newStateCtor) return\n        if (this.state.leaveState) this.state.leaveState.call(this)\n      }\n      let prevState = this.state\n      let nextState = newStateCtor.call(this)\n      if (this.state === prevState) {\n        nextState.ctor = newStateCtor\n        this.state = nextState\n      }\n    },\n\n    findTargetNode: function(targetNode) {\n      while(targetNode && targetNode.parentNode !== this.list) {\n        targetNode = targetNode.parentNode\n      }\n      return targetNode\n    },\n\n    onContainerFocus: function(e) {\n      if(!this.list.classList.contains('showIndicators')) return\n      this.list.style.outline = 'none'\n      this.setChildNodesAriaRoles()\n    },\n\n    setChildNodesAriaRoles: function() {\n      const self = this\n      const nodes = Array.prototype.slice.call(self.list.childNodes)\n      for(let i = 0; i < nodes.length; i++) {\n        if (nodes[i].nodeType != 1) continue\n        if (accessibility.items.ariaRole) {\n          nodes[i].setAttribute('aria-role', accessibility.items.ariaRole)\n        }\n        if (false !== accessibility.items.tabIndex) {\n          nodes[i].tabIndex = accessibility.items.tabIndex\n        }\n      }\n    },\n\n    unSetChildNodesAriaRoles: function() {\n      const nodes = Array.prototype.slice.call(self.list.childNodes)\n      for(let i = 0; i < nodes.length; i++) {\n        if (nodes[i].nodeType != 1) continue\n        if (accessibility.items.ariaRole) {\n          nodes[i].removeAttribute('aria-role')\n        }\n        if (false !== accessibility.items.tabIndex) {\n          nodes[i].removeAttribute('tabIndex')\n        }\n      }\n    },\n    onSelection: function(e) {\n      const isRelated = e.target === document || this.findTargetNode(e)\n      const iOS = /(iPhone|iPad|iPod)/i.test(navigator.userAgent) && !/(Android|Windows)/i.test(navigator.userAgent)\n      if (!isRelated) return\n\n      if (iOS) {\n        this.setState(this.states.idle)\n      } else {\n        if (!this.state.allowTextSelection) {\n          e.preventDefault()\n        }\n      }\n    },\n\n    addMouseHandlers: function() {\n      if (!this.mouseHandlersAttached) {\n        this.mouseHandlersAttached = true\n        $(document).on('mouseleave', this.onMouseLeave, false)\n        $(document).on('mouseup', this.onMouseUp, true)\n        $(document).on('blur', this.onTouchCancel, false)\n      }\n    },\n\n    removeMouseHandlers: function() {\n      if (this.mouseHandlersAttached) {\n        this.mouseHandlersAttached = false\n        $(document).off('mouseleave', this.onMouseLeave, false)\n        $(document).off('mouseup', this.onMouseUp, true)\n        $(document).off('blur', this.onTouchCancel, false)\n      }\n    },\n\n    onMouseLeave: function(e) {\n      if (this.usingTouch) return\n      if (e.target === document.documentElement || e.relatedTarget === document.documentElement) {\n        if (this.state.onLeave) {\n          this.state.onLeave.call(this)\n        }\n      }\n    },\n\n    onEventStart: function(e) {\n      if ($.isTouchEnabled) {\n        this.usingTouch = true\n        this.canPreventScrolling = true\n        if (e.touches.length > 1) {\n          this.setState(this.states.idle)\n          return\n        }\n        if (!this.setTarget(e)) return\n        this.startAtPosition({\n          x: e.touches[0].clientX,\n          y: e.touches[0].clientY,\n          time: e.timeStamp\n        })\n      } else {\n        if (this.usingTouch || e.button != 0 || !this.setTarget(e)) return\n        this.addMouseHandlers()\n        this.canPreventScrolling = true\n        this.startAtPosition({\n          x: e.clientX,\n          y: e.clientY,\n          time: e.timeStamp\n        })\n      }\n    },\n\n    setTarget: function(e) {\n      const targetNode = this.findTargetNode(e.target)\n      if (!targetNode) {\n        this.setState(this.states.idle)\n        return false\n      }\n      let scrollContainer = targetNode.parentNode\n      while (scrollContainer) {\n        if (scrollContainer == document.body) break\n        if (scrollContainer.scrollHeight > scrollContainer.clientHeight && window.getComputedStyle(scrollContainer)['overflow-y'] != 'visible') break\n        scrollContainer = scrollContainer.parentNode\n      }\n      scrollContainer = scrollContainer || document.body\n\n      this.target = {\n        originalTarget: e.target,\n        node: targetNode,\n        scrollContainer: scrollContainer,\n        origScrollTop: scrollContainer.scrollTop,\n        origScrollHeight: scrollContainer.scrollHeight,\n        baseTransform: getTransform(targetNode)\n      }\n      return true\n    },\n\n    startAtPosition: function(pos) {\n      this.startPosition = this.previousPosition = this.latestPosition = pos\n      this.setState(this.states.undecided)\n    },\n\n    updatePosition: function(e, pos) {\n      if (this.target == null) {\n        return\n      }\n      this.latestPosition = pos\n\n      if (this.state.onMove) {\n        if (this.state.onMove.call(this) === false) {\n          e.preventDefault()\n        }\n      }\n      if (this.latestPosition.time - this.previousPosition.time > 100) {\n        this.previousPosition = this.latestPosition\n      }\n    },\n\n    onEventMove: function(e) {\n      if ($.isTouchEnabled) {\n        this.updatePosition(e, {\n          x: e.touches[0].clientX,\n          y: e.touches[0].clientY,\n          time: e.timeStamp\n        })\n        this.canPreventScrolling = false\n      } else {\n        this.updatePosition(e, {\n          x: e.clientX,\n          y: e.clientY,\n          time: e.timeStamp\n        })\n      }\n    },\n\n    onMouseUp: function(e) {\n      if (this.usingTouch || e.button !== 0) return\n\n      if (this.state.onEnd && false === this.state.onEnd.call(this)) {\n        e.preventDefault()\n      }\n    },\n\n    onTouchEnd: function(e) {\n      if (e.touches.length > 1) {\n        this.onTouchCancel()\n      } else if (this.state.onEnd && false === this.state.onEnd.call(this)) {\n        e.preventDefault()\n      }\n    },\n\n    getTotalMovement: function() {\n      const scrollOffset = this.target.scrollContainer.scrollTop - this.target.origScrollTop\n      return {\n        x: this.latestPosition.x - this.startPosition.x,\n        y: this.latestPosition.y - this.startPosition.y + scrollOffset,\n        time: this.latestPosition.time - this.startPosition.time,\n      }\n    },\n\n    getAbsoluteMovement: function() {\n      const move = this.getTotalMovement()\n      return {\n        x: Math.abs(move.x),\n        y: Math.abs(move.y),\n        time: move.time,\n        directionX: move.x < 0 ? 'left' : 'right',\n        directionY: move.y < 0 ? 'up' : 'down'\n      }\n    },\n\n    updateScrolling: function() {\n      const triggerOffset = 40\n      let offset = 0\n\n      const scrollable = this.target.scrollContainer,\n        containerRect = scrollable.getBoundingClientRect(),\n        targetRect = this.target.node.getBoundingClientRect(),\n        bottomOffset = Math.min(containerRect.bottom, window.innerHeight) - targetRect.bottom,\n        topOffset = targetRect.top - Math.max(containerRect.top, 0),\n        maxScrollTop = this.target.origScrollHeight - Math.min(scrollable.clientHeight, window.innerHeight)\n\n      if (bottomOffset < triggerOffset) {\n        offset = Math.min(triggerOffset, triggerOffset - bottomOffset)\n      }\n      else if (topOffset < triggerOffset) {\n        offset = Math.max(-triggerOffset, topOffset - triggerOffset)\n      }\n      scrollable.scrollTop = Math.max(0, Math.min(maxScrollTop, scrollable.scrollTop + offset))\n    },\n\n    dispatch: function(targetNode, eventName, data) {\n      let event = document.createEvent('CustomEvent')\n      if (event && event.initCustomEvent) {\n        event.initCustomEvent('reorder:' + eventName, true, true, data)\n      } else {\n        event = document.createEvent('Event')\n        event.initEvent('reorder:' + eventName, true, true)\n        event.data = data\n      }\n      return targetNode.dispatchEvent(event)\n    },\n\n    animateToZero: function(callback, target) {\n      target = target || this.target\n\n      target.node.style[transitionJSPropertyName] = transformCSSPropertyName + ' 0.1s ease-out'\n      target.node.style[transformJSPropertyName] = 'translate(0,0) ' + hwLayerMagicStyle + target.baseTransform.value\n      setTimeout(function() {\n        target.node.style[transitionJSPropertyName] = ''\n        target.node.style[transformJSPropertyName] = target.baseTransform.original\n        if (callback) callback.call(this, target)\n      }.bind(this), 101)\n    }\n  }\n  return ReorderList\n})()\n/**\n * ChocolateChip-UI Widget - Edit List.\n */\nclass UIEditList {\n  constructor(options) {\n    if (!options) return\n    const self = this\n    let settings = {\n      element: undefined,\n      editLabel: 'Edit',\n      doneLabel: 'Done',\n      deleteLabel: 'Delete',\n      cancelLabel: 'Cancel',\n      callback: $.noop,\n      deletable: false,\n      reorderable: false,\n      state: undefined,\n      stateProp: 'id'\n    }\n    $.extend(settings, options)\n\n    let deletionIndicator = html`\n      <aside class=\"deletion-indicator\">\n        <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 20 20\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n          <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n            <g id=\"deletion-indicator\">\n              <g id=\"ios-indicator\">\n                <circle id=\"ios-circle\" fill=\"#FF0000\" cx=\"10\" cy=\"10\" r=\"10\"></circle>\n                <path d=\"M3.5,10 L16.5,10\" id=\"ios-bar\" stroke=\"#FFFFFF\" stroke-width=\"2\" stroke-linecap=\"square\"></path>\n              </g>\n              <path d=\"M2,13 L9.9294326,16.8406135 L17.1937075,1.90173332\" id=\"checkmark\" stroke=\"#FA0303\" stroke-width=\"2\"></path>\n            </g>\n          </g>\n        </svg>\n      </aside>`\n\n    let deleteButton = html`\n      <button class=\"delete\">\n        <label>${ settings.deleteLabel }</label>\n        <svg width=\"27px\" height=\"30px\" viewBox=\"0 0 27 30\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n          <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n            <g id=\"delete-icon\" fill=\"#3A3A3A\">\n              <g transform=\"translate(3.000000, 1.000000)\">\n                <path d=\"M1,6 L20,6 L20,24.9986131 C20,26.6562333 18.6639569,28 16.9998779,28 L4.00012207,28 C2.3432004,28 1,26.6569187 1,24.9986131 L1,6 Z M4,9 L5,9 L5,25 L4,25 L4,9 Z M8,9 L9,9 L9,25 L8,25 L8,9 Z M12,9 L13,9 L13,25 L12,25 L12,9 Z M16,9 L17,9 L17,25 L16,25 L16,9 Z\" id=\"can\"></path><path d=\"M0,4.96611425 L0,1.67759301 L5.1776507,1.7511163 L6.482399,0 L14.5847825,0 L15.8789491,1.7511163 L21,1.7511163 L21,4.9447157 L0,4.96611425 L0,4.96611425 Z\" id=\"lid\"></path>\n              </g>\n            </g>\n          </g>\n        </svg>\n      </button>`\n\n    let moveHandle = html`\n      <svg class='handle' width=\"19px\" height=\"18px\" viewBox=\"0 0 19 18\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" style=\"background: rgba(255,255,255,0.01)\">\n        <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n          <g id=\"Artboard\" stroke=\"#C7C7CC\">\n            <g id=\"Move-Indicator-iOS\" transform=\"translate(2.000000, 5.000000)\">\n              <path d=\"M0,0.5 L15,0.5\" id=\"Line-1\"></path>\n              <path d=\"M0,3.5 L15,3.5\" id=\"Line-2\"></path>\n              <path d=\"M0,6.5 L15,6.5\" id=\"Line-3\"></path>\n            </g>\n          </g>\n        </g>\n      </svg>`\n\n    let __data = []\n    let __editMade = false\n    this.callback = settings.callback || $.noop\n\n    if (!settings.deletable && !settings.reorderable) {\n      return\n    }\n\n    if (options) $.extend(settings, options)\n\n    // let editButton\n    let button\n    let dispelDeletable = 'swiperight'\n    let enableDeletable = 'swipeleft'\n    let moveUpIndicator\n    let moveDownIndicator\n    let element = settings.element\n    let deleteLabel\n    this.elm = $(settings.element)\n\n    if (settings.deletable) {\n      document.querySelector(settings.element).classList.add('deletable')\n    }\n    if (settings.reorderable) {\n      document.querySelector(settings.element).classList.add('reorderable')\n    }\n\n    if (options.state) options.state.boundComponents.push(this)\n\n    this.render = function(data) {\n      let temp = ''\n      if (!settings.element) {\n        return\n      }\n\n      if (!data && settings.state) {\n        data = settings.state.get()\n      }\n\n      if (Array.isArray(data)) {\n        data.map(function(item) {\n          temp += settings.render(item)\n        })\n      } else {\n        return\n      }\n\n      this.elm.textContent = ''\n      let elm = $(settings.element)\n      elm.empty()\n      elm.append(temp)\n      elm.find('li').array.map(li => {\n        if (settings.deletable) {\n          $(li).prepend(deletionIndicator)\n          $(li).append(deleteButton)\n        }\n        if (settings.reorderable) {\n          $(li).append(moveHandle)\n        }\n      })\n    }\n\n    this.val = () => options.state.get()\n\n    $(() => {\n\n      /**\n       * Handle deletion of list item.\n       */\n      function deleteListItem(el) {\n        let elm = $(settings.element)\n        let $this = this\n        __editMade = true\n        let listItem = $($this).closest('li')\n\n        /**\n         * Mark list as edited:\n         */\n        elm[0].dataset.listEdit = 'true'\n        let direction = '-1200%'\n        if (document.querySelector('html').getAttribute('dir') === 'rtl') direction = '1000%'\n        $($this).siblings().css({\n          '-webkit-transform': 'translate3d(' + direction + ',0,0)',\n          '-webkit-transition': 'all 1s ease-out',\n          'transform': 'translate3d(' + direction + ',0,0)',\n          'transition': 'all 1s ease-out'\n        })\n        setTimeout(function () {\n          listItem.remove()\n        }, 500)\n\n      }\n      /**\n       * Handle moving list item.\n       */\n      if (settings.reorderable) {\n        let reorderList =  new ReorderList(settings.element)\n      }\n\n      $(settings.element).on('tap', '.delete', deleteListItem)\n    })\n\n    let dir = document.dir\n    dir = dir ? dir.toLowerCase() : ''\n    if (dir === 'rtl') {\n      dispelDeletable = 'swipeleft'\n      enableDeletable = 'swiperight'\n    }\n\n\n    let editButton = `<button class=\"edit\">${ settings.editLabel }</button>`\n    let screen = $(settings.element).closest('ui-screen')\n    let nav = screen.find('nav')\n    // console.dir(settings.element)\n    // console.dir('ui-screen')\n    nav.append(editButton)\n    nav.find('.back').hide()\n    nav.prepend(`<button class=\"cancel\">${ settings.cancelLabel }</button>`)\n    nav.find('.cancel').hide()\n    let editBtn = $(settings.element).closest('ui-screen').find('nav .edit')\n    let cancelBtn = $(settings.element).closest('ui-screen').find('nav .cancel')\n    $(settings.element).on('tap', '.deletion-indicator', function() {\n      this.parentNode.classList.toggle('selected')\n    })\n    editBtn.on('tap', function () {\n      let $this = this\n      /**\n       * When button is in \"Edit\" state:\n       */\n      let cancelBtn = $this.parentNode.querySelector('.cancel')\n      if (this.classList.contains('edit')) {\n        setTimeout(function () {\n          $this.classList.remove('edit')\n          $this.classList.add('done')\n          $($this).text(settings.doneLabel)\n          document.querySelector(settings.element).classList.add('showIndicators')\n          let backBtn = $this.parentNode.querySelector('.back')\n          $(backBtn).hide()\n          $(cancelBtn).css('display', 'block')\n\n        })\n\n        /**\n         * When button is in \"Done\" state:\n         */\n      } else if (this.classList.contains('done')) {\n        /**\n         * Execute callback if edit was performed:\n         */\n        setTimeout(function () {\n          $this.classList.remove('done')\n          $this.classList.add('edit')\n          $($this).text(settings.editLabel)\n          let list = document.querySelector(settings.element)\n          list.classList.remove('showIndicators')\n          let selectedItems = $(settings.element + ' li.selected')\n          selectedItems.forEach(function(li) {\n            li.classList.remove('selected')\n          })\n          $(cancelBtn).css('display', 'none')\n        })\n\n        if (!__editMade) return\n        let movedItems = []\n\n        /**\n         * Reorder model based on user choice:\n         */\n        if (settings.state) {\n          // (function () {\n            let __data = settings.state.get()\n            let __newarray = []\n            let liData = $(settings.element).find('li')\n            let temp = []\n            liData.array.map(item => {\n              temp.push(item.dataset.id)\n            })\n            temp.forEach(item => {\n              let found = __data.find(li => {\n                return li.uuid === item\n              })\n              __newarray.push(found)\n            })\n            settings.state.purge()\n            settings.state.replace(__newarray)\n            __newarray = []\n          // })()\n\n          self.callback.call(self, self.callback)\n        }\n      }\n    })\n    cancelBtn.on('tap', function() {\n      let $this = this\n      let editBtn = $(settings.element).closest('ui-screen').find('nav .done')\n      editBtn.text(settings.editLabel)\n      editBtn.array[0].classList.remove('done')\n      editBtn.array[0].classList.add('edit')\n      setTimeout(function () {\n        document.querySelector(settings.element).classList.remove('showIndicators')\n        let backBtn = $this.parentNode.querySelector('.back')\n        $(backBtn).show()\n        $($this).css('display', 'none')\n      })\n    })\n  }\n}\n\n\nclass UIMultiSelectList {\n  constructor(options) {\n    if (!options || !options.element) return\n    const self = this\n    let settings = {\n      element: undefined,\n      selected: [],\n      name: $.uuid() + '[]',\n      callback: $.noop,\n      state: undefined\n    }\n    this.selection = []\n    $.extend(settings, options)\n    let selections = settings.selected\n    const name = settings.name\n    const list = $(settings.element)\n    const selectionIndicator = function(value) {\n      return`<aside>\n        <span class=\"multi-selection-indicator\">\n          <svg width=\"30px\" height=\"30px\" viewBox=\"0 0 30 30\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g id=\"multi-select-icon\" stroke=\"#979797\">\n              <g id=\"multi-select-circle-+-multi-select-checkmark\" transform=\"translate(2.000000, 2.000000)\">\n                <circle id=\"multi-select-circle\" cx=\"13\" cy=\"13\" r=\"13\"></circle>\n                <path d=\"M4.71521456,15.9877529 L13.0000002,20.7028494 L19.977049,5.70284941\" id=\"multi-select-checkmark\"></path>\n                </g>\n              </g>\n            </g>\n          </svg>\n        </span>\n      </aside>`\n    }\n    if (settings.state) {\n      settings.state.boundComponents.push(this)\n    }\n\n    // this.val = () => __selection\n\n\n    this.render = function(data, append) {\n      var temp = ''\n      if (!settings.element) {\n        return\n      }\n\n      if (!data && settings.state) {\n        data = settings.state.get()\n      }\n\n      if (Array.isArray(data)) {\n        data.map(function(item, idx) {\n          temp += settings.render(item)\n        }).join('')\n      } else {\n        return\n      }\n\n      var elm = $(settings.element)\n      elm.array[0].classList.add('multi-select-list')\n      elm.empty()\n      elm.append(temp)\n      setTimeout(function() {\n        var data = settings.state.get()\n        var listItems = Array.prototype.slice.apply(elm[0].querySelectorAll('li'))\n        listItems.map((item, idx) => {\n          item.dataset.select = data[idx].value\n          if (settings.selected && settings.selected.length) {\n            if (settings.selected.indexOf(idx) > -1) {\n              item.classList.add('selected')\n\n              self.selection.push({\n                index: idx,\n                value: data[idx].value\n              })\n            }\n          }\n          $(item).prepend(selectionIndicator(data[idx][settings.value]))\n          $(item).append(`<input type=\"checkbox\" name=\"${ name }\" value=\"${ data[idx].value }\">`)\n        })\n      })\n    }\n\n    list.on('tap', 'li', function() {\n      const item = this\n      if (item.classList.contains('selected')) {\n        item.classList.remove('selected')\n        item.removeAttribute('aria-checked')\n        item.querySelector('input').checked = false\n        let dataObj = {\n          index: $(item).index(),\n          value: item.dataset.select\n        }\n        let pos\n        self.selection.forEach(function(item, idx) {\n          if (item.value === dataObj.value) {\n            pos = idx\n          }\n        })\n\n        self.selection.splice(pos, 1)\n        settings.callback.apply(this, arguments)\n\n      } else {\n        self.selection.push({\n          index: $(item).index(),\n          value: item.dataset.select\n        })\n        self.selection.unique()\n        item.classList.add('selected')\n        item.setAttribute('aria-checked', true)\n        item.querySelector('input').checked = true\n        settings.callback.apply(this, arguments)\n      }\n    })\n  }\n}\n\n\n$(() => {\n  const chuiBackButtonSVG = `<svg id=\"chui-back-button-svg\" width=\"100px\" height=\"100px\" viewBox=\"0 0 100 100\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n    <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n      <g id=\"chui-back-arrow\" stroke=\"#979797\">\n        <path d=\"M50.7822487,4.05872022 L5.60302012,49.1913445 L50.4625593,94.6779982\" id=\"back-arrow-bracket\"></path>\n        <path d=\"M6,49.368351 L95.8300018,49.368351\" id=\"back-arrow-shaft\"></path>\n      </g>\n    </g>\n  </svg>`\n\n  $.fn.extend({\n    decorateBackButton: function() {\n      this.forEach(button => {\n        if (button.classList.contains('back') || button.classList.contains('backTo')) {\n          const buttonText = button.textContent.trim()\n          button.innerHTML = `<span>${ buttonText }</span>`\n          $(button).prepend(chuiBackButtonSVG)\n        }\n      })\n    }\n  })\n  $(function () {\n    $('.back').decorateBackButton()\n    $('.backTo').decorateBackButton()\n  })\n\n  let isNavigating = false\n  const getScreen = screen => $('#' + screen).array[0]\n\n  const makeScreenCurrent = screen => {\n    if (!screen) return\n    screen.classList.add('current')\n    screen.classList.remove('previous')\n    screen.classList.remove('next')\n  }\n  const makeScreenPrevious = screen => {\n    if (!screen) return\n    screen.classList.remove('current')\n    screen.classList.remove('next')\n    screen.classList.add('previous')\n  }\n  const makeScreenNext = screen => {\n    if (!screen) return\n    screen.classList.remove('current')\n    screen.classList.remove('previous')\n    screen.classList.add('next')\n  }\n\n  $.extend({\n\n    /**\n     * Navigate to Specific Article\n     */\n    GoTo: destination => {\n      if ($.isNavigating) return\n      $.isNavigating = true\n      setTimeout(function () {\n        $.isNavigating = false\n      }, 500)\n      $.ChuiRoutes.push(destination)\n      const currentScreen = $('ui-screen.current').array[0]\n      const destinationScreen = function () {\n        let temp\n        const regex = /:/img\n        temp = regex.test(destination) ? destination.split(':')[0] : destination\n        return getScreen(temp)\n      }()\n      if (currentScreen) currentScreen.scrollTop = 0\n      if (destinationScreen) destinationScreen.scrollTop = 0\n      makeScreenPrevious(currentScreen)\n      makeScreenCurrent(destinationScreen)\n      Router.dispatch(destination)\n    },\n\n    /**\n     * Navigate Back to Previous Article\n     */\n    GoBack: () => {\n      if ($.isNavigating) return\n      $.isNavigating = true\n      const currentScreen = $('ui-screen.current').array[0]\n      $.ChuiRoutes.pop()\n      const destination = $.ChuiRoutes[$.ChuiRoutes.length - 1]\n      const destinationScreen = function () {\n        let temp\n        const regex = /:/img\n        temp = regex.test(destination) ? destination.split(':')[0] : destination\n        return getScreen(temp)\n      }()\n      if (currentScreen[0]) currentScreen[0].scrollTop = 0\n      if (destinationScreen[0]) destinationScreen[0].scrollTop = 0\n      makeScreenNext(currentScreen)\n      makeScreenCurrent(destinationScreen)\n      Router.dispatch(destination)\n      setTimeout(function () {\n        $.isNavigating = false\n      }, 500)\n    },\n\n    isNavigating: false,\n\n    /**\n     * Navigate Back to Non-linear Article\n     */\n    GoBackTo: destination => {\n      const position = $.ChuiRoutes.findIndex(function(dest) {\n        return dest = destination\n      })\n      const destinationScreen = getScreen(destination)\n      while ($.ChuiRoutes.length > position + 1) {\n        let route = $.ChuiRoutes.pop()\n        route = route.split(':')[0]\n        let screen = getScreen(route)\n        makeScreenNext(screen)\n      }\n      makeScreenCurrent(destinationScreen)\n      Router.dispatch(destination)\n    }\n  })\n\n  /**\n   * Initialize Back Buttons:\n   */\n  $('body').on('tap', '.back', function () {\n    if (this.hasAttribute('disabled')) return\n    $.GoBack()\n  })\n\n  /**\n   * Handle navigation events:\n   */\n  const handleNavigationEvent = element => {\n    if ($.isNavigating) return\n    if (!element.dataset.goto) return\n    if ($(element).closest('ul').is('.deletable')) return\n    let destination = element.dataset.goto\n    // console.log(destination)\n    if (!destination) return\n    element.classList.add('selected')\n    setTimeout(() => element.classList.remove('selected'), 1000)\n    /**\n     * Handle navigation:\n     */\n    $.GoTo(destination)\n  }\n\n  $('body').on('tap', 'li', function () {\n    handleNavigationEvent(this)\n  })\n  \n  $('body').on('doubletap', 'li', function () {\n    if (!$.isNavigating) {\n      handleNavigationEvent(this)\n    }\n  })\n  const globalNav = html`<nav id='global-nav'></nav>`\n  $('body').prepend(globalNav)\n})\n\n\n/**\n * Paging control.\n * const options = {\n *   element: selector,\n *   screen: '#main',\n *   data: collection[],\n *   size: 3\n * }\n */\nclass UIPaging {\n  constructor(options) {\n    if (!options) return\n    const pagingControls = `\n      <div class=\"pager\" id='paging-controls'>\n        <button class=\"previous\" id='paging-previous' disabled>\n          <svg width=\"24px\" height=\"36px\" viewBox=\"0 0 24 36\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g id=\"pagination-icons\" stroke=\"#979797\"><path d=\"M19.7729197,3 L4.25431067,17.8699971 L19.7729196,32.9558941\" id=\"page-previous\"></path></g></g></svg>\n        </button>\n        <button class=\"next\" id='paging-next'>\n          <svg width=\"24px\" height=\"36px\" viewBox=\"0 0 24 36\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g id=\"pagination-icons\" stroke=\"#979797\"><path d=\"M4.08862955,3.06871359 L20.0261609,18.0528447 L4.08862956,32.9999994\" id=\"page-next\"></path></g></g></svg>\n        </button>\n      </div>`;\n    const settings = {}\n    $.extend(settings, options)\n    var screen = $(settings.screen);\n    screen.find('nav').append(pagingControls)\n    var chunks = $.chunk(settings.data, settings.size)\n\n    /**\n     * Setup buttons for paging.\n     */\n    $(() => {\n      $('#paging-next').on($.eventStart, function() {\n        if (this.disabled) return\n        var currPage = document.querySelector('article.current')\n        if (!currPage) return\n        var nextPage = currPage.nextElementSibling\n        if (nextPage && nextPage.className === 'next') {\n          currPage.classList.add('previous')\n          currPage.classList.remove('current')\n          nextPage.classList.add('current')\n          nextPage.classList.remove('next')\n          document.getElementById('paging-previous').removeAttribute('disabled')\n          if (!nextPage.nextElementSibling || !nextPage.nextElementSibling.classList.contains('next')) {\n            this.disabled = true\n          }\n        }\n      })\n      $('#paging-previous').on($.eventStart, function() {\n        if (this.disabled) return\n        var currPage = document.querySelector('article.current')\n        if (!currPage) return\n        var nextPage = currPage.previousElementSibling\n        if (nextPage && nextPage.className === 'previous') {\n          currPage.classList.add('next')\n          currPage.classList.remove('current')\n          nextPage.classList.add('current')\n          nextPage.classList.remove('previous')\n          document.getElementById('paging-next').removeAttribute('disabled')\n          if (!nextPage.previousElementSibling || !nextPage.previousElementSibling.classList.contains('previous')) {\n            this.disabled = true\n          }\n        }\n      })\n\n    })\n\n    this.render = function() {\n      var temp = ''\n      if (Array.isArray(chunks)) {\n\n        temp = settings.render(chunks)\n\n      } else {\n        return\n      }\n      var elm = $(settings.screen).find('section')\n      elm.empty()\n      elm.append(temp)\n    }\n\n  }\n}\n\n\nclass UIPopover {\n  constructor(options) {\n    if (!options) return\n    /**\n      id: myUniqueID,\n      title: 'Great',\n      callback: myCallback,\n    */\n    options = options || {}\n    let settings = {\n      id: $.uuid(),\n      callback: $.noop,\n      title: '',\n    }\n    $.extend(settings, options)\n    if (options && options.content) {\n      settings.content = options.content\n    } else {\n      settings.content = ''\n    }\n    const header = `<header><h1>${ settings.title }</h1></header>`\n    const popover = `<ui-popover id=\"${ settings.id }\">${ header }<section></section></ui-popover>`\n    const popoverID = '#' + settings.id\n\n    var side = document.dir === 'rtl' ? 'right' : 'left'\n\n    this.open = function() {\n      $.block('.5')\n      if (document.body.classList.contains('themeIsAndroid')) {\n        document.getElementById(settings.id).style.display = 'block'\n        setTimeout(() => {\n          document.getElementById(settings.id).classList.add('opened')\n          $.positionPopover(settings.trigger)\n        })\n      } else {\n        document.getElementById(settings.id).style.display = 'block'\n        document.getElementById(settings.id).classList.add('opened')\n        $.positionPopover(settings.trigger)\n      }\n    }\n\n    $('body').append(popover)\n    $(popoverID)[0].dataset.triggerEl = settings.trigger\n    $(popoverID).find('section').append(settings.content)\n    settings.callback.call(settings.callback, settings.trigger)\n\n  }\n}\n\n$.extend({\n  positionPopover: element => {\n    const el = document.querySelector(element)\n    let left = el.offsetLeft\n    let calcLeft\n    let calcTop\n    let po = $('ui-popover.opened')\n    calcLeft = po.array[0].offsetLeft\n    calcTop = el.offsetTop + el.clientHeight\n\n    if (document.dir === 'rtl') {\n      if ((po.array[0].clientWidth + el.offsetLeft) > window.innerWidth) {\n        po.css({\n          left: (po.array[0].clientLeft - 20) + 'px',\n          'top': (calcTop) + 25 + 'px'\n        })\n      } else {\n        if (el.offsetLeft < 250) {\n          po.css({\n            left: 20 + 'px',\n            'top': (calcTop + 25) + 'px'\n          })\n        } else {\n          po.css({\n            left: (left - 20) + 'px',\n            'top': (calcTop + 25) + 'px'\n          })\n        }\n      }\n    } else {\n      if ((po.array[0].clientWidth + el.offsetLeft) > window.innerWidth) {\n        po.css({\n          left: (window.innerWidth - po.array[0].clientWidth - 20) + 'px',\n          'top': (calcTop) + 25 + 'px'\n        })\n      } else {\n        po.css({\n          left: left + 'px',\n          'top': (calcTop + 25) + 'px'\n        })\n      }\n    }\n  },\n\n  closePopover: () => {\n    var popover = document.querySelector('ui-popover.opened')\n    if (!popover) return\n    $.unblock()\n    popover.classList.remove('opened')\n    popover.style.display = 'none'\n  }\n})\n$(() => {\n  window.onresize = () => {\n    const popover = document.querySelector('ui-popover.opened')\n    if (popover) {\n      const trigger = document.querySelector('ui-popover.opened').dataset.triggerEl\n      $.positionPopover(trigger)\n    }\n  }\n  $('body').on($.eventStart, 'ui-mask', e => {\n    $.closePopover()\n  })\n})\n\n\nclass UIPopup {\n  constructor(options) {\n\n    if (!options) return\n    let settings = {}\n    settings.id = $.uuid()\n    settings.content = true\n    $.extend(settings, options)\n    let width = ''\n    if (settings.width) {\n      width = `style=\"width:${settings.width}px\"`\n    }\n\n    const id = settings.id\n    const title = settings.title ? `<header><h1>${settings.title}</h1></header>` : ''\n    const message = settings.message ? `<p role=\"note\">${options.message}</p>` : ''\n    const cancelButton = options.cancelButton ? `<button class=\"cancel\" role=\"button\">${settings.cancelButton}</button>` : ''\n    const continueButton = settings.continueButton ? `<button class=\"continue\" role=\"button\">${settings.continueButton}</button>` : ''\n    const callback = settings.callback || $.noop\n    let popup\n    if (settings.empty) {\n      popup = `<div id=\"${id}\" class=\"popup\"><div ${width} class=\"dialog\" role=\"alertdialog\"></div></div>`\n    } else {\n      popup = `<div class=\"popup\" id=\"${id}\"><div class=\"dialog\" role=\"alertdialog\"><div class=\"panel\">${title}${message}</div><footer>${cancelButton}${continueButton}</footer></div></div>`\n    }\n    function closePopup(popup) {\n      popup.classList.remove('opened')\n    }\n    $('body').append(popup)\n    if (settings.empty) {\n      $('.dialog').css({\n        \"display\": \"-webkit-flex\",\n        \"-webkit-justify-content\": \"center\",\n        \"-webkit-align-items\": \"center\",\n        \"display\": \"flex\",\n        \"justify-content\": \"center\",\n        \"align-items\": \"center\"\n      })\n    }\n    this.close = function() {\n      const popup = document.getElementById(settings.id)\n      if (popup) popup.classList.remove('opened')\n    }\n    if (callback && continueButton) {\n      $('#' + id).find('.continue').on('tap', function () {\n        const self = this\n        if ($.isAndroid || $.isChrome) {\n          self.classList.add('selected')\n          setTimeout(function () {\n            self.classList.remove('selected')\n            $('.popup').ClosePopup()\n            callback.call(callback)\n          }, 300)\n        } else {\n          closePopup($(this).closest('.popup').array[0])\n          callback.call(callback)\n        }\n      })\n    }\n    $('#' + id).find('.cancel').on('tap', function () {\n      const popup = $(this).closest('.popup').array[0]\n      const self = this\n      if ($.isAndroid || $.isChrome) {\n        self.classList.remove('selected')\n        setTimeout(function () {\n          self.classList.remove('selected')\n          closePopup(popup)\n        }, 300)\n      } else {\n          closePopup(popup)\n      }\n    })\n\n    $(function() {\n      $('.popup').on('tap', function (e) {\n        this.classList.remove('opened')\n      })\n    })\n\n    this.open = () => {\n      const popup = document.getElementById(settings.id)\n      if (popup) {\n        popup.classList.remove('forPopup')\n        popup.classList.add('opened')\n      }\n    }\n  }\n}\n\n\nclass UIRange {\n  constructor(range) {\n    function _range(input) {\n      if (!input || input.nodeName !== 'INPUT') return\n      let newPlace\n      const width = input.clientWidth\n      const newPoint = (input.value - input.getAttribute(\"min\")) / (input.getAttribute(\"max\") - input.getAttribute(\"min\"))\n      let offset = -1.3\n      if (newPoint < 0) {\n        newPlace = 0\n      } else if (newPoint > 1) {\n        newPlace = width\n      } else {\n        newPlace = width * newPoint + offset\n        offset -= newPoint\n      }\n      if ($.theme  && $.theme === 'android') {\n        $(input).css({\n          'background-size': Math.round(newPlace) + 'px 3px, 100% 3px'\n        })\n      } else {\n        $(input).css({\n          'background-size': Math.round(newPlace) + 'px 10px'\n        })\n      }\n    }\n    setTimeout(() => {\n      const ranges = $('input[type=range]')\n      if (ranges.array.length) {\n        ranges.array.forEach(ctx => {\n          _range(ctx)\n        })\n      }\n    })\n    $('body').on('input', 'input[type=range]', function() {\n      _range(this)\n    })\n    if (range) {\n      $(() => {\n        _range(range)\n      })\n    }\n  }\n}\n\n\n$.extend({\n  ChuiRoutes: []\n})\nclass Router {\n  constructor() {}\n\n  addRoute(...options) {\n    options.forEach(item => $.subscribe(item.route, item.callback));\n  }\n}\n\n$.extend(Router, {\n  dispatch: route => {\n    if (!route) return\n    let temp\n    let id\n    if (route.match(/\\:/)) {\n      temp = route.split(':')\n      id = temp[1]\n      route = temp[0]\n    }\n    $.publish(route, id)\n  }\n})\n\n$.extend($.ChuiRoutes, {\n  getFullRoute: function getFullRoute() {\n    return this.join('/')\n  }\n})\n\n$(() => {\n  if ($('ui-screen').array.length && !$.ChuiRoutes.length) {\n    $.ChuiRoutes.push($('ui-screen').array[0].id)\n  }\n})\n\n\nclass UISegmented {\n  constructor(options) {\n    if (!options || !options.element) return\n    const self = this\n    let settings = {\n      selected: 0,\n      callback: $.noop\n    }\n    $.extend(settings, options)\n\n    this.button\n    let segmented\n    const labels = (settings.labels) ? settings.labels : []\n    this.index\n    this.element = settings.element\n\n    function createSegmentedButton() {\n      let androidSelectionIndicator = ''\n      if ($.theme = 'android') {\n        androidSelectionIndicator = '<span class=\"androidSelectionBorder\"></span>'\n      }\n      let __segmented = ['<ui-segmented>']\n      labels.forEach(function(ctx, idx) {\n        if (settings.selected === idx) {\n          __segmented.push('<button role=\"radio\" aria-checked=\"true\" class=\"selected\">')\n          self.index = idx\n        } else {\n          __segmented.push('<button role=\"radio\">')\n        }\n\n        __segmented.push(ctx)\n        __segmented.push('</button>')\n      })\n      __segmented.push(androidSelectionIndicator + '</ui-segmented>')\n      segmented = __segmented.join('')\n      $(settings.element).append(segmented)\n      self.button = $(settings.element).find('button').eq(settings.selected).array[0]\n\n\n\n    }\n    createSegmentedButton()\n\n    /**\n     * For Android Material Design:\n     */\n    let androidSelectionBorder\n    if ($.theme === 'android') {\n      androidSelectionBorder = $(this.element).find('.androidSelectionBorder')\n      let selectedButton = $(this.element).find('button').eq(settings.selected)\n      let width = selectedButton.array[0].clientWidth\n      let left = selectedButton.array[0].offsetLeft\n      androidSelectionBorder.css({width: width + 'px', left: left + 'px'})\n    }\n\n    const callback = settings.callback\n    $(this.element).on('tap', 'ui-segmented > button', function(e) {\n      if (this.parentNode.classList.contains('paging')) return\n      $(this).siblings('button').array.map(btn => btn.classList.remove('selected'))\n      $(this).siblings('button').array.map(btn => btn.removeAttribute('aria-checked'))\n      this.classList.add('selected')\n      self.index = $(this).index()\n      self.button = this\n      this.setAttribute('aria-checked', true)\n      callback.call(this, e)\n\n      /**\n       * For Android Material Design:\n       */\n      if ($.theme === 'android') {\n        let width = this.clientWidth\n        let left = this.offsetLeft\n        if (document.dir === 'rtl') {\n          left = this.offsetLeft\n        }\n        androidSelectionBorder.css({width: width + 'px', left: left + 'px'})\n      }\n    })\n  }\n}\n\n\nclass UISelectList {\n  constructor(options) {\n    if (!options || !options.element) return;\n    var self = this\n    let settings = {\n      element: undefined,\n      selected: undefined,\n      name: $.uuid(),\n      callback: $.noop,\n      state: undefined,\n      render: undefined,\n      value: undefined,\n    };\n    $.extend(settings, options)\n    this.value = settings.value\n    this.index = settings.selected\n    const name = settings.name\n    this.elm = $(settings.element)\n\n    const selectionIndicator = function(value) {\n      return `\n        <input type='checkbox' value='${value}' name='${settings.name}'><aside>\n        <span class=\"selection-indicator\">\n          <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 20 20\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n              <g id=\"selection-indicator\">\n                <path d=\"M2,13 L9.9294326,16.8406135 L17.1937075,1.90173332\" id=\"checkmark\" stroke=\"#007AFF\" stroke-width=\"2\"></path>\n                <circle id=\"outer-circle\" stroke=\"#007AFF\" stroke-width=\"2\" cx=\"10\" cy=\"10\" r=\"9\"></circle><circle id=\"inner-circle\" fill=\"#007AFF\" cx=\"10\" cy=\"10\" r=\"5\"></circle>\n              </g>\n            </g>\n          </svg>\n        </span>\n      </aside>\n      `\n    }\n    if (settings.state) {\n      settings.state.boundComponents.push(this)\n    }\n    let settingsData\n    if (settings.state) settingsData = settings.state.get()\n    this.value = settingsData ? settingsData[settings.selected].value : ''\n    this.index = settings.selected\n\n    this.render = function(data, append) {\n      var temp = ''\n      if (!settings.element) {\n        return\n      }\n\n      if (!data && settings.state) {\n        data = settings.state.get()\n      }\n\n      if (Array.isArray(data)) {\n        data.map(function(item) {\n          temp += settings.render(item)\n        }).join('')\n      } else {\n        return\n      }\n\n      this.elm.textContent = ''\n      var elm = $(settings.element)\n      elm.empty()\n      elm.append(temp)\n      setTimeout(function() {\n        var data = settings.state.get()\n        var listItems = Array.prototype.slice.apply(elm[0].querySelectorAll('li'))\n        listItems.map((item, idx) => {\n          $(item).append(selectionIndicator(data[idx].value))\n          if (idx == settings.selected) item.classList.add('selected')\n        })\n      })\n    }\n\n    $(settings.element).on('tap', 'li', function() {\n      const item = $(this);\n      self.value = this.querySelector('input').value\n      self.index = item.index()\n\n      var siblings = item.siblings('li')\n      siblings.forEach(function(sib) {\n        sib.removeAttribute('aria-checked')\n        sib.classList.remove('selected')\n        sib.querySelector('input').checked = false\n      })\n      this.classList.add('selected')\n      this.setAttribute('aria-checked', true)\n      this.querySelector('input').checked = true\n      settings.callback.apply(this, arguments)\n    });\n  }\n}\n\n\nclass UISheet {\n  constructor(options) {\n    if (!options) return\n    /**\n      var options {\n        id : 'starTrek',\n        background: 'transparent',\n        handle: false,\n        slideDown: false // default is slideUp\n      }\n    */\n    if (!options) return\n    let settings = {\n      id: $.uuid(),\n      background: '',\n      handle: true,\n      slideFrom: ''\n    }\n\n    $.extend(settings, options)\n\n    if (settings.background) settings.background = ' style=\"background-color:' + settings.background + '\" '\n    if (settings.slideFrom === 'top') {\n      settings.slideDown = ` class=\"slideDown\" `\n    } else {\n      settings.slideFrom = ' '\n    }\n    if (settings.handle === false) settings.handle = ''\n    else settings.handle =\n      `<ui-sheet-handle>\n        <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 76 27\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xml:space=\"preserve\" style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:butt;stroke-linejoin:butt;stroke-miterlimit:1.41421;\">\n          <g id=\"sheet-handle\" transform=\"matrix(1,0,0,1,-29.7966,-15.7797)\">\n            <path id=\"sheet-handle-path\" d=\"M36.25,26.242L67.645,34.215L98.176,25.789\" style=\"fill:none;\"/>\n          </g>\n        </svg>\n      </ui-sheet-handle>`\n\n    const sheet = `<ui-sheet id=\"${ settings.id }\" ${ settings.slideDown } ${ settings.background }>${ settings.handle }<section></section></ui-sheet>`\n\n    $('body').append(sheet)\n\n    $('#' + settings.id).find('ui-sheet-handle').on($.eventStart, () => {\n      $('#' + settings.id).array[0].classList.remove('opened')\n      document.querySelector('ui-screen.current').classList.remove('blurred')\n    })\n\n    this.show = () => {\n      let sheet = document.getElementById(settings.id)\n      document.querySelector('ui-screen.current').classList.add('blurred')\n      sheet.classList.add('opened')\n      if ($.isAndroid || $.isChrome) {\n        sheet.style.display = 'block'\n        setTimeout(function() {\n          sheet.classList.add('opened')\n        }, 20)\n      } else {\n        sheet.classList.add('opened')\n      }\n    }\n\n    this.hide = () => {\n      $('#' + settings.id).array[0].classList.remove('opened')\n      document.querySelector('ui-screen.current').classList.remove('blurred')\n    }\n\n    this.populate = (template) => $('#' + settings.id).find('section').append(template)\n  }\n}\n\n\nclass UISlideOut {\n  constructor(id) {\n    const slideoutID = id || $.uuid()\n    this.id = slideoutID\n    const buttonID = 'slideoutBtnID1234'\n    const slideOutButton = `<button id=\"${ buttonID }\" class=\"slide-out-button\"></button>`\n    const slideOut = `<ui-slideout id=\"${ slideoutID }\"><section></section></ui-slideout>`\n    $('body').prepend(slideOut)\n    $('body').append(slideOutButton)\n    /**\n     * Get Slide Out & Slide Out button:\n     */\n    let slideout = document.getElementById(slideoutID)\n    let slideOutBtn = document.getElementById(buttonID)\n\n    /**\n     * Set up state for Slide Out and screens:\n     */\n    slideout.setAttribute('aria-hidden', true)\n    $('ui-screen').forEach(screen => {\n      screen.setAttribute('aria-hidden', true)\n    })\n    document.querySelector('ui-screen').classList.add('show')\n    document.querySelector('ui-screen').setAttribute('aria-hidden', \"false\")\n\n\n    /**\n     * Handle Slide Out button events:\n     */\n    $('#'+buttonID).on('tap', function() {\n      this.classList.toggle('focused')\n      slideout.classList.toggle('open')\n      if (slideout.classList.contains('open')) {\n        $.block('.5')\n      } else {\n        $.unblock()\n      }\n    })\n\n    $(slideout).on('tap', 'li', function() {\n      let menuItems = $(slideout).find('li[data-show]')\n      slideout.setAttribute('aria-hidden', 'true')\n      $.unblock()\n\n      /**\n       * Toggle Slide Out button:\n       */\n      slideOutBtn.classList.toggle('focused')\n      while ($.ChuiRoutes.length > 1) {\n        $.GoBack()\n      }\n\n      /**\n       * This list item shows a single screen:\n       */\n      menuItems.forEach(item => {\n        if (item.classList.contains('selected')) {\n          item.classList.remove('selected')\n        }\n      })\n      const shownScreen = document.querySelector('ui-screen.show')\n      shownScreen.classList.remove('show')\n      shownScreen.setAttribute('aria-hidden', true)\n      const screenToShow = '#' + this.dataset.show.split(':')[0]\n      /**\n       * Account for presence of navigation list state:\n       */\n      setTimeout(function() {\n        document.querySelector(screenToShow).classList.remove('next')\n      }, 200)\n      document.querySelector(screenToShow).classList.add('show')\n      // console.log()\n      Router.dispatch(this.dataset.show)\n      /**\n       * Close slide out:\n       */\n      slideout.classList.remove('open')\n    })\n  }\n\n  populate(options) {\n    if (!options) return\n    const slideout = document.getElementById(this.id)\n    if (!options) {\n      return\n    } else {\n      slideout.querySelector('section').appendChild($.h('<ul class=\"list\"></ul>'))\n      let list = slideout.querySelector('ul')\n      options.forEach(ctx => {\n        for (let key in ctx) {\n          if (key === 'header') {\n            $(list).append('<li class=\"menu-header\"><h2>' + ctx[key] + '</h2></li>')\n          } else {\n            $(list).append('<li data-show=\"' + key + '\"><h3>' + ctx[key] + '</h3></li>')\n          }\n        }\n      })\n    }\n  }\n}\n\n\nclass UIStepper {\n  constructor(options) {\n    if (!options || !options.element || !options.min || !options.max) return\n    var self = this\n    this.stepper = $(options.element)\n    const min = options.min\n    const max = options.max\n    const defaultValue = options.defaultValue ? options.defaultValue : options.min\n    let increaseSymbol = '+'\n    let decreaseSymbol = '-'\n    let disabledDecrease = ''\n    let disabledIncrease = ''\n    this.value\n    if (min === defaultValue) {\n      disabledDecrease = ' disabled '\n    } else if (max === defaultValue) {\n      disabledIncrease = ' disabled '\n    }\n    const decreaseButton = '<button ' + disabledDecrease + ' class=\"decrease\"><span>-</span></button>'\n    const label = `<label>${ defaultValue }</label><input type=\"text\" value=\"${ defaultValue }\">`\n    const increaseButton = '<button ' + disabledIncrease + '  class=\"increase\"><span>+</span></button>'\n    $(options.element).append(decreaseButton + label + increaseButton)\n    var dataVal = {\n      min: min,\n      max: max,\n      defaultValue: defaultValue\n    }\n    $(options.element).array[0].dataset.value = JSON.stringify(dataVal)\n\n    const increaseStepperValue = function() {\n      const currentValue = $(options.element).find('input').array[0].value\n      const value = JSON.parse($(options.element).array[0].dataset.value)\n      const max = value.max\n      let newValue\n      newValue = parseInt(currentValue, 10) + 1\n      $(options.element).find('button:first-of-type').array[0].removeAttribute('disabled')\n      $(options.element).find('label').text(newValue)\n      $(options.element).find('input').array[0].value = newValue\n      self.value = newValue\n      if (newValue == max) {\n        this.setAttribute('disabled', 'disabled')\n      }\n    }\n\n    const decreaseStepperValue = function() {\n      const currentValue = $(options.element).find('input').array[0].value\n      const value = JSON.parse($(options.element).array[0].dataset.value)\n      let newValue\n      newValue = parseInt(currentValue, 10) - 1\n      $(options.element).find('button:last-of-type').array[0].removeAttribute('disabled')\n      $(options.element).find('label').text(newValue)\n      $(options.element).find('input').array[0].value = newValue\n      self.value = newValue\n      if (newValue === min) {\n        this.setAttribute('disabled', 'disabled')\n      }\n    }\n\n    $(options.element).find('button:last-of-type').on($.eventStart, function() {\n      increaseStepperValue.call(this, this.__stepper)\n    })\n\n    $(options.element).find('button:first-of-type').on($.eventStart, function() {\n      decreaseStepperValue.call(this, this.__stepper)\n    })\n  }\n}\n\n\nclass UISwitch {\n  constructor(options) {\n    if (!options || !options.element) return\n    this.checked = false\n    this.value = undefined\n    const self = this\n    let settings = {\n      element: undefined,\n      name: undefined,\n      value: undefined,\n      checked: false,\n      on: $.noop,\n      off: $.noop\n    }\n    $.extend(settings, options)\n    this.checked = settings.checked\n    this.value = settings.value\n    let __element = $(settings.element)\n    let __el = __element.array[0]\n    /**\n     * Abrstract swipe for left-to-right and right-to-left:\n     */\n    let swipeOn = \"swiperight\"\n    let swipeOff = \"swipeleft\"\n    if (document.documentElement.dir === \"rtl\") {\n      swipeOn = \"swipeleft\"\n      swipeOff = \"swiperight\"\n    }\n\n    let checkState = settings.checked ? ' checked' : ''\n    const __switch = `<em></em><input type=\"checkbox\" name=\"${ settings.name }\" ${ checkState } value=\"${ settings.value }\">`\n\n    __element.append(__switch)\n    __el.value =  settings.value\n    __el.setAttribute('name', settings.name)\n\n    if (this.checked) {\n      __el.classList.add('checked')\n      __el.setAttribute('role', 'checkbox')\n      __el.checked = true\n    }\n\n\n\n    __element.on('tap', function() {\n      const checkbox = this.querySelector('input')\n      if (this.classList.contains('checked')) {\n        this.classList.remove('checked')\n        this.setAttribute('aria-checked', false)\n        checkbox.removeAttribute('checked')\n        this.checked = false\n        self.checked = false\n        __el.checked = false\n        if (settings.off) {\n          settings.off.call(this)\n        }\n      } else {\n        this.classList.add('checked')\n        checkbox.setAttribute('checked', 'checked')\n        __el.checked = true\n        this.setAttribute('aria-checked', true)\n        this.checked = true\n        self.checked = true\n        if (settings.on) {\n          settings.on.call(this)\n        }\n\n      }\n    })\n    __element.on(swipeOn, function() {\n      const checkbox = this.querySelector('input')\n      if (this.classList.contains('checked')) {\n        this.classList.remove('checked')\n        this.setAttribute('aria-checked', false)\n        __el.checked = false\n        checkbox.removeAttribute('checked')\n        this.checked = true\n        self.checked = true\n        if (settings.on) {\n          settings.on.call(this)\n        }\n      }\n    })\n    __element.on(swipeOff, function() {\n      const checkbox = this.querySelector('input')\n      if (!this.classList.contains('checked')) {\n        this.classList.add('checked')\n        checkbox.setAttribute('checked', 'checked')\n        this.setAttribute('aria-checked', true)\n        __el.checked = true\n        this.checked = false\n        self.checked = false\n        if (settings.off) {\n          settings.off.call(this)\n        }\n      }\n    })\n  }\n}\n\n\nclass UITabbar {\n  constructor(options) {\n    if (!options) return\n    let id = $.uuid()\n    let settings = {\n      selected: 0\n    }\n    $.extend(settings, options)\n    if (!settings.icons.length) {\n      settings.icons = settings.labels\n    }\n    if (!settings.id) {\n      settings.id = id\n    } else {\n      id = settings.id\n    }\n\n    /* Private variable to keep track of screens. */\n    let __tabbarScreens = new Stack()\n\n    let screens = new Stack()\n    const screenPrefix = '#'\n\n    if (settings.screens) {\n      settings.screens.forEach(function (screen, idx) {\n        if (!/screenPrefix/img.test(screen)) {\n          __tabbarScreens.push(document.getElementById(screen))\n          __tabbarScreens.array[idx].classList.add('tabScreen')\n        } else {\n          __tabbarScreens.concat($(ui-screen))\n          $(screen).array[0].classList.add('tabScreen')\n        }\n      })\n    } else {\n      settings.labels.forEach(function (screen, idx) {\n        __tabbarScreens.push(screens.eq(idx))\n      })\n    }\n    let selectedScreen\n    let androidSelectionIndicator = ''\n    if ($.theme === 'android') {\n      androidSelectionIndicator = '<span class=\"androidSelectionBorder\"></span>'\n    }\n    const showIcons = settings.showIcons ? ' class=\"showIcons\" ' : ''\n\n    /* Create tabs. */\n    const makeTab = (label, icon, idx) => {\n      let tab = '<button role=\"tab\" class=\"' + icon\n      if (settings.selected === idx) {\n        tab += ' selected'\n        $.ChuiRoutes = [settings.screens[idx]]\n      }\n      tab += '\"'\n      if (settings.screens && settings.screens.length) {\n        tab += ` data-id=\"${ settings.screens[idx] }\" data-chui-route=\"${ settings.screens[idx] }\"`\n      }\n      tab += `><span class=\"icon\"></span><label>${ settings.labels[idx] }</label></button>`\n      return tab\n    }\n    /* Create tab bar. */\n    let tabbarTmpl = document.createElement('ui-tabbar')\n    tabbarTmpl.role = \"tabpanel\"\n    if (settings.showIcons) tabbarTmpl.classList.add('showIcons')\n    tabbarTmpl.insertAdjacentHTML('beforeend', androidSelectionIndicator)\n    tabbarTmpl.id = settings.id\n    window.tabbarTmpl = tabbarTmpl\n\n    if (settings.labels.length) {\n      settings.labels.forEach(function (label, idx) {\n        var tab = makeTab(label, settings.icons[idx], idx)\n        tabbarTmpl.appendChild($.h(tab))\n      })\n    }\n\n    /* Append tabbar to page. */\n    $('body').prepend(tabbarTmpl)\n\n    /* Get id of appended tab bar. */\n    const tabbar = $('#' + settings.id)\n    const selectedTabButton = tabbar.find('button.selected')\n\n\n    /* Private variables to manage tab bar. */\n    const __tabbarButtons = tabbar.find('button')\n    const __selectedTabbarButton = __tabbarButtons.eq(settings.selected)\n    const __selectedTabbarScreen = __tabbarScreens.eq(settings.selected)\n\n    /* For Android Material Design. */\n    const androidSelectionBorder = tabbar.find('.androidSelectionBorder')\n    function handleTabSelectionForAndroid(tab) {\n      let width = tab.clientWidth\n      let left = tab.offsetLeft\n      androidSelectionBorder.css({width: width + 'px', left: left + 'px'})\n    }\n    if ($.theme === 'android') {\n      $(function() {\n        console.dir(selectedTabButton)\n        handleTabSelectionForAndroid(selectedTabButton.array[0])\n\n      })\n    }\n\n    this.getSelectedTab = () => {\n      return __selectedTabbarButton\n    }\n\n    this.getSelectedScreen = () => {\n      return __selectedTabbarScreen\n    }\n\n    /* Setup events on tabs. */\n    $(() => {\n\n      const tabbarButtons = tabbar.find('button')\n\n      /* Tap on tab. */\n      tabbar.on('tap', 'button', function () {\n        const tab = this\n        const routes = tab.dataset.chuiRoute.split('/')\n        const fullRoute = $.ChuiRoutes.join('/')\n        let navRoutesFull = tab.dataset.chuiRoute\n        const navRoutes = navRoutesFull.split('/')\n        const rr = $.ChuiRoutes\n\n        /* This tab holds a navigation list. */\n        var currBtn = document.querySelector('ui-tabbar button.selected')\n        currBtn.classList.remove('selected')\n        currBtn.dataset.chuiRoute = fullRoute\n        this.classList.add('selected')\n        if (navRoutes.length > 1) {\n          navRoutesFull = tab.dataset.chuiRoute\n\n          const navRoutes = navRoutesFull.split('/')\n\n          const currScreen = document.querySelector('ui-screen.current')\n          if (currScreen) {\n            currScreen.classList.remove('current')\n            currScreen.classList.add('next')\n          }\n          const prevScreen = document.querySelector('ui-screen.previous')\n          if (prevScreen) {\n            prevScreen.classList.remove('previous')\n            prevScreen.classList.add('next')\n          }\n\n          navRoutes.forEach( (route, idx) => {\n            const routing = route.split(':')\n            let whichRoute = routing[0]\n            let screen = document.getElementById(whichRoute)\n            if (idx !== routes.length - 1) {\n              screen.classList.remove('next')\n              screen.classList.add('previous')\n              screen.setAttribute('aria-hidden', true)\n            } else {\n              screen.classList.remove('next')\n              screen.classList.add('current')\n              screen.setAttribute('aria-hidden', false)\n            }\n          })\n\n          /* Take care of routes. */\n          $.ChuiRoutes = routes\n          Router.dispatch(routes[routes.length - 1])\n\n          /* Handle Android ripple effect. */\n          if ($.theme === 'android') {\n            handleTabSelectionForAndroid(tab)\n          }\n\n          /* This tab has a single screen. */\n        } else {\n          const screen = $('ui-screen').eq($(tab).index())\n\n          /* Deal with previously selected tab and screen. */\n          const currScreen =  document.querySelector('ui-screen.current')\n          if (currScreen) {\n            currScreen.classList.remove('current')\n            currScreen.classList.add('next')\n            currScreen.setAttribute('aria-hidden', true)\n          }\n          const prevScreen = document.querySelector('ui-screen.previous')\n\n          if (prevScreen) {\n            prevScreen.classList.remove('previous')\n            prevScreen.classList.add('next')\n            prevScreen.setAttribute('aria-hidden', true)\n          }\n\n          /* Set this tab to `selected`. */\n          tab.classList.add('selected')\n          if ($.theme === 'android') {\n            handleTabSelectionForAndroid(tab)\n          }\n\n          routes.forEach( (route, idx) => {\n            const routing = route.split(':')\n            const whichRoute = routing[0]\n            const wr = document.getElementById(whichRoute)\n            if (idx !== routes.length - 1) {\n              wr.classList.remove('next')\n              wr.classList.add('previous')\n              wr.setAttribute('aria-hidden', true)\n\n            } else {\n              if (wr) {\n                wr.classList.remove('next')\n                wr.classList.add('current')\n                wr.setAttribute('aria-hidden', false)\n              } else {\n              }\n            }\n          })\n\n          /* Take care of routes. */\n          $.ChuiRoutes = routes\n          Router.dispatch(fullRoute)\n        }\n      })\n\n      $('ui-screen').eq(settings.selected).array[0].classList.remove('next')\n      $('ui-screen').eq(settings.selected).array[0].classList.add('current')\n    })\n\n  }\n}\n\n\n\n// const UITabbar = (() => {\n//   /* Creates a Tab Bar for Toggling Articles. */\n//   function _tabBar(options) {\n//     /**\n//     var options = {\n//       id: 'mySpecialTabbar',\n//       labels: [\"Refresh\", \"Add\", \"Info\", \"Downloads\", \"Favorite\"],\n//       icons: [\"refresh\", \"add\", \"info\", \"downloads\", \"favorite\"],\n//       screens: [],\n//       selected: 2,\n//       showIcons: false // set to true to show icons for Android\n//     }\n//     */\n//     if (!options) return\n//     let id = $.uuid()\n//     let settings = {\n//       selected: 0\n//     }\n//     $.extend(settings, options)\n//     if (!settings.icons.length) {\n//       settings.icons = settings.labels\n//     }\n//     if (!settings.id) {\n//       settings.id = id\n//     } else {\n//       id = settings.id\n//     }\n\n//     /* Private variable to keep track of screens. */\n//     let __tabbarScreens = new Stack()\n\n//     let screens = new Stack()\n//     const screenPrefix = '#'\n\n//     if (settings.screens) {\n//       settings.screens.forEach(function (screen, idx) {\n//         if (!/screenPrefix/img.test(screen)) {\n//           __tabbarScreens.push(document.getElementById(screen))\n//           __tabbarScreens.array[idx].classList.add('tabScreen')\n//         } else {\n//           __tabbarScreens.concat($(ui-screen))\n//           $(screen).array[0].classList.add('tabScreen')\n//         }\n//       })\n//     } else {\n//       settings.labels.forEach(function (screen, idx) {\n//         __tabbarScreens.push(screens.eq(idx))\n//       })\n//     }\n//     let selectedScreen\n//     let androidSelectionIndicator = ''\n//     if ($.theme === 'android') {\n//       androidSelectionIndicator = '<span class=\"androidSelectionBorder\"></span>'\n//     }\n//     const showIcons = settings.showIcons ? ' class=\"showIcons\" ' : ''\n\n//     /* Create tabs. */\n//     const makeTab = (label, icon, idx) => {\n//       let tab = '<button role=\"tab\" class=\"' + icon\n//       if (settings.selected === idx) {\n//         tab += ' selected'\n//         $.ChuiRoutes = [settings.screens[idx]]\n//       }\n//       tab += '\"'\n//       if (settings.screens && settings.screens.length) {\n//         tab += ` data-id=\"${ settings.screens[idx] }\" data-chui-route=\"${ settings.screens[idx] }\"`\n//       }\n//       tab += `><span class=\"icon\"></span><label>${ settings.labels[idx] }</label></button>`\n//       return tab\n//     }\n//     /* Create tab bar. */\n//     let tabbarTmpl = document.createElement('ui-tabbar')\n//     tabbarTmpl.role = \"tabpanel\"\n//     if (settings.showIcons) tabbarTmpl.classList.add('showIcons')\n//     tabbarTmpl.insertAdjacentHTML('beforeend', androidSelectionIndicator)\n//     tabbarTmpl.id = settings.id\n//     window.tabbarTmpl = tabbarTmpl\n\n//     if (settings.labels.length) {\n//       settings.labels.forEach(function (label, idx) {\n//         var tab = makeTab(label, settings.icons[idx], idx)\n//         tabbarTmpl.appendChild($.h(tab))\n//       })\n//     }\n\n//     /* Append tabbar to page. */\n//     $('body').prepend(tabbarTmpl)\n\n//     /* Get id of appended tab bar. */\n//     const tabbar = $('#' + settings.id)\n//     const selectedTabButton = tabbar.find('button.selected')\n\n\n//     /* Private variables to manage tab bar. */\n//     const __tabbarButtons = tabbar.find('button')\n//     const __selectedTabbarButton = __tabbarButtons.eq(settings.selected)\n//     const __selectedTabbarScreen = __tabbarScreens.eq(settings.selected)\n\n//     /* For Android Material Design. */\n//     const androidSelectionBorder = tabbar.find('.androidSelectionBorder')\n//     function handleTabSelectionForAndroid(tab) {\n//       let width = tab.clientWidth\n//       let left = tab.offsetLeft\n//       androidSelectionBorder.css({width: width + 'px', left: left + 'px'})\n//     }\n//     if ($.theme === 'android') {\n//       $(function() {\n//         console.dir(selectedTabButton)\n//         handleTabSelectionForAndroid(selectedTabButton.array[0])\n\n//       })\n//     }\n\n//     this.getSelectedTab = () => {\n//       return __selectedTabbarButton\n//     }\n\n//     this.getSelectedScreen = () => {\n//       return __selectedTabbarScreen\n//     }\n\n//     /* Setup events on tabs. */\n//     $(() => {\n\n//       const tabbarButtons = tabbar.find('button')\n\n//       /* Tap on tab. */\n//       tabbar.on('tap', 'button', function () {\n//         const tab = this\n//         const routes = tab.dataset.chuiRoute.split('/')\n//         const fullRoute = $.ChuiRoutes.join('/')\n//         let navRoutesFull = tab.dataset.chuiRoute\n//         const navRoutes = navRoutesFull.split('/')\n//         const rr = $.ChuiRoutes\n\n//         /* This tab holds a navigation list. */\n//         var currBtn = document.querySelector('ui-tabbar button.selected')\n//         currBtn.classList.remove('selected')\n//         currBtn.dataset.chuiRoute = fullRoute\n//         this.classList.add('selected')\n//         if (navRoutes.length > 1) {\n//           navRoutesFull = tab.dataset.chuiRoute\n\n//           const navRoutes = navRoutesFull.split('/')\n\n//           const currScreen = document.querySelector('ui-screen.current')\n//           if (currScreen) {\n//             currScreen.classList.remove('current')\n//             currScreen.classList.add('next')\n//           }\n//           const prevScreen = document.querySelector('ui-screen.previous')\n//           if (prevScreen) {\n//             prevScreen.classList.remove('previous')\n//             prevScreen.classList.add('next')\n//           }\n\n//           navRoutes.forEach( function(route, idx) {\n//             const routing = route.split(':')\n//             let whichRoute = routing[0]\n//             let screen = document.getElementById(whichRoute)\n//             if (idx !== routes.length - 1) {\n//               screen.classList.remove('next')\n//               screen.classList.add('previous')\n//               screen.setAttribute('aria-hidden', true)\n//             } else {\n//               screen.classList.remove('next')\n//               screen.classList.add('current')\n//               screen.setAttribute('aria-hidden', false)\n//             }\n//           })\n\n//           /* Take care of routes. */\n//           $.ChuiRoutes = routes\n//           Router.dispatch(routes[routes.length - 1])\n\n//           /* Handle Android ripple effect. */\n//           if ($.theme === 'android') {\n//             handleTabSelectionForAndroid(tab)\n//           }\n\n//           /* This tab has a single screen. */\n//         } else {\n//           const screen = $('ui-screen').eq($(tab).index())\n\n//           /* Deal with previously selected tab and screen. */\n//           const currScreen =  document.querySelector('ui-screen.current')\n//           if (currScreen) {\n//             currScreen.classList.remove('current')\n//             currScreen.classList.add('next')\n//             currScreen.setAttribute('aria-hidden', true)\n//           }\n//           const prevScreen = document.querySelector('ui-screen.previous')\n\n//           if (prevScreen) {\n//             prevScreen.classList.remove('previous')\n//             prevScreen.classList.add('next')\n//             prevScreen.setAttribute('aria-hidden', true)\n//           }\n\n//           /* Set this tab to `selected`. */\n//           tab.classList.add('selected')\n//           if ($.theme === 'android') {\n//             handleTabSelectionForAndroid(tab)\n//           }\n\n//           routes.forEach(function (route, idx) {\n//             const routing = route.split(':')\n//             const whichRoute = routing[0]\n//             const wr = document.getElementById(whichRoute)\n//             if (idx !== routes.length - 1) {\n//               wr.classList.remove('next')\n//               wr.classList.add('previous')\n//               wr.setAttribute('aria-hidden', true)\n\n//             } else {\n//               if (wr) {\n//                 wr.classList.remove('next')\n//                 wr.classList.add('current')\n//                 wr.setAttribute('aria-hidden', false)\n//               } else {\n//               }\n//             }\n//           })\n\n//           /* Take care of routes. */\n//           $.ChuiRoutes = routes\n//           Router.dispatch(fullRoute)\n//         }\n//       })\n\n//       $('ui-screen').eq(settings.selected).array[0].classList.remove('next')\n//       $('ui-screen').eq(settings.selected).array[0].classList.add('current')\n//     })\n//   }\n\n//   return _tabBar\n// })()\n"]}