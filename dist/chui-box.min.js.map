{"version":3,"sources":["chui-box.js"],"names":["_defineProperty","obj","key","value","len","Object","i","enumerable","DOMStack","args","document","Array","isArray","arr","arr2","length","index","_classCallCheck","instance","Constructor","temp","array","forEach","descriptor","protoProps","staticProps","defineProperties","prototype","ret","this","data","ctx","_createClass","push","pop","objectType","unshift","callback","call","apply","shift","$","concat","arguments","_len","_key3","node","_len2","_key4","indexOf","el","collection","getData","_len3","_key5","toString","_len4","_key6","map","nodeType","type","arrayItem","stringify","match","arrayItemValue","_len5","_key7","reverse","_len7","_key9","undefined","tagRE","getTag","context","self","idRE","slice","elements","getNode","selector","getId","test","classRE","getElementsByTagName","find","split","querySelectorAll","chocolatechipjs","html","readyState","addEventListener","DefaultLanguageForErrors","languageForErrors","body","keys","result","prop","window","hasOwnProperty","hasDontEnumBug","dontEnums","_arguments","writable","propertyIsEnumerable","dontEnumsLength","TypeError","extend","wrapperMap","p","defineProperty","configurable","createElement","element","d","Date","now","charset","randomLetter","Math","floor","random","replace","c","innerHTML","version","HTMLString","noop","lastChild","legend","onerror","insertScript","firstScript","parentNode","insertBefore","col","done","option","area","tbody","param","setupLoad","exec","tag","__default","fn","tr","handleError","script","require","src","Error","loadScript","err","async","JSON","onload","resolve","milliseconds","each","newElement","delay","targetElement","setTimeout","newEl","item","idx","unique","isEmptyObject","number","escapeHTML","tagsToReplace","safe_tags_replace","str","targEl","off","isInteger","isFloat","encode",">","targetObj",")","alike","_len8","_key10","compare","value1","value2","join","mixin","key2","sourceObj","key1","compareArrays","compareNativeSubtypes","compareObjects","pages","itemsPerChunk","keys1","thing","keys2","flatten","_typeof","paginate","remaining","wait","previous","timeout","func","flat","throttle","options","last","getTime","leading","timestamp","callNow","immediate","trailing","later","clearTimeout","times","topic","before","memo","topics","on","handler","production","getTopic","send","payload","hasProp","removeTopic","nodes","children","is","arg","_this2","that","__nots","supressErrorMessages","querySelector","siblings","parent","previousElementSibling","_this3","__siblings","__parent","__sibs","nextElement","__has","previousElement","selectorCheck","__self","prevAll","splice","prev","next","nextElementSibling","pos","nextAll","$this","first","newPos","parents","property","closest","getComputedStyle","width","amount","style","css","parseInt","pixelRE","postFix","testForPixelSupport","content","height","camelize","styles","_this4","size","__before","after","_this5","__after","nextSibling","appendChild","prepend","append","cloneNode","string","whichClone","tempNode","nodeName","appendTo","offset","getBoundingClientRect","parentPos","empty","clone","remove","wrap","round","left","right","trim","top","position","className","classes","classList","innerText","getAttribute","removeAttribute","removeChild","addClass","name","add","attribute","hasClass","setAttribute","contains","hasAttribute","removeClass","toggleClass","attr","removeProp","disabled","__attr","removeAttr","display","cursor","disable","enable","EventErrorMessages","noCallbackForEventBinding","noEventToTrigger","errors","sort","__array","a","b","noEventOrCallback","en","es","EventStack","ChuiEventCache","bind","deleteFromEventStack","toDelete","eventStack","purge","deleteOrder","uuid","id","evt","removeEventListener","event","capturePhase","delegate","target","e","delegateElement","unbind","ancestor","undelegate","console","events","createEvent","trigger","error","eventCancel","evtObj","swipeTimeout","longTapDelay","eventStart","eventEnd","swipeDirection","eventMove","touch","navigator","userAgent","touchTimeout","singleTapDelay","gestureLength","parentIfText","x2","abs","y1","y2","x1","twoTouches","touches","cancelLongTap","longTapTimeout","tapTimeout","delta","pageY","originalEvent","pageX","isDoubleTap","method","CCDataCache","cancelAll","_method","removeData","then","_this6","_type","letter","capitalize","charAt","toUpperCase","deCamelize","toLowerCase","all","substring","newstr","v","_ret2","iz","iznt","hazntAttr","_","haz","valid","has","hazClass","hazntClass","setValidityStatus","validateAlphabetic","numbers","isNotEmpty","expression","checkValidity","validateUserName","username","letters","validateText","email","validateNumber","validatePhoneNumber","phone","convertLettersToNumbers","phoneNumber","validateAlphaNumeric","character","phonenumber","minimum","validateEmail","age","int","button","choice","validateUrl","url","validateAge","validateSelectList","validateCheckbox","checked","checkboxes","validateRadioButtons","validateSelectBox","psswd1","selectedIndex","validateSwitch","psswd2","radio","input","val","field","validateWithRegex","serialize","customValidators","serializeArray","regex","validateElement","__errors","convertToObject","convertObjectToJSON","encodeURIComponent","Form","arrName","namePart","__passed","arrays","currResult","__result","delimiter","inputs","j","nameParts","substr","arrIdx","min","filter","validatePassword","element2","validator","Number","num","cv","_el2","getErrors","toFixed","currency","symbol","separator","decimal","sym","zero","sep","formatNumber","sum","ampm","temp2","dec","noDataForViewRender","noElementToSetToTemplate","noTemplateToSetToView","noEventsToAdd","viewHasNoTemplate","time","noDataToSetForView","noModelToBindToView","sortNumbers","viewHasNoData","sortNumbersDescending","noElementForView","columnCount","rulesFromStyles","prefix","sharedSheet","block","unit","isPlainObject","rules","_sheet","createStyleSheet","sheet","set","addUnit","CreateStyleSheet","combineSelectors","pseudoRe","part","insertRules","unitlessProps","$0","stylesheets","rule","pairs","hyphenate","child","fontWeight","orphans","zoom","flexGrow","lineClamp","opacity","order","helpers","__data","noStyleObject","fillOpacity","viewElementHasNoTemplate","noTemplateForView","view","__re","defineHelper","__es6Template","__noTemplate","__id","__styles","bubble","__template","template","__element","parsedTemplate","__variable","variable","__events","startIndexFrom","__startIndexFrom","Template","Function","interpolate","extractTemplate","bindToModel","model","handleEvents","escapeNumber","__model","String","parseView","boundViews","__safeHTML","get","__rendered","resetIndex","ChuiStyle","render","isNaN","getTemplate","bindModel","getModel","isRendered","isEmpty","boolean","viewHasNoModel","safeHTML","isEscapingHTML","__origElement","mount","comp","config","cycle","queue","Component","f","View","triggered","_then","isThenable","schedule","obj_type","MakeDeferred","deferred_wrapper","msg","deferred","chain","promise","reject","resolver","executor","state","Deferred","success","failure","notify","rejecter","Promise","catch","isValidPromise","PromisePrototype","constructor","msgs","count","notifyIsolated","settings","callbackName","opts","JSONPCallbacks","jsonp","clear","json","Headers","values","normalizeName","bodyUsed","reader","getOwnPropertyNames","headers","formData","_bodyInit","fileReaderReady","support","_bodyBlob","blob","readBlobAsArrayBuffer","readAsArrayBuffer","readBlobAsText","readAsText","Body","form","_initBody","text","rejected","isPrototypeOf","FormData","arrayBuffer","ArrayBuffer","_bodyText","upcased","methods","consumed","_bodyFormData","credentials","Blob","normalizeMethod","mode","Request","parse","getAllResponseHeaders","header","decode","head","bytes","bodyInit","xhr","status","statusText","Response","referrer","redirectStatuses","RangeError","request","init","redirect","ok","XMLHttpRequest","generateCallbackName","response","list","fetch","getAll","normalizeValue","thisArg","responseURL","getResponseHeader","open","predicate","responseText","withCredentials","responseType","polyfill","found","pluck","ModelErrorMessages","noPropForPropAt","noValForPropEquals","noPropForPropEquals","noPosForSetPropAt","noValueForSetPropAt","difference","noPropForSetPropAt","diff","noPropertyToSet","noPropertyToDelete","noObjectToMerge","incorrectDataForMerging","noObjForMixin","noCallbackForModelOn","noEventForModelOn","noEventForModelTrigger","noPosForEventDeletion","noValueForPropEquals","_en","stopped","noPosForPropAt","_es","_Model","Model","dataStore","noPropertyOrDataError","updateBoundViews","noDataToReplaceInModel","create","noDataToPushToModel","noDataForShiftToModel","noEndForModelSlice","start","noStartModelForSlice","end","noPosToInserInModel","noPropForPlucking","noElementForIndexOf","noCallbackFoFindIndex","noCallbackForForEach","noPropsForSortBy","sortByProperty","sortOrder","_len10","_key12","numberOfProperties","compareFunction","_len11","props","_key13","orderBy","color","spinner","isNativeAndroid","isiPad","isiPod","isAndroid","isStandalone","androidBusy","standalone","isDesktop","androidActivityIndicator","userAgentHTC","theme","Block","iOSBusy","chuiBackButtonSVG","decorateBackButton","Unblock","parentWidth","buttonText","tmpLeft","tmpTop","parentHeight","editLabel","doneLabel","deleteLabel","clientHeight","clientWidth","movable","__view","EditList","editButton","dispelDeletable","deletionIndicator","innerHeight","pageYOffset","innerWidth","moveUpIndicator","moveDownIndicator","dir","deletable","__editMade","setTemplate","AdjustNavbarLayout","deleteButton","screen","makeEditable","__newarray","hide","show","enableDeletable","modelProp","offsetHeight","prevClone","itemClone","_this","-webkit-transform","transform","direction","nav","nextClone","listItem","__selection","selections","sel","dataObj","getView","selected","oppositeSide","rtl","visibleSibling","h1","calculateLongest","widthB","widthA","whichSide","handleOneSibling","sib","sibling","hidden","sibwidth","makeScreenCurrent","makeScreenPrevious","GoToScreen","ChuiRoutes","destination","isNavigating","headerWidth","currentScreen","destinationScreen","makeScreenNext","GoBackToScreen","route","Router","dispatch","getScreen","screens","getCurrent","scrollTop","handleNavigationEvent","Paging","articles","currentSection","pagerButton","currentArticle","pageBack","pageForward","pager","title","popover","popoverID","eq","__calcPopPos","calcLeft","popoverOffset","calcTop","ClosePopover","Popover","triggerID","onresize","AlignPopover","message","popup","ClosePopup","ShowPopup","cancelButton","continueButton","_$$css","newPoint","newPlace","isChrome","Range","getFullRoute","addRoute","getNext","getPrevious","Segmented","segmented","labels","__segmented","androidSelectionBorder","getSelection","androidSelectionIndicator","SelectList","_left","Sheet","slideFrom","background","ShowSheet","slideDown","slideoutID","buttonID","slideout","slideOutBtn","menuItems","screenToShow","populate","slideOut","slideOutButton","decreaseStepperValue","disabledIncrease","stepper","increaseSymbol","disabledDecrease","decreaseButton","label","defaultValue","currentValue","newValue","__checked","max","onCallback","swipeOff","checkState","documentElement","swipeOn","__switch","offCallback","checkbox","getValue","setToCurrent","__tabbarScreens","selectedScreen","setToNext","TabBar","tabbarTmpl","routes","tab","whichRoute","selectedTabButton","screenPrefix","handleTabSelectionForAndroid","tabbarButtons","showIcons","tabbar","__selectedTabbarScreen","icon","navRoutes","routing","icons","__tabbarButtons","__selectedTabbarButton","getSelectedTab","navRoutesFull","fullRoute","setSelectedTab","_navRoutes","ChuiColor","colorRegex","re","channels","processor","bits","getSelectedScreen","getBrightness","lightenColor","process","r","backgroundColor","navBkColor","g","x","rippleColor","percent","amt","B","R","darkenColor","brightness","calculateBrightness","G","indexedDB","txn","w","offsetWidth","h","y","DETECT_BLOB_SUPPORT_STORE","_binStringToArrayBuffer","_checkBlobSupportWithoutCaching","_navBkColor","toHex","deferredOperation","objectStore","dbContext","deferredOperations","preventDefault","supportsBlobs","dataset","_deferReadiness","background-color","dbArgs","dbReady","ripple","rippleWave","db","callWhenReady","chuiBoxInstance","libraryMethod","ChuiBox","driver","__driver","complianceError","ready","namingError","__args","getDriverPromise","isLibraryDriver","driverObject","customDriverMethods","supportPromise","DriverType","errorCallback","__support","driverName","serializerPromise","bin","upgradeNeeded","_getOriginalConnection","_getConnection","buf","_isUpgradeNeeded","dbInfo","createObjectStore","oldVersion","put","isNewStore","isDowngrade","isUpgrade","oncomplete","matchedChrome","matchedEdge","incVersion","openreq","idb","_advanceReadiness","__local_forage_encoded_blob","defaultVersion","encodedBlob","arrayBuff","dbContexts","executeTwoCallbacks","_initStorage","FileReader","close","base64","atob","warn","newVersion","storeName","onsuccess","_getUpgradedConnection","objectStoreNames","forages","forage","_initReady","_fullyReady","_encodeBlob","_dbInfo","initPromises","store","onloadend","req","createBlob","openCursor","_decodeBlob","_isEncodedBlob","iterator","transaction","_defaultConfig","executeCallback","_forage","k","iterationNumber","continue","blobSupport","advanced","n","delete","onabort","asyncStorage","__initStorage","_driver","dbInfoPromise","t","advance","globalObject","setDriver","LOCALSTORAGE","__dbInfo","chuiBoxSerializer","serializer","executeSql","originalValue","lib","sqlError","code","deserialize","rows","results","QUOTA_ERR","webSQLStorage","boxName","localStorage","keyPrefix","keyPrefixLength","_key2","openDatabase","__defaultConfig","_key","localStorageWrapper","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_INT8ARRAY","TYPE_UINT32ARRAY","parts","properties","builder","valueString","buffer","marker","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_FLOAT64ARRAY","__createBlob","BlobBuilder","fileReader","TYPE_ARRAYBUFFER","serializedString","blobType","TYPE_BLOB","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","Uint8ClampedArray","bufferLength","encoded1","encoded2","base64String","stringToBuffer","bufferToString","encoded3","TYPE_FLOAT32ARRAY","DefaultDriverOrder","LibraryMethods","description","encoded4","Uint8Array","driverSupport","INDEXEDDB","TYPE_SERIALIZED_MARKER_LENGTH","matcher","Int8Array","CustomDrivers","TYPE_INT16ARRAY","Int16Array","Uint16Array","Int32Array","Uint32Array","WEBSQL","__config","DefaultConfig","__driverSet","__initDriver","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","__ready","IDBKeyRange","__wrapLibraryMethodsWithReady","getDriver","supportedDrivers","__getSupportedDrivers","currentDriverIndex","setDriverToConfig","customDriverMethod","supportResult","drivers","initDriver","__extend","driverPromiseLoop","oldDriverSetDone","chuiBox"],"mappings":"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","file":"chui-box.min.js","sourcesContent":["\n/**\n  * DOMStack, an abstraction of the native NodeList, allowing manipulation of DOM elements without having to extend native elements.\n  * @param {Element[] | Document | Element } args An array of elements, the document, or a node.\n  * @return {DOMStack} DOMStack\n  */\nclass DOMStack {\n  constructor (args) {\n    this.array = [];\n    this.length = 0;\n    this.objectType = 'domstack';\n    if (Array.isArray(args)) {\n      let i = -1;\n      const len = args.length;\n      while (++i < len) {\n        this.array[i] = args[i];\n      }\n    } else if (args) {\n      if (args === document) {\n        this.array[0] = document;\n        this[0] = document;\n        this.length = 1;\n      } else {\n        const array = Array.prototype.slice.apply(arguments);\n        array.forEach(function(ctx, idx) {\n          this.array[idx] = ctx;\n        });\n      }\n    }\n  }\n\n  eq(index) {\n    let ret = new DOMStack();\n    if (!this.array.length) return ret;\n    let temp;\n    if (index < 0) {\n      temp = this.array[this.array.length + index];\n      ret.push(temp);\n    } else {\n      if (index >= this.array.length) return new DOMStack();\n      temp = this.array[index];\n      ret.push(temp);\n    }\n    ret[0] = ret.array[0];\n    ret.length = ret.array.length;\n    return ret;\n  }\n\n  push(data) {\n    if (data && data.objectType === 'domstack') {\n      this.array = this.array.concat(data.array)\n    } else {\n      this.array.push(data);\n    }\n    this.length = this.array.length;\n    this[0] = this.array[0];\n  }\n\n  pop() {\n    this.length = this.array.length - 1;\n    let ret = this.array.pop();\n    return $(ret);\n  }\n\n  unshift(data) {\n    if (data && data.objectType === 'domstack') {\n      this.array.unshift(data.array[0]);\n    } else {\n      this.array.unshift(data);\n    }\n    this[0] = this.array[0];\n    this.length = this.array.length;\n  }\n\n  shift() {\n    this.length = this.array.length - 1;\n    let ret = this.array.shift();\n    return $(ret);\n  }\n\n  size() {\n    return this.array.length;\n  }\n\n  forEach(callback) {\n    let value;\n    let i = 0;\n    const len = this.array.length;\n    for (; i < len; i++) {\n      value = callback.call(this.array[i], this.array[i], i);\n      if (value === false) {\n        break;\n      }\n    }\n  }\n\n  each(callback) {\n    let value;\n    let i = 0;\n    const len = this.array.length;\n    for (; i < len; i++) {\n      value = callback.call(this.array[i], i, this.array[i]);\n      if (value === false) {\n        break;\n      }\n    }\n  }\n\n  slice(...args) {\n    let ret = new DOMStack();\n    ret.concat(this.array.slice.apply(this.array, args));\n    return $(ret);\n  }\n\n  splice(...args) {\n    var ret = new DOMStack();\n    ret.concat(this.array.splice.apply(this.array, args));\n    this[0] = this.array[0];\n    this.length = this.array.length;\n    return $(ret);\n  }\n\n  filter(...args) {\n    let ret = new DOMStack();\n\n    ret.concat(this.array.filter.apply(this.array, args));\n    ret[0] = ret.array[0];\n    return ret;\n  }\n\n  map(...args) {\n    let ret = new DOMStack();\n    ret.concat(this.array.map.apply(this.array, args));\n    ret[0] = ret.array[0];\n    return ret;\n  }\n\n  indexOf(node) {\n    // return this.array.indexOf.apply(this.array, args);\n    if (!node) return -1;\n    if (node.nodeType && node.nodeType === 1) {\n      return this.array.indexOf(node);\n    } else if (node && node.objectType === 'domstack') {\n      return this.array.indexOf(node[0]);\n    } else if (node && Array.isArray(node)) {\n      return this.array.indexOf(node[0]);\n    } else if (node && $.type(node) === 'string') {\n      const el = this[0].parentNode.querySelector(node);\n      return this.array.indexOf(el);\n    }\n  }\n\n  concat(collection) {\n    let temp;\n    if (Array.isArray(collection)) {\n      temp = collection;\n    } else if (collection && collection.objectType && collection.objectType === 'domstack') {\n      temp = collection.getData();\n    } else if (collection.constructor.toString().match(/HTMLBodyElementConstructor/)) {\n      temp = [collection];\n    }\n    this.array.push.apply(this.array, temp);\n    this[0] = this.array[0];\n    this.length = this.array.length;\n  }\n\n  reverse(...args) {\n    this.array.reverse.apply(this.array, args);\n    this[0] = this.array[0];\n  }\n\n  every(...args) {\n    return this.array.every.apply(this.array, args);\n  }\n\n  some(...args) {\n    return this.array.some.apply(this.array, args);\n  }\n\n  unique() {\n    const len = this.array.length;\n    let ret = [];\n    let obj = {};\n    for (let i = 0; i < len; i++) {\n      const arrayItem = JSON.stringify(this.array[i]);\n      const arrayItemValue = this.array[i];\n      if (obj[arrayItem] === undefined) {\n        ret.push(arrayItemValue);\n        obj[arrayItem] = 1;\n      } else {\n        obj[arrayItem]++;\n      }\n    }\n    this.array = ret;\n    this[0] = this.array[0];\n    this.length = this.array.length;\n  }\n\n  get() {\n    return this.array;\n  }\n  /**\n   * Deprecated. Use `get()`.\n   */\n  getData() {\n    return this.array;\n  }\n\n  purge() {\n    this.array.length = 0;\n    this.length = 0;\n  }\n}\n/**\n * ChocolateChipJS Core. This function exports the ChocolateChipJS singleton.\n */\n(function() {\n\n  /**\n   * ChocolateChipJS singleton. This function can query the DOM with the provided parameters, or execute a callback when the DOM is ready. This is also the base for ChocolateChipJS methods for DOM manipulation.\n   */\n  function chocolatechipjs(selector, context) {\n    const self = this;\n    const idRE = /^#([\\w-]*)$/;\n    const classRE = /^\\.([\\w-])$/;\n    const tagRE = /^[\\w-]+$/;\n    const readyRE = /complete|loaded|interactive/;\n    let temp;\n\n    const slice = elements => {\n      temp = new DOMStack([].slice.apply(elements));\n      temp[0] = temp.array[0];\n      return temp;\n    };\n\n    const getId = selector => {\n      const el = document.getElementById(selector.split('#')[1]);\n      if (el) {\n        temp = new DOMStack([el]);\n        temp[0] = new DOMStack([el]).array[0];\n        temp.length = 1;\n        return temp;\n      } else {\n        return new DOMStack();\n      }\n    };\n\n    const getTag = (selector, context) => {\n      if (context) {\n        temp = slice(context.getElementsByTagName(selector));\n        temp[0] = temp.array[0];\n        temp.length = temp.length;\n        return temp;\n      } else {\n        temp = slice(document.getElementsByTagName(selector));\n        temp[0] = temp.array[0];\n        temp.length = temp.array.length;\n        return temp;\n      }\n    };\n\n    const getClass = (selector, context) => {\n      if (context) {\n        temp = slice(context.getElementsByClassName(selector.split('.')[1]));\n        temp[0] = temp.array[0];\n        temp.length = temp.length;\n        return temp;\n      } else {\n        temp = slice(document.getElementsByClassName(selector.split('.')[1]));\n        temp[0] = temp.array[0];\n        temp.length = temp.array.length;\n        return temp;\n      }\n    };\n\n    const getNode = (selector, context) => {\n      if (typeof selector === 'string')\n        selector = selector.trim();\n      if (typeof selector === 'string' && idRE.test(selector)) {\n        return getId(selector);\n      }\n\n      if (selector && (selector instanceof Array) && selector.length)\n        return selector;\n      if (!context && typeof selector === 'string') {\n        if (/<\\/?[^>]+>/.test(selector)) {\n          return self.html(selector);\n        }\n\n        if (tagRE.test(selector)) {\n          return getTag(selector);\n\n        } else if (classRE.test(selector)) {\n          return getClass(selector);\n\n        } else {\n          temp = slice(document.querySelectorAll(selector));\n          temp[0] = temp.array[0];\n          temp.length = temp.array.length;\n          return temp;\n        }\n\n      } else {\n        if (context) {\n          temp = slice($(context).find(selector));\n          temp[0] = temp.array[0];\n          temp.length = temp.array.length;\n          return temp;\n\n        } else {\n          temp = slice(document.querySelectorAll(selector));\n          temp[0] = temp.array[0];\n          temp.length = temp.array.length;\n          return temp;\n        }\n      }\n    };\n\n    if (selector && selector.objectType && selector.objectType === 'domstack') {\n      return selector;\n    }\n\n    if (selector === document) {\n      return new DOMStack(document);\n    }\n\n    if (selector === null) {\n      return new DOMStack();\n    }\n\n    if (!!context) {\n      if (typeof context === 'string') {\n        temp = slice(document.querySelectorAll(context + ' ' + selector));\n        temp[0] = temp.array[0];\n        temp.length = temp.array.length;\n        return temp;\n      } else if (context.nodeType === 1) {\n        return getNode(selector, context);\n      }\n\n    } else if (typeof selector === 'function') {\n      if (readyRE.test(document.readyState) && document.body) {\n        selector.call(selector);\n      } else {\n        document.addEventListener(\"DOMContentLoaded\", function() {\n          return selector.call(selector);\n        });\n      }\n\n    } else if (selector && selector.nodeType === 1) {\n      temp = new DOMStack();\n      temp[0] = selector;\n      temp.length = temp.array.length;\n      temp.push(selector);\n      return temp;\n\n    } else if (typeof selector === 'string') {\n      if (selector === '') return new DOMStack();\n      if (/<\\/?[^>]+>/.test(selector)) {\n        return chocolatechipjs.html(selector);\n      } else {\n        try {\n          return getNode(selector) ? getNode(selector) : new DOMStack();\n        } catch (err) {\n          return new DOMStack();\n        }\n      }\n\n    } else if (Array.isArray(selector)) {\n      return new DOMStack(selector);\n      \n    } else if (selector === window) {\n      temp = new DOMStack();\n      temp[0] = window;\n      temp.length = temp.array.length;\n      return temp;\n\n    } else {\n      return new DOMStack();\n    }\n\n    return new DOMStack();\n  }\n  \n  if (window.DefaultLanguageForErrors) {\n    chocolatechipjs.languageForErrors = window.DefaultLanguageForErrors\n  } else {\n    chocolatechipjs.languageForErrors = 'en'\n  }\n\n  let $ = chocolatechipjs;\n\n  /**\n   * ChocolateChip-UI extend method.\n   */\n\n  /**\n   * Polyfill for Object.keys.\n   * Needed for Android older than 4.4.\n   */\n  if (!Object.keys) {\n    Object.keys = (function() {\n      'use strict';\n      const hasOwnProperty = Object.prototype.hasOwnProperty,\n          hasDontEnumBug = !({ toString: null }).propertyIsEnumerable('toString'),\n          dontEnums = [\n            'toString',\n            'toLocaleString',\n            'valueOf',\n            'hasOwnProperty',\n            'isPrototypeOf',\n            'propertyIsEnumerable',\n            'constructor'\n          ],\n          dontEnumsLength = dontEnums.length;\n\n      return function(obj) {\n        if (typeof obj !== 'object' && (typeof obj !== 'function' || obj === null)) {\n          throw new TypeError('Object.keys called on non-object');\n        }\n\n        let result = [];\n        let prop;\n        let i;\n\n        for (prop in obj) {\n          if (hasOwnProperty.call(obj, prop)) {\n            result.push(prop);\n          }\n        }\n\n        if (hasDontEnumBug) {\n          for (i = 0; i < dontEnumsLength; i++) {\n            if (hasOwnProperty.call(obj, dontEnums[i])) {\n              result.push(dontEnums[i]);\n            }\n          }\n        }\n        return result;\n      };\n    }());\n  }\n\n  $.extend = (obj, prop) => {\n    if (!prop) {\n      prop = obj;\n      obj = chocolatechipjs;\n    }\n    Object.keys(prop).forEach(p => {\n      if (prop.hasOwnProperty(p)) {\n        Object.defineProperty(obj, p, {\n          value: prop[p],\n          writable: true,\n          enumerable: false,\n          configurable: true\n        });\n      }\n    });\n  }\n\n\n  /**\n   * ChocolateChip-UI collection extend method.\n   */\n  $.fn = {\n    extend: object => $.extend(DOMStack.prototype, object)\n  };\n\n  /**\n   * ChocolateChip-UI utility methods.\n   */\n  $.extend({\n    lib: \"ChocolateChipJS\",\n\n    version: 'VERSION_NUMBER',\n\n    noop: () => {},\n\n    uuid: () => {\n      let d = Date.now();\n      d += performance.now();\n      const charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\".split('');\n      const randomLetter = charset[Math.floor(Math.random() * charset.length)];\n      return randomLetter + 'xxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n        let r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\n      });\n    },\n\n    html: HTMLString => {\n      let ret = new DOMStack();\n      let temp;\n\n      const wrapperMap = {\n        option: [1, \"<select multiple='multiple'>\", \"</select>\"],\n        legend: [1, \"<fieldset>\", \"</fieldset>\"],\n        area: [1, \"<map>\", \"</map>\"],\n        param: [1, \"<object>\", \"</object>\"],\n        thead: [1, \"<table>\", \"</table>\"],\n        tr: [2, \"<table><tbody>\", \"</tbody></table>\"],\n        col: [2, \"<table><tbody></tbody><colgroup>\", \"</colgroup></table>\"],\n        td: [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n        __default: [1, \"<div>\", \"</div>\"]\n      };\n\n      wrapperMap.optgroup = wrapperMap.option;\n      wrapperMap.tbody = wrapperMap.tfoot = wrapperMap.colgroup = wrapperMap.caption = wrapperMap.thead;\n      wrapperMap.th = wrapperMap.td;\n\n      let element = document.createElement('div');\n      const match = /<\\s*\\w.*?>/g.exec(HTMLString);\n\n      if (match !== null) {\n        const tag = match[0].replace(/</g, '').replace(/>/g, '');\n        const map = wrapperMap[tag] || wrapperMap.__default;\n        HTMLString = map[1] + HTMLString + map[2];\n\n        element.innerHTML = HTMLString;\n        element = element.lastChild;\n\n        temp = Array.prototype.slice.apply(element.childNodes);\n        temp.forEach(ctx => {\n          if (ctx.nodeType === 1) {\n            ret.push(ctx);\n          } else if (ctx.nodeType === 3 && ctx.nodeValue.trim().length !== 0) {\n            ret.push(ctx);\n          }\n        });\n\n      } else {\n        element.innerHTML = HTMLString;\n        element = element.lastChild;\n        ret.push(element);\n      }\n\n      return ret;\n    },\n\n    /**\n     * Insert a script tag into the document and\n     * fire a callback when it is loaded: \n     */\n    require: (src, callback, ctx) => {\n      let onerror = \"onerror\";\n      const insertScript = function(script) {\n        let firstScript = document.getElementsByTagName(\"script\")[0];\n        firstScript.parentNode.insertBefore(script, firstScript);\n      };\n      let script = document.createElement(\"script\");\n      let done = false;\n      let err;\n      let loadScript;\n      const handleError = function() {\n        err = new Error(src || \"EMPTY\");\n        loadScript();\n      };\n      const setupLoad = function(fn) {\n        return function() {\n          /**\n           * Only call once. \n           */\n          if (done) {\n            return;\n          }\n          done = true;\n          fn();\n          if (callback) {\n            callback.call(ctx, err);\n          }\n        };\n      };\n\n      loadScript = setupLoad(function() {\n        script.onload = script[onerror] = null;\n      });\n\n      script[onerror] = handleError;\n      script.onload = loadScript;\n      script.async = true;\n      script.charset = \"utf-8\";\n      script.src = src;\n      insertScript(script);\n    },\n\n    delay: milliseconds => {\n      return new Promise(function (resolve, reject) {\n        setTimeout(resolve, milliseconds);\n      });\n    },\n\n    each: (obj, callback) => {\n      let value;\n      let key;\n      let i = 0;\n      let length;\n\n      if (Array.isArray(obj)) {\n        length = obj.length;\n        for (; i < length; i++) {\n          value = callback.call(obj[i], i, obj[i]);\n          if (value === false) {\n            break;\n          }\n        }\n        return obj;\n      } else if (obj.objectType && obj.objectType === 'domstack') {\n        obj.forEach((item, idx) => callback.call(item, idx, item));\n        return obj;\n      } else if ($.type(obj) === 'object' && Object.keys(obj).length) {\n        for (key in obj) {\n          if (callback.call(obj[key], key, obj[key]) === false) return obj;\n        }\n      }\n    },\n\n    /**\n     * Eliminate duplicates from array: \n     */\n    unique: array => {\n      if (!array || !Array.isArray(array)) return;\n      const len = array.length;\n      let obj = {};\n      let ret = [];\n      for (let i = 0; i < len; i++) {\n        const arrayItem = JSON.stringify(array[i]);\n        const arrayItemValue = array[i];\n        if (obj[arrayItem] === undefined) {\n          ret.push(arrayItemValue);\n          obj[arrayItem] = 1;\n        } else {\n          obj[arrayItem]++;\n        }\n      }\n      return ret;\n    },\n\n    /** \n     * Replace target element with new element:\n     */\n    replace: (newElement, targetElement) => {\n      if (!newElement || !targetElement) return;\n      let newEl;\n      let targEl;\n      if (typeof newElement === 'string') {\n        newEl = $(newElement)[0];\n      } else if (newElement.objectType && newElement.objectType === 'domstack') {\n        newEl = newElement[0];\n      } else if (newElement.nodeType === 1) {\n        newEl = newElement;\n      }\n      if (typeof targetElement === 'string') {\n        targEl = $(targetElement)[0];\n      } else if (targetElement.objectType && targetElement.objectType === 'domstack') {\n        targEl = targetElement[0];\n      } else if (targetElement.nodeType === 1) {\n        targEl = targetElement;\n      }\n      /**\n       * Remove target's bound events:\n       */\n      $(targEl).off();\n      targEl.parentNode.replaceChild(newEl, targEl);\n    },\n\n    /**\n     * Extra boolean types:\n     */\n    isEmptyObject: obj =>  Object.keys(obj).length === 0,\n\n    isInteger: number => (typeof number === 'number' && number % 1 === 0),\n\n    isFloat: number => (typeof number === 'number' && number % 1 !== 0),\n\n    encode: value => encodeURIComponent(value),\n\n    /**\n     * Escape HTML for view templates:\n     */\n    escapeHTML: data => {\n      const tagsToReplace = {\n        '&': '&amp;',\n        '<': '&lt;',\n        '>': '&gt;',\n        '(': '%28',\n        ')': '%29'\n      };\n      let str = JSON.stringify(data);\n\n      const replaceTag = (tag) => tagsToReplace[tag] || tag;\n\n      const safe_tags_replace = (str) => str.replace(/[&<>\\(\\)]/g, replaceTag);\n\n      str = safe_tags_replace(str);\n      return JSON.parse(str);\n    },\n\n    /** \n     * Concat arguments into a string:\n     */\n    concat: (...args) => {\n      if (Array.isArray(args)) {\n        if (Array.isArray(args[0])) {\n          return args[0].join('');\n        } else {\n          return args.join('');\n        }\n      } else {\n        return Array.prototype.slice(args).join('');\n      }\n    },\n\n    /**\n     * Mixin one object into another:\n     */\n    mixin: (sourceObj, targetObj) => {\n      for (let key in sourceObj) {\n        /* Do not replace property if it exists: */\n        if (!(key in targetObj)) {\n            targetObj[key] = sourceObj[key];\n        }\n      }\n      return targetObj;\n    },\n\n    /**\n     * Compare one value with another, one object with another, one array with another, etc.\n     */\n    compare: (value1, value2) => {\n\n      function compareNativeSubtypes(value1, value2) {\n        /**\n         * e.g. Function, RegExp, Date \n         */\n        return value1.toString() === value2.toString();\n      }\n\n      function compareArrays(value1, value2) {\n        const len = value1.length;\n        if (len != value2.length) {\n          return false;\n        }\n        let alike = true;\n        for (let i = 0; i < len; i++) {\n          if (!$.compare(value1[i], value2[i])) {\n            alike = false;\n            break;\n          }\n        }\n        return alike;\n      }\n\n      function compareObjects(value1, value2) {\n        const keys1 = Object.keys(value1).sort();\n        const keys2 = Object.keys(value2).sort();\n        const len = keys1.length;\n        if (len != keys2.length) {\n          return false;\n        }\n        for (let i = 0; i < len; i++) {\n          let key1 = keys1[i];\n          let key2 = keys2[i];\n          if (!((key1 == key2) && ($.compare(value1[key1], value2[key2])))) {\n            return false;\n          }\n        }\n        return true;\n      }\n      if (value1 === value2) {\n        return true;\n      }\n      if (typeof value1 != typeof value2) {\n        return false;\n      }\n      if (value1 !== Object(value1)) {\n        /**\n         * Non equal primitives, so stop:\n         */\n        return false;\n      }\n      if (!value1) {\n        return false;\n      }\n      if (Array.isArray(value1)) {\n        return compareArrays(value1, value2);\n      }\n      if (({}).toString.call(value1) == '[object Object]') {\n        return compareObjects(value1, value2);\n      } else {\n        return compareNativeSubtypes(value1, value2);\n      }\n    },\n\n    /** \n     * Chunk an array into pieces based on itemsPerChunk.\n     * You can use this to paginate an array of data.\n     */\n    paginate: (data, itemsPerChunk) => {\n      let ret = [];\n      let pages = Math.floor(data.length / itemsPerChunk);\n      if (data.length % pages) pages++;\n      let temp = 0;\n      for (let i = 0; i < pages; i++) {\n        if (temp === data.length) break;\n        const thing = data.slice(temp, itemsPerChunk + temp);\n        ret.push(thing);\n        temp += itemsPerChunk;\n      }\n      return ret;\n    },\n\n    /**\n     * Recursively flatten an array with nested arrays.\n     */\n    flatten: array => {\n      const flat = Array.prototype.concat(array);\n      for (let i = 0; i < flat.length; i++) {  \n        if (Array.isArray(flat[i])) {\n          flat.splice(i, 1, ...flat[i--]);  \n        }\n      }\n      return flat;\n    },\n\n    /**\n     * Fires an event once during provided wait period. Options are: {leading: true/false, trailing: true/false}.\n     * By default leading is true, meaning that the first event input will fire. Setting leading to false will disable this.\n     * By default trailing is true. Set this to false to disable it.\n     */\n    throttle: (func, wait, options) => {\n      let context, args, result;\n      let timeout = null;\n      let previous = 0;\n      if (!options) options = {};\n      const later = function() {\n        previous = options.leading === false ? 0 : new Date().getTime();\n        timeout = null;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      };\n      return function() {\n        const now = new Date().getTime();\n        if (!previous && options.leading === false) previous = now;\n        let remaining = wait - (now - previous);\n        context = this;\n        args = arguments;\n        if (remaining <= 0 || remaining > wait) {\n          if (timeout) {\n            clearTimeout(timeout);\n            timeout = null;\n          }\n          previous = now;\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        } else if (!timeout && options.trailing !== false) {\n          timeout = setTimeout(later, remaining);\n        }\n        return result;\n      }\n    },\n\n    /**\n     * Fires and event once after the designated wait time, regardless of how many other events occurred.\n     * In the case of an input, this will start with the first keypress. After the last keypress and the wait time, the event will fire.\n     * You can make the event fire after the time by passing a third optional truthy argument.\n     */\n    debounce: (func, wait, immediate) => {\n      let timeout, args, context, timestamp, result;\n\n      const later = function() {\n        const last = new Date().getTime() - timestamp;\n\n        if (last < wait && last >= 0) {\n          timeout = setTimeout(later, wait - last);\n        } else {\n          timeout = null;\n          if (!immediate) {\n            result = func.apply(context, args);\n            if (!timeout) context = args = null;\n          }\n        }\n      };\n\n      return function() {\n        context = this;\n        args = arguments;\n        timestamp = new Date().getTime();\n        const callNow = immediate && !timeout;\n        if (!timeout) timeout = setTimeout(later, wait);\n        if (callNow) {\n          result = func.apply(context, args);\n          context = args = null;\n        }\n\n        return result;\n      };\n    },\n\n    /**\n     * Execute a function only once.\n     */\n    once: func => {\n      let times = 2;\n      let memo;\n      return function() {\n        if (--times > 0) {\n          if ($.type(func) === 'function') {\n            memo = func.apply(this, arguments);\n          }\n        }\n        if (times <= 1) func = null;\n        return memo;\n      };\n    },\n\n    /**\n     * Execute a function only upto x times.\n     * This takes two arguments: the times upto when execution can happen and the callback to execute.\n     */\n\n    before: (times, func) => {\n      let memo;\n      return function() {\n        if (--times > 0) {\n          if ($.type(func) === 'function') {\n            memo = func.apply(this, arguments);\n          }\n        }\n        if (times <= 1) func = null;\n        return memo;\n      }\n    },\n\n    /**\n     * Execute a function only after x times.\n     * This takes two arguments: the times or attempts before execution and a callback to execute.\n     */\n\n    after: (times, func) => {\n      return function() {\n        if (--times < 1) {\n          return func.apply(this, arguments);\n        }\n      }\n    }\n    \n  });\n\n  \n  \n  /** \n   * Pubsub methods:\n   */\n  const topics = {};\n  const hasProp = topics.hasOwnProperty;\n  $.extend({\n    /**\n     * Set up subscriber: \n     */\n    on: (topic, handler) => {\n      /**\n       * Create the topic's object: \n       */\n      if (!hasProp.call(topics, topic)) topics[topic] = [];\n\n      /**\n       * Add subscriber: \n       */\n      let index = topics[topic].push(handler) -1;\n\n      /**\n       * Return method to delete subscriber: \n       */\n      return {\n        off: () => delete topics[topic][index],\n\n        /**\n         * Return method to run this subscriber - `mySubscriber.run('foo', myDataHere)` \n         */\n        run: (data) => {\n          if (topics[topic]) topics[topic][index](data)\n        },\n\n        getTopic: () => topic\n      };\n    },\n\n    /**\n     * Send event and data to subscribers: \n     */\n    send: (topic, payload) => {\n      if (!hasProp.call(topics, topic)) return;\n\n      /**\n       * Loop through topics and execute: \n       */\n      topics[topic].forEach(item => {\n        item(payload != undefined ? payload : {});\n      });\n    },\n\n    /**\n     * Get all subscribed topics: \n     */\n    getTopics: () => topics,\n\n    /**\n     * Remove a topic and any registered subscribers: \n     */\n    removeTopic: topic => delete topics[topic],\n\n    production: false,\n\n    /**\n     * Suppress ChocolateChip-UI's error messages:\n     */\n    supressErrorMessages: false\n    \n  })\n\n  /**\n   * ChocolateChip-UI DOM methods.\n   */\n  $.fn.extend({\n\n    find(selector, context) {\n      let ret = new DOMStack();\n      if (!this.array.length)\n        return ret;\n      if (context) {\n        $(context).forEach(() => {\n          Array.prototype.slice.apply(context.querySelectorAll(selector)).forEach(node=> {\n            return ret.push(node);\n          });\n        });\n      } else {\n        this.forEach(ctx => {\n          if (ctx && ctx.children && ctx.children.length) {\n            Array.prototype.slice.apply(ctx.querySelectorAll(selector)).forEach(node => {\n              return ret.push(node);\n            });\n          }\n        });\n      }\n      return ret;\n    },\n\n    is(arg) {\n      let ret = false;\n      if (!this.array.length || !arg) return;\n      if (!this.array.length) return;\n      const that = this;\n      const __is = (node, arg) => {\n        if (typeof arg === 'string') {\n          let nodes;\n          if (node.parentNode) nodes = node.parentNode.querySelectorAll(arg);\n          let elements;\n          if (nodes && nodes.length) {\n            elements = Array.prototype.slice.apply(node.parentNode.querySelectorAll(arg));\n          }\n          if (elements && elements.length) {\n            if (elements.indexOf(node) >= 0) {\n              ret = true;\n            }\n          }\n        } else if (typeof arg === 'function') {\n          if (arg.call(that)) {\n            ret = true;\n          }\n        } else if (arg && arg.objectType && arg.objectType === 'domstack') {\n          if (node === arg[0]) {\n            ret = true;\n          }\n        } else if (arg && arg.length) {\n          if (this.slice.apply(arg).indexOf(node) !== -1) {\n            ret = true;\n          }\n        } else if (arg.nodeType === 1) {\n          if (node === arg) {\n            ret = true;\n          }\n        } else {\n          return;\n        }\n        return ret;\n      };\n      this.forEach(item => {\n        if (__is(item, arg)) {\n          ret = true;\n        }\n      });\n      return ret;\n    },\n\n    not(arg) {\n      let ret = new DOMStack();\n      if (!this.array.length || !arg) return new DOMStack();\n      if (!this.array.length) return new DOMStack();\n      const that = this\n      const __nots = (node, arg) => {\n        let result = [];\n        if (typeof arg === 'string') {\n          let nodes;\n          if (node.parentNode) nodes = node.parentNode.querySelectorAll(arg);\n          let elements;\n          if (nodes && nodes.length) {\n            elements = Array.prototype.slice.apply(node.parentNode.querySelectorAll(arg));\n          }\n          if (elements && elements.length) {\n            if (elements.indexOf(node) == -1) {\n              result.push(node);\n            }\n          } else {\n            result.push(node);\n          }\n        } else if (arg.nodeType === 1) {\n          if (node === arg) {\n            result.push(node);\n          }\n        } else if (Array.isArray(arg) && arg.length) {\n          if (Array.prototype.slice.apply(arg).indexOf(node) !== -1) {\n            result.push(node);\n          }\n        } else if (arg.objectType && arg.objectType === 'domstack') {\n          if (node === arg[0]) {\n            result.push(node);\n          }\n        } else if (typeof arg === 'function') {\n          if (arg.call(that)) {\n            result.push(node);\n          }\n        } else {\n          return new DOMStack();\n        }\n        return result;\n      };\n      var temp = [];\n      this.forEach(item => {\n        temp.push(__nots(item, arg));\n      });\n\n      temp = $.flatten(temp);\n      ret.concat(temp)\n      return ret;\n    },\n\n    has(arg) {\n      if (!this.array.length) return new DOMStack();\n      let ret = new DOMStack();\n      const self = this;\n\n      const __has = (node, arg) => {\n        if (typeof arg === 'string') {\n          if (node.querySelector(arg)) {\n            return true;\n          }\n        } else if (arg && arg.nodeType === 1) {\n          if (Array.prototype.slice.apply(self.children).indexOf(arg)) {\n            return true;\n          } \n        } else if (arg && arg.objectType === 'domstack') {\n          const children = this.children()\n          if (children.array.indexOf(arg[0]) != -1) {\n            return true;\n          }\n        }\n        return false;\n      };\n\n      this.forEach(element => {\n        if (__has(element, arg)) {\n          ret.push(element);\n        }\n      });\n      return ret;\n    },\n\n    prev(selector) {    \n      if (!this.array.length) return new DOMStack();\n      let ret = new DOMStack();\n      let children;\n      let previousElement = this[0].previousElementSibling;\n      if (selector && typeof selector === 'string') {\n        children = this.siblings(selector);\n        var selectorCheck = this.parent().children(selector);\n        selectorCheck.forEach(function(element) {\n          if (element === previousElement) {\n            ret.push(element);\n          }\n        })\n      } else {\n        ret.push(this[0].previousElementSibling);\n      }\n      return ret;\n    },\n\n    prevAll(selector) {\n      if (!this.array.length) return new DOMStack();\n      let ret = new DOMStack();\n      let __siblings;\n      let __parent;\n      const __self = this[0];\n      let __sibs = Array.prototype.slice.apply(this[0].parentNode.children);\n      let pos = __sibs.indexOf(__self);\n      if (selector && typeof selector === 'string') {\n        __parent = this.array[0].parentNode;\n        __siblings = $(__parent).find(selector);\n        __siblings.forEach(function(el) {\n          if(__sibs.indexOf(el) < pos) {\n            ret.push(el)\n          }\n        })\n      } else {\n        __sibs.splice(pos);\n        ret.concat(__sibs);\n      }\n      return ret;\n    },\n\n    next(selector) {\n      if (!this.array.length) return new DOMStack();\n      let ret = new DOMStack();\n      let children;\n      let nextElement = this[0].nextElementSibling;\n      if (selector && typeof selector === 'string') {\n        children = this.siblings(selector);\n        children.forEach(element => {\n          if (nextElement === element) {\n            ret.push(element);\n          }\n        });\n      } else {\n        ret.push(this[0].nextElementSibling);\n      }\n      return ret;\n    },\n\n    nextAll(selector) {\n      if (!this.array.length) return new DOMStack();\n      let ret = new DOMStack();\n      let __siblings;\n      let __parent;\n      const __self = this[0];\n      let __sibs = Array.prototype.slice.apply(this[0].parentNode.children);\n      let pos = __sibs.indexOf(__self);\n      __sibs.splice(0, pos + 1);\n      if (selector && typeof selector === 'string') {\n        __parent = this.array[0].parentNode;\n        __siblings = $(__parent).find(selector);\n        __sibs.splice(0, __sibs.indexOf(this.array[0]));\n        __sibs.forEach(element => {\n          if (__siblings.array.indexOf(element) > -1) {\n            ret.push(element);\n          }\n        });\n      } else {\n        __siblings = Array.prototype.slice.apply(this[0].parentNode.children);\n        pos = __siblings.indexOf(__self);\n        __siblings.splice(0, pos + 1);\n        ret.concat(__siblings);\n      }\n      return ret;\n    },\n\n    first() {\n      if (!this.array.length) return new DOMStack();\n      return this.eq(0);\n\n    },\n\n    last() {\n      if (!this.array.length) return new DOMStack();\n      return this.eq(-1);\n    },\n\n    index(element) {\n      if (!this.array.length) return undefined;\n      if (!element) {\n        if (this.length >= 0) {\n          return 1;\n        } else if (this.length == 0) {\n          return -1;\n        } else {\n          return -1;\n        }\n      } else {\n        if (element && element.objectType && element.objectType === 'domstack') {\n          return this.indexOf(element.getData()[0]);\n        } else if (element.nodeType === 1) {\n          return this.indexOf(element);\n        } else {\n          return this.indexOf(element);\n        }\n      }\n    },\n\n    children(selector) {\n      if (!this.array.length) return new DOMStack();\n      let ret = new DOMStack();\n      if (!selector) {\n        this.forEach(node => {\n          Array.prototype.slice.apply(node.children).forEach(ctx => ret.push(ctx));\n        });\n        ret[0] = ret.array[0];\n      } else {\n        this.forEach(node => {\n          Array.prototype.slice.apply(node.children).forEach(ctx => {\n            if ($(ctx).is(selector)) {\n              ret.push(ctx);\n            }\n          });\n        });\n        ret[0] = ret.array[0];\n      }\n      return ret;\n    },\n\n    siblings(selector) {\n      if (!this.array.length)\n        return new DOMStack();\n      let __siblings;\n      let ret = new DOMStack();\n      const $this = this;\n      let parent;\n      let children = Array.prototype.slice.apply($this[0].parentNode.children);\n\n      /**\n       * Remove this from siblings:\n       */\n      if (selector && typeof selector === 'string') {\n        parent = this.array[0].parentNode;\n        __siblings = $(parent).find(selector);\n        const newPos = __siblings.array.indexOf($this[0]);\n        __siblings.array.splice(newPos, 1);\n        ret.concat(__siblings);\n      } else {\n        const pos = children.indexOf($this[0]);\n        children.splice(pos, 1);\n        ret.concat(children);\n      }\n      return ret;\n    },\n\n    parent(selector) {\n      if (!this.array.length) return new DOMStack();\n      let ret = new DOMStack();\n      var parents;\n      var self = this[0];\n      var result = [];\n      if (selector) {\n        parents = Array.prototype.slice.apply(self.parentNode.parentNode.querySelectorAll(selector));\n        parents.forEach(function(el) {\n          if (el === self.parentNode) {\n            result.push(el);\n          }\n        })\n        result.unique();\n        ret.concat(result);\n      } else {\n        this.forEach(ctx => {\n          return ret.push(ctx.parentNode);\n        });\n      }\n      ret.unique();\n      if (ret == undefined) {\n        return new DOMStack();\n      } else {\n        return ret;\n      }\n    },\n\n    closest(selector) {\n      if (!this.array.length)\n        return new DOMStack();\n      let ret = new DOMStack();\n      if (typeof selector === 'undefined') {\n        return new DOMStack();\n      }\n      let p;\n      if (this[0]) {\n        p = this[0].parentNode;\n      }\n      if (!p) {\n        return new DOMStack();\n      }\n      if (typeof selector === 'string') {\n        selector.trim();\n        if (p && $(p).is(selector)) {\n          ret.push(p);\n        } else {\n          ret.push($(p).closest(selector).array[0]);\n        }\n      }\n      if (ret[0] === undefined) {\n        ret.splice(0);\n      }\n      return ret;\n    },\n\n    css(property, value) {\n      if (!this.array.length) return new DOMStack();\n      const pixelRE = /top|bottom|left|right|margin|padding/img;\n      let postFix = '';\n      let ret = new DOMStack();\n      const testForPixelSupport = (value, property) => {\n        if ($.type(value) === 'number' && property.match(pixelRE)) {\n          postFix = 'px';\n        }\n      };\n      if (!property) return new DOMStack();\n      if (!value && $.type(property) === 'object') {\n        this.forEach(node => {\n          for (let key in property) {\n            if (property.hasOwnProperty(key)) {\n              testForPixelSupport(property[key], key);\n              node.style[$.camelize(key)] = property[key] + postFix;\n            }\n          }\n          ret.push(node);\n        });\n      } else if (!value && typeof property === 'string') {\n        if (!this.array.length)\n          return;\n        return document.defaultView.getComputedStyle(this.eq(0).array[0], null).getPropertyValue(property.toLowerCase());\n      } else if (!!value) {\n        this.forEach(node => {\n          testForPixelSupport(value, property);\n          node.style[$.camelize(property)] = value + postFix;\n          ret.push(node);\n        });\n      }\n      return ret;\n    },\n\n    width(amount) {\n      if (!this.array.length) return;\n      if (amount) {\n        if(/px]+|[pt]+|[em]+|[en]+|[%]+|[ex]+|[in]+|[cm]+|[mm]+|[ch]+|[in]+|[rem]+|[vw]+|[vh]+$/.test(amount)) {\n          this.forEach(function(element) {\n            element.style.width = amount;\n          });\n        } else {\n          this.forEach(function(element) {\n            element.style.width = amount + 'px';\n          });\n        }\n      } else {\n        const styles = window.getComputedStyle(this[0]);\n        return parseInt(styles.width, 10);\n      }\n    },\n\n    height(amount) {\n      if (!this.array.length) return;\n      if (amount) {\n        if(/px]+|[pt]+|[em]+|[en]+|[%]+|[ex]+|[in]+|[cm]+|[mm]+|[ch]+|[in]+|[rem]+|[vw]+|[vh]+$/.test(amount)) {\n          this.forEach(function(element) {\n            element.style.height = amount;\n          });\n        } else {\n          this.forEach(function(element) {\n            element.style.height = amount + 'px';\n          });\n        }\n      } else {\n        const styles = window.getComputedStyle(this[0]);\n        return parseInt(styles.height, 10);\n      }\n    },\n\n    before(content) {\n      if (!this.array.length) {\n        return new DOMStack();\n      }\n      const __before = (node, content) => {\n        if (typeof content === 'string' || typeof content === 'number') {\n          content = $.html(content);\n        }\n        if (content && content.objectType && content.objectType === 'domstack') {\n          const len = content.size();\n          let i = 0;\n          while (i < len) {\n            node.parentNode.insertBefore(content.array[i], node);\n            i++;\n          }\n        } else if (content && content.nodeType === 1) {\n          node.parentNode.insertBefore(content, node);\n        }\n        return this;\n      };\n      this.forEach(node => {\n        return __before(node, content);\n      });\n      return this;\n    },\n\n    after(content) {\n      if (!this.array.length) return new DOMStack();\n      const __after = (node, content) => {\n        let parent = node.parentNode;\n        if (typeof content === 'string' || typeof content === 'number') {\n          content = $.html(content);\n        }\n        if (content && content.objectType && content.objectType === 'domstack') {\n          let i = 0,\n            len = content.size();\n          while (i < len) {\n            if (node === parent.lastChild) {\n              parent.appendChild(content.array[i]);\n            } else {\n              parent.insertBefore(content.array[i], node.nextSibling);\n            }\n            i++;\n          }\n        } else if (content && content.nodeType === 1) {\n          parent.appendChild(content);\n        }\n        return this;\n      };\n      this.forEach(node => {\n        return __after(node, content);\n      });\n      return this;\n    },\n\n    prepend(content) {\n      if (!this.array.length) return new DOMStack();\n\n      if (typeof content === 'string' || typeof content === 'number') {\n        this.forEach(element => {\n          element.insertAdjacentHTML('afterbegin', content);\n        });\n      } else if (content && content.objectType && content.objectType === 'domstack') {\n        this.forEach(element => {\n          content.forEach(node => {\n            element.insertBefore(node, element.firstChild);\n          });\n        });\n      } else if (content && content.nodeType === 1) {\n        this.forEach(element => {\n          element.insertBefore(content, element.firstChild);\n        });\n      }\n      return this;\n    },\n\n    append(content) {\n      if (!this.array.length) return new DOMStack();\n\n      if (typeof content === 'string' || typeof content === 'number') {\n        this.forEach(element => {\n          element.insertAdjacentHTML('beforeend', content);\n        });\n      } else if (content && content.objectType && content.objectType === 'domstack') {\n        this.forEach(element => {\n          content.forEach(node => {\n            element.insertBefore(node, null);\n          });\n        });\n\n      } else if (content && content.nodeType === 1) {\n        this.forEach(element => {\n          element.insertBefore(content, null);\n        });\n      }\n      return this;\n    },\n\n    prependTo(selector) {\n      if (!this.array.length) return new DOMStack();\n      this.reverse();\n      this.forEach(item => {\n        return $(selector).prepend(item);\n      });\n      return this;\n    },\n\n    appendTo(selector) {\n      if (!this.array.length) return new DOMStack();\n      this.forEach(item => {\n        return $(selector).append(item);\n      });\n      return this;\n    },\n\n    clone(value) {\n      if (!this.array.length) return new DOMStack();\n      let ret = new DOMStack();\n      this.forEach(ctx => {\n        if (value === true || !value) {\n          ret.push(ctx.cloneNode(true));\n        } else {\n          ret.push(ctx.cloneNode(false));\n        }\n      });\n      return ret;\n    },\n\n    wrap(string) {\n      if (!this.array.length || !string) return new DOMStack();\n      let tempNode;\n      let whichClone;\n      this.forEach(ctx => {\n        tempNode = $.html(string);\n        whichClone = $(ctx).clone(true);\n        tempNode.append(whichClone);\n        $(ctx).before(tempNode);\n        $(ctx).remove();\n      });\n    },\n\n    unwrap() {\n      if (!this.array.length) return new DOMStack();\n      let parentNode = null;\n      this.forEach(node => {\n        if (node.parentNode === parentNode) {\n          return;\n        }\n        parentNode = node.parentNode;\n        if (node.parentNode.nodeName === 'BODY') {\n          return false;\n        }\n        $.replace(node, node.parentNode);\n      });\n    },\n\n    offset() {\n      if (!this.array.length)\n        return;\n      const offset = this[0].getBoundingClientRect();\n      return {\n        top: Math.round(offset.top),\n        left: Math.round(offset.left),\n        bottom: Math.round(offset.bottom),\n        right: Math.round(offset.right)\n      };\n    },\n\n    position() {\n      const parent = this[0].parentNode;\n      const pos = this[0].getBoundingClientRect();\n      const parentPos = parent.getBoundingClientRect();\n      let obj = {\n        top: pos.top - parentPos.top,\n        left: pos.left - parentPos.left\n      };\n      return obj;\n    },\n\n    empty() {\n      if (!this.array.length) return new DOMStack();\n      let ret = new DOMStack();\n      this.forEach(ctx => {\n        $(ctx).children().off();\n        ctx.textContent = '';\n        ret.push(ctx);\n      });\n      return ret;\n    },\n\n    html(content) {\n      if (!this.array.length) return new DOMStack();\n      if (content === '') {\n        this.forEach(node => {\n          node.innerHTML = '';\n        });\n        return this;\n      } else if (content) {\n        this.forEach(node => {\n          node.innerHTML = content;\n        });\n        return this;\n      } else if (!content) {\n        return this.array[0].innerHTML.trim();\n      }\n    },\n\n    text(string) {\n      let ret = '';\n      if (!this.array.length) return new DOMStack();\n      if (!!string || string === 0) {\n        this.forEach(element => {\n          element.innerText = string;\n        });\n        return this;\n      } else {\n        this.forEach(element => {\n          ret += element.innerText;\n          ret.trim();\n        });\n        return ret;\n      }\n    },\n\n    replaceWith(content) {\n      if (content && content.nodeType && content.nodeType === 1) {\n        $(content).off();\n      } else if (content && content.objectType && content.objectType === 'domstack') {\n        content.off();\n      }\n      this.forEach(node => {\n        $(node).off();\n        if (typeof content === 'string') {\n          $.replace($(content), node);\n        } else {\n          $.replace($(content), node);\n        }\n      });\n    },\n\n    remove() {\n      if (!this.array.length) return new DOMStack();\n      this.forEach(node => {\n        $(node).off();\n        if (node.parentNode) node.parentNode.removeChild(node);\n      });\n    },\n\n    addClass(className) {\n      if (!this.array.length) return new DOMStack();\n      if (typeof className !== \"string\")\n        return;\n      let ret = new DOMStack();\n      let classes;\n      this.forEach(node => {\n        if (/\\s/.test(className)) {\n          classes = className.split(' ');\n          classes.forEach(name => {\n            node.classList.add(name);\n          });\n        } else {\n          node.classList.add(className);\n        }\n        ret.push(node);\n      });\n      return ret;\n    },\n\n    hasClass(className) {\n      if (!this.array.length) return new DOMStack();\n      let temp = false;\n      this.forEach(element => {\n        if (element.classList.contains(className)) {\n          temp = true;\n        }\n      });\n      return temp;\n    },\n\n    removeClass(className) {\n      if (!this.array.length) return new DOMStack();\n      let ret = new DOMStack();\n      let classes;\n      this.forEach(node => {\n        if (!node)\n          return;\n        if (/\\s/.test(className)) {\n          classes = className.split(' ');\n          classes.forEach(name => {\n            node.classList.remove(name);\n          });\n        } else {\n          node.classList.remove(className);\n        }\n        if (node.getAttribute('class') === '') {\n          node.removeAttribute('class');\n        }\n        ret.push(node);\n      });\n      return ret;\n    },\n\n    toggleClass(className) {\n      if (!this.array.length) return new DOMStack();\n      let ret = new DOMStack();\n      this.forEach(node => {\n        node.classList.toggle(className);\n        ret.push(node);\n      });\n      return ret;\n    },\n\n    attr(attribute, value) {\n      if (!this.array.length) return new DOMStack();\n      let ret = new DOMStack();\n      const __attr = (node, attribute, value) => {\n        if (value === undefined) {\n          return node.getAttribute(attribute);\n        } else {\n          return node.setAttribute(attribute, value);\n        }\n      };\n      if (value === undefined) {\n        if (this[0].hasAttribute(attribute)) {\n          return this[0].getAttribute(attribute);\n        } else {\n          return '';\n        }\n      } else {\n        this.forEach(node => {\n          __attr(node, attribute, value);\n          ret.push(node);\n        });\n      }\n      if (ret.length) {\n        return ret;\n      }\n    },\n\n    removeAttr(attribute) {\n      if (!this.array.length) return new DOMStack();\n      let ret = new DOMStack();\n      this.forEach(node => {\n        if (!!node.hasAttribute(attribute)) {\n          node.removeAttribute(attribute);\n          ret.push(node);\n        }\n      });\n      return ret;\n    },\n\n    prop(property, value) {\n      if (!this.array.length) return new DOMStack();\n      if (value === false || !!value) {\n        this.forEach(element => {\n          element[property] = value;\n        });\n        return this;\n      } else if (this.array[0] && this.array[0][property]) {\n        return this.array[0][property];\n      }\n    },\n\n    removeProp(property) {\n      if (!this.array.length) return new DOMStack();\n      this[0][property] = false;\n      return [this[0]];\n    },\n\n    disable() {\n      if (!this.array.length) return new DOMStack();\n      this.forEach(node => {\n        node.classList.add('disabled');\n        node.disabled = true;\n        node.style.cursor = 'default';\n      });\n      return this;\n    },\n\n    enable() {\n      if (!this.array.length) return new DOMStack();\n      this.forEach(node => {\n        node.classList.remove('disabled');\n        node.removeAttribute('disabled');\n        node.style.cursor = 'auto';\n      });\n      return this;\n    },\n\n    val(value) {\n      if (!this.array.length) return new DOMStack();\n      if (value) {\n        this.array[0].value = value;\n        return this;\n      } else {\n        if (this.array[0] && this.array[0].value) {\n          return this.array[0].value;\n        }\n      }\n    },\n\n    hide() {\n      let display = this.css('display');\n      this.data('display_attr', display);\n      this.css('display', 'none');\n    },\n\n    show() {\n      let display = this.data('display_attr');\n      if (!display) return this;\n      if (display === 'none') {\n        display = 'block';\n      }\n      this.css('display', display);\n    },\n\n    unique() {\n      var ret = [];\n      var sort = this.array.sort();\n      sort.forEach(function(ctx, idx) {\n        if (ret.indexOf(ctx) === -1) {\n          ret.push(ctx);\n        }\n      });\n      ret.sort(function(a, b) {\n        return a - b;\n      });\n      this.array.splice(0);\n      var self = this.array;\n      ret.forEach(function(node) {\n        self.push(node)\n      });\n      this.length = this.array.length;\n    }\n  });\n\n  /**\n   * ChocolateChip-UI event methods.\n   */\n\n  (() => {\n    const EventErrorMessages = {\n      en: {\n        noEventOrCallback: \"ChocolateChip-UI Event Error: No event or callback was provided to bind to the element. These are the minimal requirements for this method to work. Please provide an event and callback.\",\n        noCallbackForEventBinding: \"ChocolateChip-UI Event Error: No callback was provided for the event you are trying to bind. A callback is required for the event binding to work.\",\n        noEventToTrigger: \"ChocolateChip-UI Event Error: No event was provided to trigger. As such we cannot do anything.\"\n      },\n      es: {\n        noEventOrCallback: \"Hubo Error de Evento ChocolateChip-UI: No se proporcionó ningún evento ni función callback para asignar al elemento. Cuando menos se nesecitan éstos para realizar esta operación en el elemento. Por favor proporcione un evento y una callback.\",\n        noCallbackForEventBinding: \"Hubo Error de Evento ChocolateChip-UI: No se proporcionó ninguna función callback para el evento que se quiere asignar al element. Se reqiere una callback para asignar el evento al elemento.\",\n        noEventToTrigger: \"Hubo Error de Evento ChocolateChip-UI: No se proporcionó ningún evento que gatillar. Por eso no podemos hacer nada.\"\n      }\n    }\n\n    let errors;\n    if ($('html').attr('lang') == 'en') errors = EventErrorMessages.en;\n    if ($('html').attr('lang') == 'es') errors = EventErrorMessages.es;\n        \n    /**\n     * Define interface for handling events:\n     */\n    let EventStack = (array) => {\n      let __array = [];\n      if (array && Array.isArray(array)) {\n        let i = -1;\n        const len = array.length;\n        while (++i < len) {\n          __array[i] = array[i];\n        }\n      } else if (array) {\n        const arr = Array.prototype.slice.apply(arguments);\n        arr.forEach((ctx, idx) => {\n          __array[idx] = ctx;\n        });\n      }\n      return {\n\n        size: () => __array.length,\n\n        push: (data) => __array.push(data),\n\n        pop: () => __array.pop(),\n\n        eq: (index) => {\n          if (index < 0) {\n            return __array[__array.length + index];\n          } else {\n            return __array[index];\n          }\n        },\n\n        forEach: (callback) => {\n          let value;\n          let i = -1;\n          const len = __array.length;\n          while (++i < len) {\n            value = callback.call(__array[i], __array[i], i);\n            if (value === false) {\n              break;\n            }\n          }\n        },\n\n        shift: () => __array.shift.apply(__array, arguments),\n\n        unshift: () => __array.unshift.apply(__array, arguments),\n\n        splice: () => __array.splice.apply(__array, arguments),\n\n        indexOf: () => __array.indexOf.apply(__array, arguments),\n\n        getData: () => __array,\n\n        purge: () => __array = []\n      };\n    };\n\n    let ChuiEventCache = {\n      elements: {}\n    };\n\n    /* jshint, evil: false, validthis:true, unused:false, loopfunc: false,\n    smarttabs: true, nonew: false */\n\n    /**\n     * Private method to set events on ChuiEventCache\n     */\n    const bind = function(element, event, callback, capturePhase) {\n      if (!element.id) element.id = chocolatechipjs.uuid();\n      if (!ChuiEventCache.elements[element.id]) {\n        ChuiEventCache.elements[element.id] = EventStack(); // jshint ignore:line\n      }\n      ChuiEventCache.elements[element.id].push({\n        event: event,\n        callback: callback\n      });\n      element.addEventListener(event, callback, capturePhase);\n    };\n\n\n    /**\n     * Delete items from event stack:\n     */\n    const deleteFromEventStack = function(toDelete, evtStck) {\n      let len = toDelete.length;\n      for (let i = 0; len > i; len--) {\n        evtStck.splice(toDelete[len - 1], 1);\n      }\n    };\n    /**\n     * Private method to unbind events on ChuiEventCache\n     */\n    const unbind = function(element, event, callback, capturePhase) {\n\n      const eventStack = ChuiEventCache.elements[element.id];\n      if (!eventStack) return;\n      let deleteOrder = [];\n\n      if (!event) {\n        deleteOrder = [];\n        eventStack.forEach((evt, idx) => {\n          element.removeEventListener(evt.event, evt.callback, evt.capturePhase);\n          deleteOrder.push(idx);\n        });\n\n        deleteFromEventStack(deleteOrder, eventStack);\n\n      } else if (!!event && !callback) {\n        deleteOrder = [];\n        eventStack.forEach((evt, idx) => {\n          if (evt.event === event) {\n            element.removeEventListener(evt.event, evt.callback, evt.capturePhase);\n            deleteOrder.push(idx);\n          }\n        });\n\n        deleteFromEventStack(deleteOrder, eventStack);\n\n      } else if (callback) {\n        deleteOrder = [];\n        eventStack.forEach((evt, idx) => {\n          if (callback === evt.callback) {\n            element.removeEventListener(evt.event, evt.callback, evt.capturePhase);\n            deleteOrder.push(idx);\n          }\n        });\n        deleteFromEventStack(deleteOrder, eventStack);\n      }\n    };\n\n\n    /**\n     * Set delegated events on ChuiEventCache\n     */\n\n    const delegate = (element, selector, event, callback, capturePhase) => {\n      let delegateElement = $(element).array[0];\n      $(element).forEach(ctx => {\n        $(ctx).on(event, (e) => {\n          let target = e.target;\n          if (e.target.nodeType === 3) {\n            target = e.target.parentNode;\n          }\n          $(ctx).find(selector).forEach(delegateElement => {\n            if (delegateElement === target) {\n              callback.call(delegateElement, e);\n            } else {\n              try {\n                const ancestor = $(target).closest(selector);\n                if (delegateElement === ancestor.array[0]) {\n                  callback.call(delegateElement, e);\n                }\n              } catch (err) {}\n            }\n          });\n        }, capturePhase);\n      });\n    };\n\n\n    /**\n     * Method to remove delegated events from ChuiEventCache:\n     */\n    const undelegate = (element, selector, event, callback, capturePhase) => {\n\n      unbind($(element).array[0], event, callback, capturePhase);\n    };\n\n    $.fn.extend({\n      on: function(event, selector, callback, capturePhase) {\n        if (!event) {\n          if ($.supressErrorMessages) return;\n          console.error(errors.noEventOrCallback);\n          return;\n        }\n        if (!selector) {\n          if ($.supressErrorMessages) return;\n          console.error(errors.noCallbackForEventBinding);\n          return;\n        }\n\n        if (!selector && /Object/img.test(event.constructor.toString())) {\n          this.forEach(element => {\n            for (let key in event) {\n              if (event.hasOwnProperty(key)) {\n                $(element).on(key, event[key]);\n              }\n            }\n          });\n        }\n        let ret = [];\n        let events;\n        if (typeof event === 'string') {\n          event = event.trim();\n          if (/\\s/.test(event)) {\n            events = event.split(' ');\n            this.forEach(ctx => {\n              events.forEach(evt => {\n                if (typeof selector === 'function') {\n                  bind(ctx, evt, selector, callback);\n                  ret.push(ctx);\n                } else {\n                  delegate(ctx, selector, evt, callback, capturePhase);\n                }\n              });\n            });\n          }\n        }\n        this.forEach(ctx => {\n          if (typeof selector === 'function') {\n            return bind(ctx, event, selector, callback);\n          } else {\n            delegate(ctx, selector, event, callback, capturePhase);\n          }\n        });\n        return this;\n      },\n\n      off: function(event, selector, callback, capturePhase) {\n        let ret = new DOMStack();\n        if (!this.size()) return ret;\n\n        this.forEach(function(ctx) {\n          if (typeof event === 'undefined') {\n            ret.push(ctx);\n            unbind(ctx);\n            return ret;\n          } else if (typeof selector === 'function' || !selector) {\n            unbind(ctx, event, selector, callback, capturePhase);\n            return this;\n          } else {\n            undelegate(ctx, selector, event, callback, capturePhase);\n            return this;\n          }\n        });\n      },\n\n      trigger: function(event, data) {\n        if (!event) {\n          if ($.supressErrorMessages) return;\n          console.error(errors.noEventToTrigger);\n          return;\n        }\n        if (!this.size()) return new DOMStack();\n        this.forEach(ctx => {\n          if (document.createEvent) {\n            const evtObj = document.createEvent('Events');\n            evtObj.initEvent(event, true, false);\n            evtObj.data = data;\n            ctx.dispatchEvent(evtObj);\n          }\n        });\n      }\n    });\n  })();\n\n\n  window.$ = window.chocolatechipjs = chocolatechipjs;\n\n  return $;\n})();\n\n  /**\n   * ChocolateChip-UI event aliases.\n   */\n  $.extend({\n    eventStart: null,\n    eventEnd: null,\n    eventMove: null,\n    eventCancel: null,\n    /**\n     * Define min-length for gesture detection:\n     */\n    gestureLength: 30\n  });\n  $(() => {\n    /**\n     * Setup Event Variables:\n     */\n    if ('ontouchstart' in window && /mobile/img.test(navigator.userAgent)) {\n      $.eventStart = 'touchstart';\n      $.eventEnd = 'touchend';\n      $.eventMove = 'touchmove';\n      $.eventCancel = 'touchcancel';\n      /** \n       * Mouse events for desktop: \n       */\n    } else {\n      $.eventStart = 'mousedown';\n      $.eventEnd = 'click';\n      $.eventMove = 'mousemove';\n      $.eventCancel = 'mouseout';\n    }\n  });\n\n  /**\n   * ChocolateChip-UI gestures.\n   */\n  (function() {\n    \"use strict\";\n    let touch = {};\n    let touchTimeout;\n    let swipeTimeout;\n    let tapTimeout;\n    const longTapDelay = 750;\n    let singleTapDelay = 150;\n    $.gestureLength = 50;\n    if ($.isAndroid) singleTapDelay = 200;\n    let longTapTimeout;\n\n    function parentIfText(node) {\n      return 'tagName' in node ? node : node.parentNode;\n    }\n\n    function swipeDirection(x1, x2, y1, y2) {\n      return Math.abs(x1 - x2) >=\n        Math.abs(y1 - y2) ? (x1 - x2 > 0 ? 'left' : 'right') : (y1 - y2 > 0 ? 'up' : 'down');\n    }\n\n    function longTap() {\n      longTapTimeout = null;\n      if (touch.last) {\n        try {\n          if (touch && touch.el) {\n            touch.el.trigger('longtap');\n            touch = {};\n          }\n        } catch (err) {}\n      }\n    }\n\n    function cancelLongTap() {\n      if (longTapTimeout) clearTimeout(longTapTimeout);\n      longTapTimeout = null;\n    }\n\n    function cancelAll() {\n      if (touchTimeout) clearTimeout(touchTimeout);\n      if (tapTimeout) clearTimeout(tapTimeout);\n      if (swipeTimeout) clearTimeout(swipeTimeout);\n      if (longTapTimeout) clearTimeout(longTapTimeout);\n      touchTimeout = tapTimeout = swipeTimeout = longTapTimeout = null;\n      touch = {};\n    }\n\n    /** \n     * Execute this after DOM loads: \n     */\n    $(() => {\n      let now;\n      let delta;\n      const body = $('body');\n      let twoTouches = false;\n\n      /** \n       * Capture start of event: \n       */\n      body.on($.eventStart, function(e) {\n        now = Date.now();\n        delta = now - (touch.last || now);\n        if (e.originalEvent) e = e.originalEvent;\n\n        if ($.eventStart === 'mousedown') {\n          touch.el = $(parentIfText(e.target));\n          if (e.target.nodeName === 'ripple') {\n            touch.el = $(el.target.parentNode);\n          }\n          touchTimeout && clearTimeout(touchTimeout);\n          touch.x1 = e.pageX;\n          touch.y1 = e.pageY;\n          twoTouches = false;\n\n        /** \n         * Detect two or more finger gestures: \n         */\n        } else {\n          if (e.touches.length === 1) {\n            touch.el = $(parentIfText(e.touches[0].target));\n            touchTimeout && clearTimeout(touchTimeout);\n            touch.x1 = e.touches[0].pageX;\n            touch.y1 = e.touches[0].pageY;\n            if (e.targetTouches.length === 2) {\n              twoTouches = true;\n            } else {\n              twoTouches = false;\n            }\n          }\n        }\n        \n        if (delta > 0 && delta <= 250) {\n          touch.isDoubleTap = true;\n        }\n        touch.last = now;\n        longTapTimeout = setTimeout(longTap, longTapDelay);\n      });\n\n      /** \n       * Capture event move: \n       */\n      body.on($.eventMove, e => {\n        if (e.originalEvent) e = e.originalEvent;\n        cancelLongTap();\n        if ($.eventMove === 'mousemove') {\n          touch.x2 = e.pageX;\n          touch.y2 = e.pageY;\n        } else {\n          /** \n           * One finger gesture: \n           */\n          if (e.touches.length === 1) {\n            touch.x2 = e.touches[0].pageX;\n            touch.y2 = e.touches[0].pageY;\n          }\n        }\n      });\n\n      /** \n       * Capture event end: \n       */\n      body.on($.eventEnd, e => {\n\n        cancelLongTap();\n        if (!!touch.el) {\n          /** \n           * Swipe detection: \n           */\n          if ((touch.x2 && Math.abs(touch.x1 - touch.x2) > $.gestureLength) ||\n            (touch.y2 && Math.abs(touch.y1 - touch.y2) > $.gestureLength)) {\n            swipeTimeout = setTimeout(function() {\n              if (touch && touch.el) {\n                touch.el.trigger('swipe');\n                touch.el.trigger('swipe' + (swipeDirection(touch.x1, touch.x2, touch.y1, touch.y2)));\n                touch = {};\n              }\n            }, 0);\n\n          /** \n           * Normal tap: \n           */\n          } else if ('last' in touch) {\n            /** \n             * Delay by one tick so we can cancel the 'tap' event if 'scroll' fires: \n             */\n            tapTimeout = setTimeout(() => {\n              /** \n               * Trigger double tap immediately: \n               */\n              if (touch && touch.isDoubleTap) {\n                if (touch && touch.el) {\n                  touch.el.trigger('doubletap');\n                  touch = {};\n                }\n\n              } else {\n                /** \n                 * Trigger tap after singleTapDelay: \n                 */\n                touchTimeout = setTimeout(() => {\n                  touchTimeout = null;\n                  if (touch && touch.el) {\n                    touch.el.trigger('tap');\n                    touch = {};\n                    return false;\n                  }\n                }, singleTapDelay);\n              }\n            }, 0);\n          }\n\n        } else {\n          return;\n        }\n      });\n      body.on('touchcancel', cancelAll);\n    });\n\n    /**\n     * Register events:\n     */\n    ['tap', 'doubletap', 'longtap', 'swipeleft', 'swiperight', 'swipeup', 'swipedown'].forEach(method => {\n      $.fn.extend({\n        method: function(callback) {\n          return this.on(method, callback);\n        }\n      });\n    });\n  })();\n\n  /**\n   * ChocolateChipJS data cache.\n   */\n  let CCDataCache = {\n    elements: {}\n  };\n  $.fn.extend({\n    data(key, value) {\n      if (!this.size()) return new DOMStack();\n      let id;\n      const ctx = this.array[0];\n      if (!ctx.id) {\n        ctx.id = $.uuid();\n      }\n      id = ctx.id;\n      if (!CCDataCache.elements[id]) {\n        CCDataCache.elements[id] = {};\n      }\n      if (key === 'undefined' || key === null) {\n        return;\n      }\n      if (value || value === 0) {\n        let obj = {};\n        obj[key] = value;\n\n        CCDataCache.elements[id][key] = value;\n      } else {\n        if (!CCDataCache.elements[id]) return;\n        if (CCDataCache.elements[id][key] === 0) {\n          return CCDataCache.elements[id][key];\n        }\n        if (!CCDataCache.elements[id][key]) return;\n        return CCDataCache.elements[id][key];\n      }\n      return this;\n    },\n\n    removeData(key) {\n      if (!this.size()) return this;\n      this.forEach((element) => {\n        const id = element.id;\n        if (!id) return this;\n        if (!CCDataCache.elements[id]) {\n          return this;\n        }\n        if (!key) {\n          delete CCDataCache.elements[id];\n          return this;\n        }\n        if (Object.keys(CCDataCache.elements[id]).length === 0) {\n          delete CCDataCache.elements[id];\n        } else {\n          delete CCDataCache.elements[id][key];\n        }\n        return this;\n      });\n    }\n  });\n\n/**\n * ChocolateChip-UI types method.\n */\n$.extend({\n  type: type => {\n    switch (typeof type) {\n      case 'boolean':\n        return 'boolean';\n      case 'number':\n        return 'number';\n      case 'string':\n        return 'string';\n      case 'function':\n        return 'function';\n      case 'object':\n        if (Array.isArray(type)) {\n          return 'array';\n        } else if (Object.prototype.toString.call(type) === '[object Date]') {\n          return 'date';\n        } else if (Object.prototype.toString.call(type) === '[object Error]') {\n          return 'error';\n        } else if (Object.prototype.toString.call(type) === '[object RegExp]') {\n          return 'regexp';\n        } else if (Object.prototype.toString.call(type) === '[object Object]') {\n            if (type.objectType && type.objectType === 'domstack') {\n              return 'domstack';\n              /* If Promise polyfill, then should support `then`. */\n            } else if (type.then) {\n              return 'promise';\n              /* Otherwise we got a normal object here. */\n            } else {\n              return 'object';\n            }\n        } else if (Object.prototype.toString.call(type) === '[object Number]') {\n          return 'number';\n        } else if (Object.prototype.toString.call(type) === '[object String]') {\n          return 'string';\n        } else if (Object.prototype.toString.call(type) === '[object Promise]') {\n          return 'promise';\n        } else if (Object.prototype.toString.call(type) === '[object Boolean]') {\n          return 'boolean';\n        }\n    }\n  }\n});\n\n/**\n * ChocolateChip-UI string methods.\n */\n$.extend({\n  camelize: string => {\n    if (typeof string !== 'string')\n      return;\n    return string.replace(/\\-(.)/g, (match, letter) => {\n      return letter.toUpperCase();\n    });\n  },\n\n  deCamelize: string => {\n    if (typeof string !== 'string')\n      return;\n    return string.replace(/([A-Z])/g, '-$1').toLowerCase();\n  },\n\n  capitalize: (string, all) => {\n    const self = this;\n    if (!string) {\n      return;\n    }\n    if (typeof string !== 'string')\n      return;\n    if (all) {\n      const str = string.split(' ');\n      let newstr = [];\n      str.forEach(item => {\n        return newstr.push(self.capitalize(item));\n      });\n      return newstr.join(' ');\n    } else {\n      return string.charAt(0).toUpperCase() + string.substring(1).toLowerCase();\n    }\n  }\n});\n\n/**\n * ChocolateChip-UI collection utilities.\n */\n$.fn.extend({\n  forEach(callback) {\n    this.each((idx, ctx) => {\n      callback.call(ctx, ctx, idx);\n    });\n  },\n\n  disable() {\n    if (!this.size()) return $();\n    this.forEach(node => {\n      node.classList.add('disabled');\n      node.disabled = true;\n      node.style.cursor = 'default';\n    });\n    return this;\n  },\n\n  enable() {\n    if (!this.size()) return $();\n    this.forEach(node => {\n      node.classList.remove('disabled');\n      node.removeAttribute('disabled');\n      node.style.cursor = 'auto';\n    });\n    return this;\n  },\n\n  iz(selector) {\n    const ret = $();\n    this.forEach(ctx => {\n      if ($(ctx).is(selector)) {\n        ret.push(ctx);\n      }\n    });\n    return ret;\n  },\n\n  iznt(selector) {\n    const ret = $();\n    this.each((_, ctx) => {\n      if (!$(ctx).is(selector)) {\n        ret.push(ctx);\n      }\n    });\n    return ret;\n  },\n\n  haz(selector) {\n    let ret = new DOMStack();\n    this.forEach(element => {\n      if ($(element).has(selector)[0]) {\n        ret.push(element);\n      }\n    });\n    return ret;\n  },\n\n  haznt(selector) {\n    let ret = new DOMStack();\n    this.forEach(element => {\n      if (!$(element).has(selector)[0]) {\n        ret.push(element);\n      }\n    });\n    return ret;\n  },\n\n  hazClass(className) {\n    if (className) {\n      return this.iz('.' + className);\n    } else {\n      return new DOMStack();\n    }\n  },\n\n  hazntClass(className) {\n    if (className) {\n      return this.iznt('.' + className);\n    } else {\n      return new DOMStack();\n    }\n  },\n\n  hazAttr(attribute) {\n    if (attribute) {\n      return this.iz('[' + attribute + ']');\n    } else {\n      return new DOMStack();\n    }\n  },\n\n  hazntAttr(attribute) {\n    if (attribute) {\n      return this.iznt('[' + attribute + ']');\n    } else {\n      return new DOMStack();\n    }\n  }\n});\n\n/**\n * ChocolateChip-UI - Validators.\n */\n\n/**\n * Set validity state of form elements: \n */\nconst setValidityStatus = (element, valid) => {\n  if (valid) {\n    $(element).prop('valid', true);\n    $(element).prop('invalid', false);\n    $(element).addClass('valid').removeClass('invalid');\n  } else {\n    $(element).prop('valid', false);\n    $(element).prop('invalid', true);\n    $(element).addClass('invalid').removeClass('valid');\n  }\n};\n\n/**\n * Used to check input validity: \n */\nconst checkValidity = (element, expression) => {\n  if (expression) {\n    setValidityStatus(element, true);\n  } else {\n    setValidityStatus(element, false);\n  }\n  return expression;\n};\n\n$.fn.extend({\n  isNotEmpty: function() {\n    if (this[0].nodeName !== 'INPUT') return;\n    const value = this[0].nodeName === 'INPUT' && this[0].value;\n    return checkValidity(this, value);\n  },\n\n  validateAlphabetic: function() {\n    if (this[0].nodeName !== 'INPUT') return;\n    const letters = /^[A-Za-z]+$/;\n    const value = this[0].nodeName === 'INPUT' && this[0].value;\n    checkValidity(this, value.match(letters));\n    if (value) {\n      return checkValidity(this, value.match(letters));\n    }\n  },\n\n  validateText: function() {\n    if (this[0].nodeName !== 'INPUT') return;\n    const letters = /^[A-Za-z\\W]+$/;\n    const value = this[0].nodeName === 'INPUT' && this[0].value;\n    checkValidity(this, value.match(letters));\n    if (value) {\n      return checkValidity(this, value.match(letters));\n    }\n  },\n\n  validateNumber: function() {\n    if (this[0].nodeName !== 'INPUT') return;\n    const numbers = /^[+-]?\\d+(\\.\\d+)?$/;\n    const value = this[0].nodeName === 'INPUT' && this[0].value;\n    checkValidity(this, value.match(numbers));\n    if (value) {\n      return checkValidity(this, value.match(numbers));\n    }\n  },\n\n  validateAlphaNumeric: function() {\n    if (this[0].nodeName !== 'INPUT') return;\n    const letters = /^[0-9a-zA-Z]+$/;\n    const value = this[0].nodeName === 'INPUT' && this[0].value;\n    checkValidity(this, value.match(letters));\n    if (value) {\n      return checkValidity(this, value.match(letters));\n    }\n  },\n\n  validateUserName: function(minimum) {\n    if (this[0].nodeName !== 'INPUT') return;\n    const letters = /^[a-zA-Z0-9]+$/;\n    const username = this[0].value;\n    if (!username) return checkValidity(this, username);\n    if (minimum && username.match(letters)) {\n      if (username.length >= minimum) {\n        return checkValidity(this, username);\n      } else {\n        return checkValidity(this, false);\n      }\n    } else {\n      return checkValidity(this, checkValidity(this, username.match(letters)));\n    }\n  },\n\n  validateEmail: function() {\n    if (this[0].nodeName !== 'INPUT') return;\n    const value = this[0].value;\n    const email = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    if (value) {\n      return checkValidity(this, value.match(email));\n    } else {\n      return checkValidity(this, false);\n    }\n  },\n\n  validatePhoneNumber: function(int) {\n    if (this[0].nodeName !== 'INPUT') return;\n    let phone;\n    let phoneNumber;\n    const convertLettersToNumbers = value => {\n      let phonenumber = \"\";\n      value = value.toLowerCase();\n      const len = value.length;\n      for (let i = 0; i < len; i++) {\n        let character = value.charAt(i);\n        switch (character) {\n          case '0':\n            phonenumber += \"0\";\n            break;\n          case '1':\n            phonenumber += \"1\";\n            break;\n          case '2':\n            phonenumber += \"2\";\n            break;\n          case '3':\n            phonenumber += \"3\";\n            break;\n          case '4':\n            phonenumber += \"4\";\n            break;\n          case '5':\n            phonenumber += \"5\";\n            break;\n          case '6':\n            phonenumber += \"6\";\n            break;\n          case '7':\n            phonenumber += \"7\";\n            break;\n          case '8':\n            phonenumber += \"8\";\n            break;\n          case '9':\n            phonenumber += \"9\";\n            break;\n          case '-':\n            phonenumber += \"-\";\n            break;\n          case 'a':\n          case 'b':\n          case 'c':\n            phonenumber += \"2\";\n            break;\n          case 'd':\n          case 'e':\n          case 'f':\n            phonenumber += \"3\";\n            break;\n          case 'g':\n          case 'h':\n          case 'i':\n            phonenumber += \"4\";\n            break;\n          case 'j':\n          case 'k':\n          case 'l':\n            phonenumber += \"5\";\n            break;\n          case 'm':\n          case 'n':\n          case 'o':\n            phonenumber += \"6\";\n            break;\n          case 'p':\n          case 'q':\n          case 'r':\n          case 's':\n            phonenumber += \"7\";\n            break;\n          case 't':\n          case 'u':\n          case 'v':\n            phonenumber += \"8\";\n            break;\n          case 'w':\n          case 'x':\n          case 'y':\n          case 'z':\n            phonenumber += \"9\";\n            break;\n        }\n      }\n      return phonenumber;\n    };\n    if (this[0].value) {\n\n      /**\n       * International Numbers:\n       */\n      if (int) {\n        phoneNumber = this[0].value.replace(/[\\(\\)\\.\\-\\ ]/g, '');\n        return checkValidity(this, this.isNotEmpty() && !isNaN(phoneNumber));\n\n        /**\n         * North America (US and Canada):\n         */\n      } else {\n        phoneNumber = this[0].value.replace(/[\\(\\)\\.\\-\\ ]/g, '');\n        phoneNumber = convertLettersToNumbers(phoneNumber);\n        phone = /((\\(\\d{3}\\)?)|(\\d{3}))([\\s-./]?)(\\d{3})([\\s-./]?)(\\d{4})/;\n        return checkValidity(this, phoneNumber.match(phone));\n      }\n    } else {\n      return checkValidity(this, false);\n    }\n  },\n\n  validateUrl: function() {\n    if (this[0].nodeName !== 'INPUT') return;\n    if (this[0].value) {\n      const url = /^(ftp|http|https):\\/\\/([w]{3}\\.)?(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/;\n      return checkValidity(this, this[0].value.match(url));\n    } else {\n      return checkValidity(this, false);\n    }\n  },\n\n  validateAge: function(minimum) {\n    if (this[0].nodeName !== 'INPUT') return;\n    const age = this[0].value;\n    if(!age) {\n      return checkValidity(this, false);\n    } else if (age && minimum) {\n      return checkValidity(this, age >= minimum);\n    } else if (age) {\n      return checkValidity(this, true);\n    } else {\n      return checkValidity(this, false);\n    }\n  },\n\n  validateCheckbox: function() {\n    if (this[0].nodeName !== 'INPUT') return;\n    if (this[0].nodeName === 'INPUT' && this[0].type === 'checkbox') {\n      return checkValidity(this, this[0].checked === true);\n    }\n  },\n\n  validateRadioButtons: function() {\n    if (this[0].nodeName !== 'INPUT') return;\n    let choice = false;\n    if (this[0].nodeName === 'INPUT' && this[0].type === 'radio') {\n      $.each(this, function(idx, button) {\n        if (button.checked === true) {\n          choice = true;\n        }\n      });\n      return checkValidity(this, choice);\n    }\n  },\n\n  validateSelectBox: function() {\n    if (this[0].nodeName === 'SELECT') {\n      return checkValidity(this, this[0].selectedIndex);\n    } else {\n      return false;\n    }\n  },\n\n  validateSwitch: function() {\n    const checkbox = this.find('input[type=checkbox]')[0];\n    if (checkbox.checked) {\n      return true;\n    } else {\n      return false;\n    }\n  },\n\n  validateSelectList: function() {\n    const radio = this.find('input[type=radio]');\n    if (radio.is('[checked]')) {\n      return true;\n    } else {\n      return false;\n    }\n  },\n  validateMultiSelectList: function() {\n    const checkboxes = this.find('input[type=checkbox]');\n    let checked = false;\n    checkboxes.forEach(function(item) {\n      if ($(item).prop('checked')) {\n        checked = true;\n      }\n    });\n    if (checked) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n});\n\n$.extend({\n  validatePassword: function(input1, input2, minimum) {\n    const psswd1 = $(input1)[0];\n    const psswd2 = $(input2)[0];\n    if (minimum && psswd1.value < minimum || psswd2.value < minimum) {\n      psswd1.classList.add('invalid');\n      psswd1.classList.remove('valid');\n      psswd2.classList.add('invalid');\n      psswd2.classList.remove('valid');\n      return false;\n    } else {\n      const letters = /^(?=.*[a-zA-Z])(?=.*[0-9]).+$/;\n      if (!letters.test(psswd1.value) && !letters.test(psswd2.value)) return false;\n      if (psswd1.value === psswd2.value) {\n        psswd1.classList.remove('invalid');\n        psswd1.classList.add('valid');\n        psswd2.classList.remove('invalid');\n        psswd2.classList.add('valid');\n      } else {\n        psswd1.classList.add('invalid');\n        psswd1.classList.remove('valid');\n        psswd2.classList.add('invalid');\n        psswd2.classList.remove('valid');\n      }\n      return psswd1.value === psswd2.value;\n    }\n  },\n\n  validateWithRegex: function(input, regex) {\n    if (!input || !regex) {\n      console.error('This method requires a regular expression.');\n      return;\n    }\n    const value = $(input).val();\n    if (value) {\n      return checkValidity(input, value.match(regex));\n    }\n  },\n\n  customValidators: [],\n\n  registerCustomValidator: function(name, regex) {\n    this.customValidators.push({name: name, regex: regex});\n  }\n});\n\n/**\n * ChocolateChip-UI serialize methods.\n */\n$.fn.extend({\n  serializeArray() {\n    let name;\n    let type;\n    let ret = [];\n    const add = value => {\n      if ($.type(value) === 'array') {\n        return value.forEach(add);\n      }\n      ret.push({\n        name: name,\n        value: value\n      });\n    };\n    if (this[0]) {\n      $.each([].slice.apply(this[0].elements), (idx, field) => {\n        type = field.type;\n        name = field.name;\n        if (name && field.nodeName.toLowerCase() != 'fieldset' &&\n          !field.disabled && type != 'submit' && type != 'reset' && type != 'button' && type != 'file' &&\n          ((type != 'radio' && type != 'checkbox') || field.checked)) {\n          add($(field).val());\n        }\n      });\n    }\n    return ret;\n  },\n\n  /**\n   * Serialize the values of a form: \n   */\n  serialize() {\n    let ret = [];\n    this.serializeArray().forEach(element => {\n      ret.push(encodeURIComponent(element.name) + '=' + encodeURIComponent(element.value));\n    });\n    return ret.join('&');\n  }\n});\n\n/**\n * ChocolateChip-UI - Form Validation & JSON.\n */\n$.extend({\n  /**\n   * Setup Form object to convert data to JSON, and to validate form values:\n   */\n  Form: options => {\n    if (!options || $.type(options) !== 'array') return;\n\n    let __passed = false;\n    let __errors = [];\n    let __result = [];\n\n    /** \n     * Helper to validate form elements: \n     */\n    function validateElement(item) {\n      if (!item) return;\n      if (!__passed) {\n        __errors.push({\n          element: item.element,\n          type: item.type\n        });\n        if (item.callback) item.callback();\n      } else {\n        convertToObject($(item.element).attr('name'), $(item.element).val());\n      }\n    }\n\n    /** \n     * Helper to convert form element names to JSON: \n     */\n    function convertToObject(name, value) {\n      __result.push({\n        name: name,\n        value: value\n      });\n    }\n\n    /** \n     * Convert form names and values to JSON: \n     */\n    function convertObjectToJSON(data) {\n      const delimiter = '_';\n      let result = {};\n      let arrays = {};\n      data.forEach(item => {\n        const value = item.value;\n        if (value !== '') {\n          if (!item.name) return;\n          let name = item.name;\n          let nameParts = name.split(delimiter);\n          let currResult = result;\n          for (let j = 0; j < nameParts.length; j++) {\n            const namePart = nameParts[j];\n            let arrName;\n            if (namePart.indexOf('[]') > -1 && j === nameParts.length - 1) {\n\n              arrName = namePart.substr(0, namePart.indexOf('['));\n              if (!currResult[arrName]) {\n                currResult[arrName] = [];\n              }\n              currResult[arrName].push(value);\n            } else {\n              if (namePart.indexOf('[') > -1) {\n                arrName = namePart.substr(0, namePart.indexOf('['));\n                const arrIdx = namePart.replace(/^[a-z]+\\[|\\]$/gi, '');\n                if (!arrays[arrName]) {\n                  arrays[arrName] = {};\n                }\n                if (!currResult[arrName]) {\n                  currResult[arrName] = [];\n                }\n                if (j === nameParts.length - 1) {\n                  currResult[arrName].push(value);\n                } else {\n                  if (!arrays[arrName][arrIdx]) {\n                    currResult[arrName].push({});\n                    arrays[arrName][arrIdx] = currResult[arrName][currResult[arrName].length - 1];\n                  }\n                }\n                currResult = arrays[arrName][arrIdx];\n              } else {\n                if (j < nameParts.length - 1) {\n                  if (!currResult[namePart]) {\n                    currResult[namePart] = {};\n                  }\n                  currResult = currResult[namePart];\n                } else {\n                  currResult[namePart] = value;\n                }\n              }\n            }\n          }\n        }\n      });\n      return result;\n    }\n\n    /** \n     * Validate form elements: \n     */\n    options.forEach(item => {\n      if (!$(item.element)[0]) return;\n      let inputs;\n      if (!item.type) {\n        convertToObject($(item.element).attr('name'), $(item.element).val());\n        return;\n      }\n      switch (item.type) {\n        case 'notempty':\n          __passed = $(item.element).isNotEmpty();\n          validateElement(item);\n          break;\n        case 'number':\n          __passed = $(item.element).validateNumber();\n          validateElement(item);\n          break;\n        case 'text':\n          __passed = $(item.element).validateText();\n          validateElement(item);\n          break;\n        case 'alphanumeric':\n          __passed = $(item.element).validateAlphaNumeric();\n          validateElement(item);\n          break;\n        case 'username':\n          __passed = $(item.element).validateUserName(item.min);\n          validateElement(item);\n          break;\n        case 'email':\n          __passed = $(item.element).validateEmail();\n          validateElement(item);\n          break;\n        case 'phone':\n          __passed = $(item.element).validatePhoneNumber();\n          validateElement(item);\n          break;\n        case 'url':\n          __passed = $(item.element).validateUrl();\n          validateElement(item);\n          break;\n        case 'age':\n          __passed = $(item.element).validateAge(item.min);\n          validateElement(item);\n          break;\n        case 'checkbox':\n          __passed = $(item.element).validateCheckbox();\n          if (__passed) {\n            validateElement(item);\n          }\n          break;\n        case 'radio':\n          __passed = $(item.element).validateRadioButtons();\n          validateElement(item);\n          break;\n        case 'selectbox':\n          __passed = $(item.element).validateSelectBox();\n          validateElement(item);\n          break;\n        case 'password':\n          __passed = $.validatePassword(item.element, item.element2, item.min);\n          __errors.push({\n            element: item.element,\n            element2: item.element2,\n            type: item.type\n          });\n          if (__passed) {\n            validateElement(item);\n          }\n          break;\n        case 'switch':\n          __passed = $(item.element).validateSwitch();\n          if (__passed) {\n            validateElement(item);\n          }\n          break;\n        case 'selectlist':\n          __passed = $(item.element).validateSelectList();\n          if (__passed) {\n            inputs;\n            inputs = $(item.element).find('input').forEach(function(item) {\n              if (item.checked) {\n                convertToObject(item.name, item.value)\n              }\n            })\n            \n          }\n          break;\n        case 'multiselectlist':\n          __passed = $(item.element).validateMultiSelectList();\n          inputs;\n          if (__passed) {\n            inputs = $(item.element).find('input[type=checkbox]');\n            inputs.forEach(item => {\n              if (item.checked) {\n                convertToObject(item.name, item.value);\n              }\n            });\n          }\n          break;\n      }\n      if (item.type.match(/custom/)) { \n        const cv = $.customValidators.filter(validator => {\n          return (validator.name) === item.type;\n        });\n        if (cv) {\n          const result = $.validateWithRegex(item.element, cv[0].regex);\n          if (result) {\n            const el = $(item.element);\n            convertToObject(el[0].name, el[0].value);\n          } else {\n            __errors.push({\n              element: item.element,\n              type: item.type\n            });\n            if (item.callback) item.callback();\n          }\n        }\n      }\n    });\n\n\n\n    return {\n      getErrors() {\n        if (__errors.length) {\n          return __errors;\n        }\n      },\n\n      errors() {\n        if (__errors.length) {\n          return true;\n        }\n      },\n\n      get() {\n        return convertObjectToJSON(__result);\n      }\n    };\n  }\n});\n\n/**\n * ChocolateChip-UI  - Data Formatters.\n */\n\n$.extend({\n  /**\n   * Format Numbers for Thousands:\n   */\n  formatNumber(amount, separator, decimal) {\n    const sep = separator || \",\";\n    /** \n     * Allow the user to round a float to a whole number: \n     */\n    if (decimal === 0) {\n      const num = Math.round(amount);\n      return Number(num).toString().replace(/(?=(?:\\d{3})+$)(?!^)/g, sep);\n    }\n    if (decimal === undefined) {\n      /** \n       * Check if amount is a float: \n       */\n      if (typeof amount === 'number' && amount % 1 !== 0) {\n        return Number(amount).toString().replace(/\\d(?=(\\d{3})+\\.)/g, '$&' + sep);\n        /** \n         * Otherwise treat it as an integer: \n         */\n      } else {\n        return Number(amount).toString().replace(/(?=(?:\\d{3})+$)(?!^)/g, sep);\n      }\n      /** \n       * If a decimal value was provided, format it to that amount: \n       */\n    } else {\n      return Number(amount).toFixed(decimal).replace(/\\d(?=(\\d{3})+\\.)/g, '$&' + sep);\n    }\n  },\n\n  /**\n   * Return sum of numbers:\n   */\n  sum(arr) {\n    let ret;\n    if (Array.isArray(arr) && arr.length) {\n      ret = arr;\n    } else {\n      ret = [].slice.apply(arguments);\n    }\n    return ret.reduce(function(a, b) {\n      return a + b;\n    });\n  },\n\n  /**\n   * Format currency:\n   */\n  currency(amount, symbol, separator, decimal) {\n    const sym = symbol || \"$\";\n    const sep = separator || \",\";\n    const dec = decimal || 2;\n    let zero = false;\n    if (decimal === 0) {\n      zero = true;\n    }\n    /* Private function to format amounts: */\n    const formatNumber = function(amount, sep) {\n      /**\n       * A decimal value of '0' means we need to round the amount off before adding in thousands separators:\n       */\n      if (zero) {\n        const num = Math.round(amount);\n        return Number(num).toString().replace(/^0+/, '').replace(/(?=(?:\\d{3})+$)(?!^)/g, sep);\n      } else {\n        /**\n         * Otherwise, we can just add the thousands separators with the decimal placement provided by the user or the default:\n         */\n        return Number(amount).toFixed(dec).replace(/^0+/, '').replace(/\\d(?=(\\d{3})+\\.)/g, '$&' + sep);\n      }\n    };\n    return sym + formatNumber(amount, sep);\n  },\n\n  /**\n   * Format Time:\n   */\n  formatTime(time) {\n    const temp = time.split(':');\n    const temp2 = temp[0] + ':' + temp[1];\n    const ampm = time.split(' ')[1];\n    return temp2 + ' ' + ampm;\n  },\n\n  sortDate(date1, date2) {\n    return new Date(date1) - new Date(date2);\n  },\n\n  /**\n   * Sort Numbers:\n   */\n  sortNumbers(a, b) {\n    return a - b;\n  },\n\n  sortNumbersDescending(a, b) {\n    return b - a;\n  }\n});\n\n/**\n * ChocolateChip-UI - View Factory.\n */\n(() => {\n  const ViewErrorMessages = {\n    en: {\n      noDataForViewRender: \"ChocolateChip-UI View Error: No data was provided for the view to render. If you want to render the view, please provide data, or redefine the view with a data source or model. Otherwise rendering will be skipped.\",\n      noElementForView: \"ChocolateChip-UI View Error: No element was provided for the view. Please provide an element in the view initialization so that we can access it.\",\n      noTemplateForView: \"ChocolateChip-UI View Error: No template was provided for this view. This means that you did not provide a template in the view initialization, or the element did not have any template in its markup.\",\n      viewElementHasNoTemplate: \"ChocolateChip-UI View Error: The element for this view has no template in its markup. Either correct the element by defining a template in the element's markup, or define a template in the view's initialization.\",\n      noElementToSetToTemplate: \"ChocolateChip-UI View Error: No element was provided to set to this view. Please provide one.\",\n      noTemplateToSetToView: \"ChocolateChip-UI View Error: You did not provide a template to set to this view. Please provide one.\",\n      noEventsToAdd: \"ChocolateChip-UI View Error: No event was provided to attach fo the view. Please provide an event to procede.\",\n      noDataToSetForView: \"ChocolateChip-UI View Error: No data was provided to set for the view. Please provide some data.\",\n      noModelToBindToView: \"ChocolateChip-UI View Error: No model was provided to bind the view to. Please provide a valid model to complete this operation.\",\n      viewHasNoModel: \"ChocolateChip-UI View Error: Could not get this view's model because it is not bound to one. You can use `bindModel()` to bind a model to this view.\",\n      viewHasNoData: \"ChocolateChip-UI View Error: This view has no data. Did you render it with data, or did you bind it to a model? Try using `getModel()` to see if this view is using a model.\",\n      viewHasNoTemplate: \"ChocolateChip-UI View Error: This view has no template. Either you created it without a template, or there was some problem parsing the template. Please check how this view is set up.\",\n      noStyleObject: \"ChocolateChip-UI View Error: No style object was provided for the view style property. Check that a proper style object was provided. If you are not sure,  consult the documentation.\"\n    },\n    es: {\n      noDataForViewRender: \"Hubo Error de Vista ChocolateChip-UI: : No se proporcionó datos para que la vista los utilice. Si desea renderizar la vista, proporcione datos o redefinir la vista con un valor para sus datos o un modelo de datos. De lo contrario, la vista no se renderizará.\",\n      noElementForView: \"Hubo Error de Vista ChocolateChip-UI: : No se proporcionó ningún elemento para la vista. Por favor proporcione un elemento en la inicialización de la vista para que podamos acceder a él.\",\n      noTemplateForView: \"Hubo Error de Vista ChocolateChip-UI: : No se proporcionó ninguna plantilla para esta vista. Esto significa que usted no proporcionó una plantilla en la vista de inicialización, o el elemento no tiene ninguna plantilla en su marcado.\",\n      viewElementHasNoTemplate: \"Hubo Error de Vista ChocolateChip-UI: : El elemento de esta vista no tiene ninguna plantilla en su marcado. O bien corrija el elemento por definir una plantilla en el marcado del elemento, o defina una plantilla en la inicialización de la vista misma.\",\n      noElementToSetToTemplate: \"Hubo Error de Vista ChocolateChip-UI: : No se proporcionó ningún elemento en el cual se renderizará la pantilla. Por favor proporcione un elemento.\",\n      noTemplateToSetToView: \"Hubo Error de Vista ChocolateChip-UI: No se proporcionó una plantilla para esta vista. Por favor proporcione una plantilla.\",\n      noEventsToAdd: \"Hubo Error de Vista ChocolateChip-UI: No se proporcionó ningún event para unir a la vista. Por favor, proporcione un evento para proceder.\",\n      noDataToSetForView: \"Hubo Error de Vista ChocolateChip-UI: No se proporcionó datos para la vista. Por favor proporcione algunos datos.\",\n      noModelToBindToView: \"Hubo Error de Vista ChocolateChip-UI: No se proporcionó un modelo para establecer un enlace entre él y la vista. Por favor proporcione un modelo válido para completar esta operación.\",\n      viewHasNoModel: \"Hubo Error de Vista ChocolateChip-UI: No pudimos acceder al modelo de esta vista porque no está asociada con uno. Puede realizar esto usando `bindModel()`.\",\n      viewHasNoData: \"Hubo Error de Vista ChocolateChip-UI: Esta vista no tiene datos. A caso no se renderizó con datos o no se asoció con ningún modelo. Trate de executar `getModel()` para averiguar si esta vista está usando un modelo.\",\n      viewHasNoTemplate: \"Hubo Error de Vista ChocolateChip-UI: Esta vista no tiene plantilla. Ó se creó la vista sin plantilla, ó hubo algún error al procesar la plantilla. Debe chequear cómo se definó la vista.\",\n      noStyleObject: \"Hubo Error de Vista ChocolateChip-UI: No se proporcionó un objeto de estilos para la propiedad de estilos de la vista. Debe de chequear que el objeto de estilos está correcto. Si Usted no está serguro de eso, consulte la documentación.\"\n\n    }\n  }\n\n  let errors;\n  if ($('html').attr('lang') == 'en') errors = ViewErrorMessages.en;\n  if ($('html').attr('lang') == 'es') errors = ViewErrorMessages.es;\n\n  /**\n   * Private function to parse style object in view and convert it into virtual stylesheet based on the view's element.\n   */\n  function ChuiStyle() {\n\n    /**\n     * Reuse the same style sheet for all instances.\n     */\n    let sharedSheet = null;\n\n    /**\n     * Properties that accept a number but do not need a unit.\n     */\n    const unitlessProps = {\n      columnCount: true,\n      fillOpacity: true,\n      flex: true,\n      flexGrow: true,\n      flexShrink: true,\n      fontWeight: true,\n      lineClamp: true,\n      lineHeight: true,\n      opacity: true,\n      order: true,\n      orphans: true,\n      widows: true,\n      zIndex: true,\n      zoom: true\n    };\n\n    /**\n     * If auto units is enabled, any property value that is a number will be converted to a string with the specified unit appended.\n     */\n    function CreateStyleSheet(options) {\n      if (!(this instanceof CreateStyleSheet)) {\n        return new CreateStyleSheet(options);\n      }\n      options || (options = {});\n      options.prefix = !options.hasOwnProperty(\"prefix\") ? true : !!options.prefix;\n      options.unit = options.hasOwnProperty(\"unit\") ? options.unit : \"px\";\n\n      this._sheet = null;\n      this._prefix = null;\n\n      /**\n       * Insert one or more style objects in a stylesheet.\n       */\n      this.css = function (element, styles, selector) {\n        if (styles == null) return \"\";\n        if (this._sheet == null) {\n          this._sheet = sharedSheet = (sharedSheet || createStyleSheet());\n        }\n        selector = element;\n\n        const rules = rulesFromStyles(selector, styles);\n        if (options.prefix || options.unit !== \"\") {\n          rules.forEach(function(set) {\n            if (options.unit !== \"\") {\n              addUnit(set[1], options.unit);\n            }\n          });\n        }\n        insertRules(rules, this._sheet);\n      };\n\n    }\n\n    /**\n     * Returns {CSSStyleSheet}\n     */\n    function createStyleSheet() {\n      if (document.head == null) {\n        throw new Error(\"Can't add stylesheet before <head> is available. Make sure your document has a head element.\");\n      }\n      const style = document.createElement(\"style\");\n      style.id = \"chui_styles_\" + $.uuid();\n      document.head.appendChild(style);\n      return style.sheet;\n    }\n\n    /**\n     * Returns CSS rule sets as selector/style vectors.\n     */\n    function rulesFromStyles(selector, styles) {\n      if (!Array.isArray(styles)) styles = [styles];\n      const style = {};\n      let rules = [];\n      styles = $.flatten(styles);\n      styles.forEach(function(block) {\n        for (const prop in block) {\n          let value = block[prop];\n          if (isPlainObject(value) || Array.isArray(value)) {\n            rules = rules.concat(\n              rulesFromStyles(combineSelectors(selector, prop), value)\n            );\n          } else {\n            if (prop === \"content\") value = \"'\"+value+\"'\";\n            style[prop] = value;\n          }\n        }\n      });\n      rules.push([ selector, style ]);\n      return rules;\n    }\n\n    /**\n     * Add rule sets to stylesheet.\n     */\n    function insertRules(rules, sheet) {\n      function hyphenate(str) {\n        return str.replace(/[A-Z]/g, function($0) { return '-'+$0.toLowerCase(); });\n      }\n      rules.forEach(function(rule) {\n        const pairs = [];\n        for (const prop in rule[1]) {\n          pairs.push(hyphenate(prop) + \":\" + rule[1][prop]);\n        }\n        if (pairs.length > 0) {\n          sheet.insertRule(rule[0] + \"{\" + pairs.join(\";\") + \"}\", 0);\n        }\n      });\n    }\n\n    /**\n     * Pseudo classes/elements and attribute selectors should immediately follow the previous selector, others should be space separated.\n     */\n    function combineSelectors(parent, child) {\n      const pseudoRe = /^[:\\[]/;\n      const parents = parent.split(\",\"), children = child.split(\",\");\n      return parents.map(function(parent) {\n        return children.map(function(part) {\n          let separator = pseudoRe.test(part) ? \"\" : \" \";\n          return parent + separator + part;\n        }).join(\",\");\n      }).join(\",\");\n    }\n\n    /**\n     * Add unit to numeric values not in |unitlessProps|.\n     */\n    function addUnit(style, unit) {\n      for (const prop in style) {\n        let value = style[prop] + \"\";\n        if (!isNaN(value) && !unitlessProps[prop]) {\n          value = value + unit;\n        }\n        style[prop] = value;\n      }\n      return style;\n    }\n\n    function isPlainObject(obj) {\n      return obj === Object(obj) && Object.prototype.toString === obj.toString;\n    }\n\n    const stylesheets = {};\n    stylesheets.css = CreateStyleSheet().css;\n    return stylesheets;\n  }\n\n  $.extend({\n\n    /* jshint, evil: false, validthis:true, unused:false, smarttabs: true, nonew false */\n    view: {\n      index: 0\n    },\n\n    helpers: {},\n\n    defineHelper: callback => {\n      $.extend($.helpers, callback);\n    },\n\n    View: options => {\n      /**\n      options = {\n        element: undefined,\n        template: stringTemplate,\n        model: undefined,\n        variable: 'whatever',\n        events: [\n          {\n            element: selector || 'self',\n            event: 'click',\n            callback: function() {}\n          },\n          {\n            element: selector2 || 'self',\n            event: 'touchstart',\n            callback: function() {}\n          }\n        ]\n      }\n      */\n\n      /**\n       * Private Properties:\n       */\n      let __element;\n      let __origElement;\n      if (!options) options = {};\n      if (options && options.element) {\n        __origElement = options.element;\n        __element = $(options.element);\n      }\n      let __template = options.template;\n      let __data = options.data;\n      let __model = options.model;\n      let __rendered = false;\n      let __variable = options.variable || 'data';\n      let __events = options.events || [];\n      let __startIndexFrom = options.startIndexFrom || false;\n      if (options.startIndexFrom === 0) __startIndexFrom = 0;\n      const __re = /data-src/img;\n      let __safeHTML = options.safeHTML || false;\n      let __es6Template = options.es6Template || false;\n      let __noTemplate = options.noTemplate || false;\n      const __id = $.uuid();\n      let __styles = options.styles;\n\n      /**\n       * Private Functions:\n       */\n\n      let parsedTemplate;\n\n      const parseView = (template, variable) => {\n        if (!template) {\n          console.error(errors.viewElementHasNoTemplate)\n          return;\n        }\n        const interpolate = /\\{=([\\s\\S]+?)\\}/img;\n        variable = variable || 'data';\n        template.replace(\"'\", \"\\'\");\n        /* jshint ignore:start */\n        const Template = new Function(variable,\n          \"var p=[];\" + \"p.push('\" + template\n          .replace(/[\\r\\t\\n]/g, \" \")\n          .split(\"'\").join(\"\\\\'\")\n          .replace(interpolate, \"',$1,'\")\n          /**\n           * Executable:\n           */\n          .split('{{').join(\"');\")\n          .split('}}').join(\"p.push('\") + \"');\" +\n          \"return p.join('');\");\n        return Template;\n        /* jshint ignore:end */\n      };\n\n      /**\n       * Binding any events provided in View options:\n       */\n      const handleEvents = () => {\n        if (!__element) return;\n        if (__events.length) {\n          __events.forEach(item => {\n            const bubble = item.bubble || false;\n            if (item && item.element === 'self' || item && !item.element) {\n              __element.on(item.event, item.callback, bubble);\n            } else {\n              __element.on(item.event, item.element, item.callback, bubble);\n            }\n          });\n        }\n      };\n\n      /**\n       * Get template from element:\n       */\n      const extractTemplate = () => {\n        if (!__element || !__element.size() || __noTemplate) {\n          return;\n        }\n        if (__es6Template) return;\n        if (!__template) {\n          if (__element.children()[0] && __element.children().eq(0).is('script')) {\n            __template = __element.children('script').html();\n            __element.empty();\n          } else if (__element.children()[0] && __element.children().eq(0).is('template')) {\n            __template = __element.children('template').html();\n            __element.empty();\n          } else if (!__element[0].childNodes.length) {\n            console.error(errors.viewElementHasNoTemplate)\n            return;\n          } else {\n            if (__element[0] && __element[0].childNodes.length) {\n              if (!__template) __template = __element.html();\n            }\n            __element.empty();\n          }\n          if (__template) __template = __template.replace(__re, 'src');\n\n          parseView(__template, __variable);\n        } else {\n          __template = __template.replace(__re, 'src');\n          parseView(__template, __variable);\n        }\n        if (__styles && options.element) {\n          if (!$(options.element)[0]) return;\n          const styles = ChuiStyle();\n          if ($.type(__styles) !== 'object') {\n            if ($.supressErrorMessages) return;\n            console.error(errors.noStyleObject)\n            return;\n          }\n          styles.css(options.element, __styles)\n        }\n      };\n      parsedTemplate = extractTemplate();\n\n      if (__events) {\n        handleEvents(__events);\n      }\n\n      /**\n       * Return closure to encapsulate methods & data:\n       */\n      const view = {};\n\n      const bindToModel = (model, view) => {\n        if (model) {\n          model.boundViews.push(view);\n        }\n      }\n\n      bindToModel(__model, view);\n\n      $.extend(view, {\n\n        id: __id,\n\n        render(data, append) {\n          if (!__element) {\n            if ($.supressErrorMessages) return;\n            console.error(errors.noElementForView)\n            return ;\n          }\n          function escapeNumber(arg) {\n            if ($.type(arg) === 'number') {\n              return String(arg);\n            } else {\n              return arg;\n            }\n          }\n          window.escapeNumber = escapeNumber;\n          data = escapeNumber(data);\n          __data = escapeNumber(__data);\n          if (!data && !__data && !__model) {\n            if ($.supressErrorMessages) return;\n            console.error(errors.noDataForViewRender);\n            return;\n          }\n          if (!data && __data) {\n            data = __data;\n          } else if (!data && __model) {\n            data = __model.get();\n          }\n\n          /**\n           * Check extracted template:\n           */\n          if (__template && $.type(__template) === 'string') {\n            parsedTemplate = parseView(__template, __variable);\n          }\n\n          /**\n           * If the user supplied data to render:\n           * If it's an array:\n           */\n          if ($.type(data) === 'array') {\n            $.view.index = __startIndexFrom || 1;\n            if (__startIndexFrom === 0) $.view.index = 0;\n            if (!append) __element.empty();\n            data.forEach(item => {\n              if (!__safeHTML) {\n                item = $.escapeHTML(item);\n              }\n              if (!parsedTemplate && !__noTemplate) {\n                if ($.supressErrorMessages) return;\n                console.error(errors.viewElementHasNoTemplate)\n                return;\n              }\n              __element.append(parsedTemplate(item)); // jshint ignore:line\n              $.view.index += 1;\n            });\n            __rendered = true;\n            $.view.index = 0;\n            __element.removeClass('cloak');\n            return;\n\n            /**\n             * Else if it is an object:\n             */\n          } else if ($.type(data) === 'object' || $.type(data) === 'string' || $.type(data) === 'number') {\n            if (!parsedTemplate) {\n              if ($.supressErrorMessages) return;\n              console.error(errors.viewElementHasNoTemplate)\n              return;\n            }\n            $.view.index = __startIndexFrom || 1;\n            if (!append) __element.empty();\n            if (!__safeHTML) {\n              data = $.escapeHTML(data);\n            }\n            __element.append(parsedTemplate(data)); // jshint ignore:line\n            __element.removeClass('cloak');\n            __rendered = true;\n            return;\n          }\n        },\n\n        empty() {\n          if (!__element) {\n            if ($.supressErrorMessages) return;\n            console.error(errors.noElementForView)\n            return;\n          }\n          __element.empty();\n        },\n\n        resetIndex() {\n          if (!__element) {\n            if ($.supressErrorMessages) return;\n            console.error(errors.noElementForView)\n            return;\n          }\n          __element.data('index', 0);\n          $.view.index = 0;\n        },\n\n        startIndexFrom(number) {\n          if (!__element) {\n            if ($.supressErrorMessages) return;\n            console.error(errors.noElementForView)\n            return;\n          }\n          if (number === 0 || (number && !isNaN(number))) {\n            __startIndexFrom = number;\n            $.view.index = number;\n            view.render();\n          }\n        },\n\n        getElement() {\n          if (!__element) {\n            if ($.supressErrorMessages) return;\n            console.error(errors.noElementForView)\n            return;\n          } else {\n            return __element;\n          }\n        },\n\n        setElement(element) {\n          if (!element) {\n            if ($.supressErrorMessages) return;\n            console.error(errors.noElementForView)\n            return;\n          }\n          __element = $(element);\n          $(element).empty();\n          handleEvents();\n          const styles = ChuiStyle();\n          styles.css(element, __styles)\n        },\n\n        getTemplate() {\n          if (!__template) {\n            if ($.supressErrorMessages) return;\n            console.error(errors.viewHasNoTemplate)\n            return;\n          } else {\n            return __template;\n          }\n        },\n\n        setTemplate(template) {\n          if (!template) {\n            if ($.supressErrorMessages) return;\n            console.error(errors.noTemplateToSetToView)\n            return;\n          } else {\n            __template = template.replace(__re, 'src');\n            parsedTemplate = parseView(__template);\n          }\n        },\n\n        bindModel(model) {\n          if (!model) {\n            if ($.supressErrorMessages) return;\n            console.error(errors.noModelToBindToView);\n            return;\n          }\n          this.unbindModel(__model);\n          __model = model;\n          if (__data) __data = undefined;\n          bindToModel(__model, view);\n        },\n\n        unbindModel() {\n          if (__model) {\n            const pos = __model.boundViews.findIndex(function(view) {\n              return view.id = __id;\n            })\n            __model.boundViews.splice(pos,1);\n          }\n          __model = undefined;\n        },\n\n        getModel() {\n          if (__model) {\n            return __model\n          } else {\n            if ($.supressErrorMessages) return;\n            console.error(errors.viewHasNoModel)\n          }\n        },\n\n        isRendered() {\n          return __rendered;\n        },\n\n        isEmpty() {\n          if (!__element) {\n            if ($.supressErrorMessages) return;\n            console.error(errors.noElementForView)\n            return;\n          }\n          if (__element[0].children.length) {\n            return false;\n          } else {\n            return true;\n          }\n        },\n\n        addEvent(events, replace) {\n          if (!events) {\n            if ($.supressErrorMessages) return;\n            console.error(errors.noEventsToAdd);\n            return;\n          }\n          if (replace) {\n            __events = events & events.length ? events : [events];\n          } else {\n            if (events && events.length) {\n              events.forEach(event => {\n                __events.push(event)\n              });\n            } else if (events) {\n              __events.push(events);\n            }\n          }\n          handleEvents();\n        },\n\n        /**\n         * options: event, element (for a delegated event), callback\n         */\n        off(event, element, callback) {\n          __element.off(event, element, callback);\n        },\n\n        safeHTML(boolean) {\n          if (boolean) {\n            __safeHTML = true;\n          } else {\n            __safeHTML = false;\n          }\n        },\n\n        isEscapingHTML() {\n          return !__safeHTML;\n        },\n\n        getData() {\n          if (__data) {\n            return __data\n          } else {\n            if ($.supressErrorMessages) return;\n            console.error(errors.viewHasNoData);\n            return;\n          }\n        },\n\n        setData(data) {\n          if (!data) {\n            if ($.supressErrorMessages) return;\n            console.error(errors.noDataToSetForView);\n            return;\n          }\n          if (data) {\n            if (__model) __model = undefined;\n            __data = data;\n          }\n        },\n\n        /**\n         * This method is for use after importing a view as an ES6 module. It resets the view's element since this cannot be determined at the time of import.\n         */\n        mount() {\n          __element = $(__origElement);\n          handleEvents();\n          const styles = ChuiStyle();\n          styles.css(options.element, __styles)\n        }\n\n      });\n      return view;\n    }\n  });\n})();\n\n\n/**\n * ChocolateChip-UI - Component Factory.\n */\n$.extend({\n  Component: options => {\n    const comp = $.Component;\n    $[options.name] = () => {\n      comp.options = options;\n      delete comp.options.name\n      return $.View(comp.options);\n    };\n  }\n});\n\n/**\n * Promise Polyfill.\n */\n(function() {\n  /**\n   * Define polyfill for ES6 Promises: \n   */\n\n  let extend;\n  let cycle;\n  let queue;\n  extend = function(obj, name, val, config) {\n    return Object.defineProperty(obj, name, {\n      value: val,\n      writable: true,\n      configurable: config !== false\n    });\n  };\n  queue = (function() {\n    let first;\n    let last;\n    let item;\n    function Item(func, self) {\n      this.func = func;\n      this.self = self;\n      this.next;\n    }\n    return {\n      add(func, self) {\n        item = new Item(func, self);\n        if (last) {\n          last.next = item;\n        } else {\n          first = item;\n        }\n        last = item;\n        item = undefined;\n      },\n      unshift() {\n        let f = first;\n        first = last = cycle = undefined;\n        while (f) {\n          f.func.call(f.self);\n          f = f.next;\n        }\n      }\n    };\n  })();\n  function schedule(func, self) {\n    queue.add(func, self);\n    if (!cycle) {\n      cycle = setTimeout(queue.unshift);\n    }\n  }\n  /**\n   * Check that Promise is thenable: \n   */\n  function isThenable(obj) {\n    let _then;\n    let obj_type = typeof obj;\n    if (obj !== null &&\n      (obj_type === \"object\" || obj_type === \"function\")) {\n      _then = obj.then;\n    }\n    return typeof _then === \"function\" ? _then : false;\n  }\n  function notify() {\n    for (let i = 0; i < this.chain.length; i++) {\n      notifyIsolated(this, (this.state === 1) ? this.chain[i].success : this.chain[i].failure, this.chain[i]);\n    }\n    this.chain.length = 0;\n  }\n  function notifyIsolated(self, callback, chain) {\n    let ret;\n    let _then;\n    try {\n      if (callback === false) {\n        chain.reject(self.msg);\n      } else {\n        if (callback === true) {\n          ret = self.msg;\n        } else {\n          ret = callback.call(undefined, self.msg);\n        }\n        if (ret === chain.promise) {\n          chain.reject(new TypeError(\"Promise-chain cycle\"));\n        } else if (_then = isThenable(ret)) { // jshint ignore:line\n          _then.call(ret, chain.resolve, chain.reject);\n        } else {\n          chain.resolve(ret);\n        }\n      }\n    } catch (err) {\n      chain.reject(err);\n    }\n  }\n  function resolve(msg) {\n    let _then;\n    let deferred;\n    let self = this;\n    if (self.triggered) {\n      return;\n    }\n    self.triggered = true;\n    if (self.deferred) {\n      self = self.deferred;\n    }\n    try {\n      if (_then = isThenable(msg)) {  // jshint ignore:line\n        schedule(function() {\n          const deferred_wrapper = new MakeDeferred(self);\n          try {\n            _then.call(msg, function() { resolve.apply(deferred_wrapper, arguments); }, function() { reject.apply(deferred_wrapper, arguments); });\n          } catch (err) {\n            reject.call(deferred_wrapper, err);\n          }\n        });\n      } else {\n        self.msg = msg;\n        self.state = 1;\n        if (self.chain.length > 0) {\n          schedule(notify, self);\n        }\n      }\n    } catch (err) {\n      reject.call(new MakeDeferred(self), err);\n    }\n  }\n  function reject(msg) {\n    let self = this;\n    if (self.triggered) {\n      return;\n    }\n    self.triggered = true;\n    if (self.deferred) {\n      self = self.deferred;\n    }\n    self.msg = msg;\n    self.state = 2;\n    if (self.chain.length > 0) {\n      schedule(notify, self);\n    }\n  }\n  function iteratePromises(Constructor, arr, resolver, rejecter) {\n    for (let idx = 0; idx < arr.length; idx++) {\n      (function IIFE(idx) {\n        Constructor.resolve(arr[idx])\n          .then(function(msg) {\n          resolver(idx, msg);\n        }, rejecter);\n      })(idx);\n    }\n  }\n  function MakeDeferred(self) {\n    this.deferred = self;\n    this.triggered = false;\n  }\n  function Deferred(self) {\n    this.promise = self;\n    this.state = 0;\n    this.triggered = false;\n    this.chain = [];\n    this.msg;\n  }\n  function Promise(executor) {\n    if (typeof executor !== \"function\") {\n      throw new TypeError(\"Not a function\");\n    }\n    if (this.isValidPromise !== 0) {\n      throw new TypeError(\"Not a promise\");\n    }\n    /**\n     * Indicate the Promise is initialized:\n     */\n    this.isValidPromise = 1;\n    let deferred = new Deferred(this);\n    this.then = function(success, failure) {\n      let obj = {\n        success: typeof success === \"function\" ? success : true,\n        failure: typeof failure === \"function\" ? failure : false\n      };\n      /**\n       * `.then()` can be used against a different promise constructor for making a chained promise. \n       */\n      obj.promise = new this.constructor(function extractChain(resolve, reject) {\n        if (typeof resolve !== \"function\" || typeof reject !== \"function\") {\n          throw new TypeError(\"Not a function\");\n        }\n        obj.resolve = resolve;\n        obj.reject = reject;\n      });\n      deferred.chain.push(obj);\n      if (deferred.state !== 0) {\n        schedule(notify, deferred);\n      }\n      return obj.promise;\n    };\n    this.catch = function(failure) {\n      return this.then(undefined, failure);\n    };\n    try {\n      executor.call(undefined, function(msg) {\n        resolve.call(deferred, msg);\n      }, function(msg) {\n        reject.call(deferred, msg);\n      });\n    } catch (err) {\n      reject.call(deferred, err);\n    }\n  }\n  const PromisePrototype = extend({}, \"constructor\", Promise, false);\n  extend(Promise, \"prototype\", PromisePrototype, false);\n\n  /**\n   * Check if Promise is initialized: \n   */\n  extend(PromisePrototype, \"isValidPromise\", 0, false);\n  extend(Promise, \"resolve\", function(msg) {\n    const Constructor = this;\n\n    /**\n     * Make sure it is a valide Promise: \n     */\n    if (msg && typeof msg === \"object\" && msg.isValidPromise === 1) {\n      return msg;\n    }\n    return new Constructor(function executor(resolve, reject) {\n      if (typeof resolve !== \"function\" || typeof reject !== \"function\") {\n        throw new TypeError(\"Not a function\");\n      }\n      resolve(msg);\n    });\n  });\n  extend(Promise, \"reject\", function(msg) {\n    return new this(function executor(resolve, reject) {\n      if (typeof resolve !== \"function\" || typeof reject !== \"function\") {\n        throw new TypeError(\"Not a function\");\n      }\n      reject(msg);\n    });\n  });\n  extend(Promise, \"all\", function(arr) {\n    const Constructor = this;\n\n    /**\n     * Make sure argument is an array: \n     */\n    if (Object.prototype.toString.call(arr) !== \"[object Array]\") {\n      return Constructor.reject(new TypeError(\"Not an array\"));\n    }\n    if (arr.length === 0) {\n      return Constructor.resolve([]);\n    }\n    return new Constructor(function executor(resolve, reject) {\n      if (typeof resolve !== \"function\" || typeof reject !== \"function\") {\n        throw new TypeError(\"Not a function\");\n      }\n      const len = arr.length;\n      let msgs = new Array(len);\n      let count = 0;\n      iteratePromises(Constructor, arr, function resolver(idx, msg) {\n        msgs[idx] = msg;\n        if (++count === len) {\n          resolve(msgs);\n        }\n      }, reject);\n    });\n  });\n  extend(Promise, \"race\", function(arr) {\n    const Constructor = this;\n\n    /**\n     * Make sure argument is an array: \n     */\n    if (Object.prototype.toString.call(arr) !== \"[object Array]\") {\n      return Constructor.reject(new TypeError(\"Not an array\"));\n    }\n    return new Constructor(function executor(resolve, reject) {\n      if (typeof resolve !== \"function\" || typeof reject !== \"function\") {\n        throw new TypeError(\"Not a function\");\n      }\n      iteratePromises(Constructor, arr, function resolver(idx, msg) {\n        resolve(msg);\n      }, reject);\n    });\n  });\n\n  /**\n   * If native Promise exists in window, do not use this. \n   */\n  if (\"Promise\" in window && \"resolve\" in window.Promise && \"reject\" in window.Promise && \"all\" in window.Promise && \"race\" in window.Promise) {\n    return;\n  } else {\n\n    /**\n     * Otherwise do use this: \n     */\n    return window.Promise = Promise;\n  }\n})();\n\n/**\n * Fetch polyfill\n */\n(function() {\n\n  /**\n   *\n   * JSONP with API like fetch.\n   */\n  $.extend({\n    /* Container for jsonp methods: */\n    JSONPCallbacks: [],\n    /* JSONP method: */\n    jsonp: function(url, opts) {\n      var settings = {\n        timeout: 2000,\n        callbackName: 'callback',\n        clear: true\n      };\n      if (opts) {\n        $.extend(settings, opts);\n      }\n      /** \n       * Method to create callback: \n       */\n      function generateCallbackName() {\n        const callbackName = settings.callbackName + '_' + ($.JSONPCallbacks.length + 1);\n        $.JSONPCallbacks.push(callbackName);\n        return callbackName;\n      }\n      const callbackName = generateCallbackName();\n      /** \n       * Create and return Promise with result from request: \n       */\n      return new Promise(function(resolve, reject) {\n        let timeout;\n        window.jsonp = window.jsonp || {};\n        window.jsonp[callbackName] = function(response) {\n          resolve({\n            ok: true,\n            json: function() {\n              return Promise.resolve(response);\n            }\n          });\n          if (timeout) {\n            clearTimeout(timeout);\n          }\n        };\n        /** \n         * Create script tag: \n         */\n        const script = document.createElement('script');\n        script.async = true;\n        script.defer = true;\n        script.src = url + (url.indexOf('?') > -1 ? '&' : '?') + 'callback=jsonp.' + callbackName;\n        document.body.appendChild(script);\n        /** \n         * Delete script tag: \n         */\n        setTimeout(function() {\n          script.parentNode.removeChild(script);\n        });\n        /** \n         * Clear JSONP methods from window: \n         */\n        if (settings.clear) {\n          const pos = $.JSONPCallbacks.indexOf(callbackName);\n          $.JSONPCallbacks.splice(pos, 1);\n        }\n        /** \n         * Handle timeout: \n         */\n        timeout = setTimeout(function() {\n          reject(new Error('JSONP request to ' + url + ' timed out'));\n        }, settings.timeout);\n      });\n    },\n    /**\n     * Helper function for fetch Promises.\n     * Returns the respons as parsed JSON.\n     * Usage: .then($.json)\n     */\n    json: function(response) {\n      return response.json();\n    }\n  });\n  if (window && window.fetch) {\n    return;\n  }\n  const self = window;\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name');\n    }\n    return name.toLowerCase();\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value;\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    let list = this.map[name];\n    if (!list) {\n      list = [];\n      this.map[name] = list;\n    }\n    list.push(value);\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    const values = this.map[normalizeName(name)];\n    return values ? values[0] : null;\n  };\n\n  Headers.prototype.getAll = function(name) {\n    return this.map[normalizeName(name)] || [];\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name));\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = [normalizeValue(value)];\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    Object.getOwnPropertyNames(this.map).forEach(function(name) {\n      this.map[name].forEach(function(value) {\n        callback.call(thisArg, value, name, this);\n      }, this);\n    }, this);\n  };\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'));\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    });\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    const reader = new FileReader();\n    reader.readAsArrayBuffer(blob);\n    return fileReaderReady(reader);\n  }\n\n  function readBlobAsText(blob) {\n    const reader = new FileReader();\n    reader.readAsText(blob);\n    return fileReaderReady(reader);\n  }\n\n  const support = {\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob();\n        return true;\n      } catch(e) {\n        return false;\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function Body() {\n    this.bodyUsed = false;\n\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (!body) {\n        this._bodyText = '';\n      } else if (support.arrayBuffer && ArrayBuffer.prototype.isPrototypeOf(body)) {\n        /** \n         * Only support ArrayBuffers for POST method.\n         * Receiving ArrayBuffers happens via Blobs, instead.\n         */\n      } else {\n        throw new Error('unsupported BodyInit type');\n      }\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        const rejected = consumed(this);\n        if (rejected) {\n          return rejected;\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob);\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob');\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]));\n        }\n      };\n\n      this.arrayBuffer = function() {\n        return this.blob().then(readBlobAsArrayBuffer);\n      };\n\n      this.text = function() {\n        const rejected = consumed(this);\n        if (rejected) {\n          return rejected;\n        }\n\n        if (this._bodyBlob) {\n          return readBlobAsText(this._bodyBlob);\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as text');\n        } else {\n          return Promise.resolve(this._bodyText);\n        }\n      };\n    } else {\n      this.text = function() {\n        const rejected = consumed(this);\n        return rejected ? rejected : Promise.resolve(this._bodyText);\n      };\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode);\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse);\n    };\n\n    return this;\n  }\n\n  /** \n   * HTTP methods whose capitalization should be normalized. \n   */\n  const methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    const upcased = method.toUpperCase();\n    return (methods.indexOf(upcased) > -1) ? upcased : method;\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    let body = options.body;\n    if (Request.prototype.isPrototypeOf(input)) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read');\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      if (!body) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = input;\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests');\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this);\n  };\n\n  function decode(body) {\n    const form = new FormData();\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        const split = bytes.split('=');\n        const name = split.shift().replace(/\\+/g, ' ');\n        const value = split.join('=').replace(/\\+/g, ' ');\n        form.append(decodeURIComponent(name), decodeURIComponent(value));\n      }\n    });\n    return form;\n  }\n\n  function headers(xhr) {\n    const head = new Headers();\n    const pairs = xhr.getAllResponseHeaders().trim().split('\\n');\n    pairs.forEach(function(header) {\n      const split = header.trim().split(':');\n      const key = split.shift().trim();\n      const value = split.join(':').trim();\n      head.append(key, value);\n    });\n    return head;\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = options.statusText;\n    this.headers = options.headers instanceof Headers ? options.headers : new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    });\n  };\n\n  Response.error = function() {\n    const response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response;\n  };\n\n  const redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code');\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  self.Headers = Headers;\n  self.Request = Request;\n  self.Response = Response;\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      let request;\n      if (Request.prototype.isPrototypeOf(input) && !init) {\n        request = input;\n      } else {\n        request = new Request(input, init);\n      }\n\n      const xhr = new XMLHttpRequest();\n\n      function responseURL() {\n        if ('responseURL' in xhr) {\n          return xhr.responseURL;\n        }\n\n        /* Avoid security warnings on getResponseHeader when not allowed by CORS */\n        if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n          return xhr.getResponseHeader('X-Request-URL');\n        }\n\n        return;\n      }\n\n      xhr.onload = function() {\n        const options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: headers(xhr),\n          url: responseURL()\n        }\n        const body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    });\n  };\n  self.fetch.polyfill = true;\n})();\n\n/** \n * Array extras for managing collections of objects.\n * Provides the following methods: find, findIndex,\n * pluck, difference, intersection, merge, unique.\n */\n\nif (!Array.prototype.find) {\n  $.extend(Array.prototype, {\n    find(predicate) {\n      if (this == null) {\n        throw new TypeError('Array.prototype.find called on null or undefined');\n      }\n      if (typeof predicate !== 'function') {\n        throw new TypeError('predicate must be a function');\n      }\n      let list = Object(this);\n      let length = list.length >>> 0;\n      let thisArg = arguments[1];\n      let value;\n\n      for (let i = 0; i < length; i++) {\n        value = list[i];\n        if (predicate.call(thisArg, value, i, list)) {\n          return value;\n        }\n      }\n      return undefined;\n    }\n  })\n}\nif (!Array.prototype.findIndex) {\n  $.extend(Array.prototype, {\n    findIndex(predicate) {\n      if (this === null) {\n        throw new TypeError('Array.prototype.findIndex called on null or undefined');\n      }\n      if (typeof predicate !== 'function') {\n        throw new TypeError('predicate must be a function');\n      }\n      let list = Object(this);\n      let length = list.length >>> 0;\n      let thisArg = arguments[1];\n      let value;\n\n      for (let i = 0; i < length; i++) {\n        value = list[i];\n        if (predicate.call(thisArg, value, i, list)) {\n          return i;\n        }\n      }\n      return -1;\n    }\n  })\n}\n\nif (!Array.prototype.pluck) {\n  $.extend(Array.prototype, {\n    pluck(prop) {\n      let ret = [];\n      this.forEach(function(item) {\n        if (item[prop]) {\n          ret.push(item[prop])\n        }\n      })\n      return ret;\n    }\n  })\n}\n\nif (!Array.prototype.difference) {\n  $.extend(Array.prototype, {\n    difference(a) {\n      return this.filter(function(after) {\n        return !a.reduce(function(found, before) {\n          if (!found) {\n            found = true;\n            for (let key in before) {\n              if (before.hasOwnProperty(key)) {\n                  found = found && (before[key] === after[key]);\n              }\n            }\n          }\n          return found;\n        }, false);\n      });\n    }\n  })\n}\n\nif (!Array.prototype.intersection) {\n  $.extend(Array.prototype, {\n    intersection(array) {\n      const self = this;\n      const diff = self.difference(array);\n      return this.difference(diff);\n    }\n  })\n}\n\nif (!Array.prototype.mixin) {\n  $.extend(Array.prototype, {\n    mixin(array) {\n      var self = this;\n      var ret = this.concat(array);\n      ret.unique();\n      self.splice(0);\n      ret.forEach(function(item) {\n        self.push(item);\n      })\n    }\n  })\n}\n\nif (!Array.prototype.unique) {\n  $.extend(Array.prototype, {\n    unique() {\n      const len = this.length;\n      let obj = {};\n      let ret = [];\n      for (let i = 0; i < len; i++) {\n        const arrayItem = JSON.stringify(this[i]);\n        const arrayItemValue = this[i];\n        if (obj[arrayItem] === undefined) {\n          ret.push(arrayItemValue);\n          obj[arrayItem] = 1;\n        } else {\n          obj[arrayItem]++;\n        }\n      }\n      this.length = 0;\n      const self = this;\n      ret.forEach(function(item) {\n        self.push(item);\n      })\n    }\n  })\n}\n\n/**\n * ChocolateChip-UI Model Factory.\n */\n(() => {\n  const ModelErrorMessages = {\n    en: {\n      noPropertyOrDataError: \"ChocolateChip-UI Model Error: No property or data were provided to set on the model.\",\n      noPropertyToSet: \"ChocolateChip-UI Model Error: No data was provided to set on the model's property.\",\n      noPropertyToDelete: \"ChocolateChip-UI Model Error: No property was provided to delete from the model.\",\n      noObjectToMerge: \"ChocolateChip-UI Model Error: No object was provided to merge into the model's data.\",\n      incorrectDataForMerging: \"ChocolateChip-UI Model Error: An incorrect type of data was provided for merging into the model. You must use a proper object for this model.\",\n      noObjForMixin: \"ChocolateChip-UI Model Error: No object was passed to the mixin. Please provide one.\",\n      noCallbackForModelOn: \"ChocolateChip-UI Model Error: No callback was provided for the model `on` event. Without it the event cannot work. Please provide one.\",\n      noEventForModelOn: \"ChocolateChip-UI Model Error: No event was provided for the model's `on` handler. Without an event the handler cannot work. Please provide one an event and a callback to handle the event.\",\n      noEventForModelTrigger: \"ChocolateChip-UI Model Error: No event was provided for the model trigger. Without it no event can be triggered. Please provide one.\",\n      noPosForEventDeletion: \"ChocolateChip-UI Model Error: No position was provided for the callback to be deleted from the model events. Please provide one.\",\n      noPosForPropAt: \"ChocolateChip-UI Model Error: No position was provided for getting a property on the model's collection. Please provide one.\",\n      noPropForPropAt: \"ChocolateChip-UI Model Error: No property was provided. Without one we cannot get the property from the model collection. Please provide a property and the position in the collection to get it.\",\n      noValForPropEquals: \"ChocolateChip-UI Model Error: No value was provided to use for getting an object property. Please provide one.\",\n      noPropForPropEquals: \"ChocolateChip-UI Model Error: No property or value was provided. Without them we cannot get an object whose property equals some value in this model.\",\n      noPosForSetPropAt: \"ChocolateChip-UI Model Error: No position was provided for setting a property in the model collection. Please provide one.\",\n      noValueForSetPropAt: \"ChocolateChip-UI Model Error: No value or position was provided for setting an object by property in the model collection. Please provide a value and a position.\",\n      noPropForSetPropAt: \"ChocolateChip-UI Model Error: No property, value or position were provided for setting the value of an object in the model collection. Please provide a property, value and position to set on the model.\",\n      noValueForPropEquals: \"ChocolateChip-UI Model Error: No value was provided. With a value, we cannot find a matching object in the model collection. Please provide one\",\n      noPropForPropEquals: \"ChocolateChip-UI Model Error: No property or value were provided. Without these we cannot find a matching object in the model collection. Please provide both of them.\",\n      noDataToPushToModel: \"ChocolateChip-UI Model Error: No data was provided to push onto the model collection.\",\n      noDataForShiftToModel: \"ChocolateChip-UI Model Error: No data was provided to insert at the beginning of the model collection.\",\n      noEndForModelSlice: \"ChocolateChip-UI Model Error: No end value was provided to slice the model collection. Please provide a numeral value.\",\n      noStartModelForSlice: \"ChocolateChip-UI Model Error: No start value was provided for slicing the model collection. Please provide both a start and end numeral value so that we can slice the model collection for you.\",\n      noEndForModelSplice: \"ChocolateChip-UI Model Error: No end position was provided to splice the model collection. Please provide one.\",\n      noStartForModelSplice: \"ChocolateChip-UI Model Error: No start position was provided for splicing the model collection. Please provide a start and end position for splicing the model collection.\",\n      noDataToInsertInModel: \"ChocolateChip-UI Model Error: No data was provided to insert into the model collection. Was expecting an object, but found nothing. Please provide some an object of data. Check that you have your arguments in the correct order: position first, data second.\",\n      noPosToInserInModel: \"ChocolateChip-UI Model Error: No position was provided to insert data into the model collection. Please provide a position and some data to insert in the model collection. The first argument should be a numerical value for the position, followed by the data to insert.\",\n      noPropForPlucking: \"ChocolateChip-UI Model Error: No property was provided to pluck from the model collection. Please provide a property.\",\n      noCallbackForModelFind: \"ChocolateChip-UI Model Error: No callback was provided as an argument for the find on the model collection. Please provide one.\",\n      noElementForIndexOf: \"ChocolateChip-UI Model Error: No element was provided for finding the index of an object in the model collection. Please provide one.\",\n      noDataToConcat: \"ChocolateChip-UI Model Error: No data was provided to concat to this model. Did you forget to provide the data?\",\n      noPropsForSortBy: \"ChocolateChip-UI Model Error: No property was provided for sorting. Without a property we cannot sort.\",\n      noEventForEventDeletion: \"ChocolateChip-UI Model Error: No event was provided to delete the callback for this model. Please provide both and event and an array position for the callback. An event can have more than one callback registered to it.\",\n      noCallbackForForEach: \"ChocolateChip-UI Model Error: No callback was provided for the forEach method. This is required.\",\n      noDataToReplaceInModel: \"ChocolateChip-UI Model Error: No data was provided to replace the data in the model. If you want to do so, please provide some data to complete this operation. Otherwise, if you are trying to empty the model, use `purge()`.\",\n      modelHasNoDataToReturn: \"ChocolateChip-UI Model Error: This model has no data associated with it. Perhaps you forgot to give it any data when you created it.\",\n      positionGreaterThanModelLength: \"ChocolateChip-UI Model Error: The position you provided to set a property is greater than the number of items in this model.\"\n    },\n    es: {\n      noPropertyOrDataError: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ninguna propiedad ni datos para establecer el valor del modelo.\",\n      noPropertyToSet: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ningunos datos para establecer el valor de una propiedad del modelo.\",\n      noPropertyToDelete: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ninguna propiedad para eliminar del modelo.\",\n      noObjectToMerge: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó objeto de fundirse en los datos del modelo.\",\n      incorrectDataForMerging: \"Hubo Error de Modelo ChocolateChip-UI: Se proporcionó un tipo incorrecto de los datos con el fin de fundirse en el modelo. Debe utilizar un objeto adecuado para este modelo.\",\n      noObjForMixin: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ningún objeto al mixin. Por favor proporcione uno.\",\n      noCallbackForModelOn: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ninguna función callback para el event `on` del modelo. Sin ella el evento no puede funcionar. Por favor proporcione una.\",\n      noEventForModelOn: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ningún evento para la función del evento `on` del modelo.Sin un evento la función no puede realizarse. Por favor proporcione un evento.\",\n      noEventForModelTrigger: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ningún evento para el gatillo del modelo. Sin él no se puede disparar ningún evento. Por favor proporcione uno.\",\n      noPosForEventDeletion: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ninguna función callback la cual se puede eliminar de los eventos del modelo. Por favor proporcione una.\",\n      noPosForPropAt: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ninguna posición para acceder a una propiedad en la colección del modelo. Por favor proporcione una.\",\n      noPropForPropAt: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ninugna propiedad. Sin una no se puede acceder a una propiedad en la colección del modelo. Por favor proporcione una propiedad y una posición en la colección para acceder a ella.\",\n      noValForPropEquals: \"Hubo Error de Modelo ChocolateChip-UI: No se proporiconó ningún valor para acceder a una propiedad de un objeto. Por favor proprocione uno.\",\n      noPropForPropEquals: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ningúna propiedad ni valor. Sin ellos no podemos acceder a un objeto que tenga propiedad del mismo valor en este modelo.\",\n      noPosForSetPropAt: \"Hubo Error de Modelo ChocolateChip-UI: No se proprocionó ninguna posición para establecer una propiedad en la colección del modelo. Por favor proporcione una.\",\n      noValueForSetPropAt: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ninún valor ni posición para actualizar un objeto en la colección del modelo. Por favor proporcione un valor y una posición.\",\n      noPropForSetPropAt: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionaron ninunga propiedad, valor ni posición para establecer el valor de un objeto en la colección del modelo. Por favor proporcione una propiedad, valor y posición para actualizar el objeto.\",\n      noValueForPropEquals: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ningún valor. Sin algún valor no podemos encontrar a un objeto idéntico en la colección del modelo. Por favor proporcione uno.\",\n      noPropForPropEquals: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ninguna propiedad ni valor. Sin ellos no podemos encontrar un objeto de iqual valor en la colección del modelo. Por favor proporcione los dos.\",\n      noDataToPushToModel: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionaron ningunos datos para añadir al fin de la colección del modelo.\",\n      noDataForShiftToModel: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ninungos datos para agregar al inicio de la colección del modelo.\",\n      noEndForModelSlice: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ningún valor final para extraer de la colección del modelo. Por favor proporcione un valor numérico.\",\n      noStartModelForSlice: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ningún valor inicial para extraer datos de la colección del modelo. Por favor proporcione un valor numérico inicial así como un final para que podamos extraer los datos de la colección del modelo.\",\n      noEndForModelSplice: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ninguna posición final para realizar una acción de «splice» en la colección del modelo. Por favor proporcione una.\",\n      noStartForModelSplice: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ninguna posición inicial para realizar una acción de «splice» en la colección del modelo. Por favor proporcione una.\",\n      noDataToInsertInModel: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionaron ningunos datos para insertar en la colección del modelo. Se esperaba un objeto, pero no se encontró nada. Por favor proporcione un objeto de datos. El primer argumento debe de ser una position, seguido por los datos.\",\n      noPosToInserInModel: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ninguna posición para saber en dónde insertar los datos en la colección del modelo. Por favor proporcione una posición de valor numérico y unos datos para insertar en la colección del modelo. El primer argumento debe de ser un valor numérico para la posición, y entonces unos datos que insertar.\",\n      noPropForPlucking: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ninguna propiedad para extraerla de la colección del modelo. Por favor proporcione una propiedad.\",\n      noCallbackForModelFind: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ninguna función callback como parámetro a fin de realizar una búsqueda en la colección del modelo. Por favor proporcione una.\",\n      noElementForIndexOf: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ningun element a fin de averiguar el índice de un objeto en la colección del modelo. Por favor proporcione una.\",\n      noDataToConcat: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionaron ningunos datos para concatenar en este modelo. ¿Se le olvidó proporcionar los datos?\",\n      noPropsForSortBy: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ninguna propiedad. Sin una no se puede ordenar los datos del modelo.\",\n      noEventForEventDeletion: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ningún evento a fin de eliminar la función callback de este modelo. Por favor proporcione tanto un evento como una posición en la colección para la callback que se quiere eliminar. Es posible que un evento tenga más de una callback registrada a él.\",\n      noCallbackForForEach: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionó ninguna función callback para el método «forEach». Ésta se requiere.\",\n      noDataToReplaceInModel: \"Hubo Error de Modelo ChocolateChip-UI: No se proporcionaron ningunos datos para reemplazar los del modelo. Si es lo que usted quiere hacer, por favor proporicone unos datos para realizar esta operación. En otro caso, si el propósito de esta operación es el de vaciar el modelo, use `purge()`.\",\n      modelHasNoDataToReturn: \"Hubo Error de Modelo ChocolateChip-UI: Este modelo no tiene datos suyos. Quizás se le olvidó asignarselos cuando lo creó.\",\n      positionGreaterThanModelLength: \"Hubo Error de Modelo ChocolateChip-UI: The position you provided is to set a property is greater than the number of items in this model. La positición que se proporicionó es más grande que el número de objetos en este modelo.\"\n    }\n  };\n\n  let errors;\n  if ($('html').attr('lang') == 'en') errors = ModelErrorMessages.en;\n  if ($('html').attr('lang') == 'es') errors = ModelErrorMessages.es;\n\n  const dataStore = {\n    id: $.uuid()\n  };\n\n  class Model {\n    constructor (data) {\n      let d;\n      if ($.type(data) == 'array') {\n        d = data.slice();\n      } else if ($.type(data) == 'object') {\n        d = Object.create(data);\n      } else {\n        d = data;\n      }\n      this.id = $.uuid();\n      this[dataStore] = d;\n      this.events = {};\n      this.stopped = false;\n      this.boundViews = [];\n    }\n\n    /**\n     * This method is used internally by the model to update any views bound to it. There is never a situation where you will need to use it. It gets invoked whenever you perform an operation that changes the model's data.\n     */\n    updateBoundViews() {\n      /* No bound views, so exit: */\n      if (!this.boundViews || !this.boundViews.length) {\n        return;\n      }\n\n      /** \n       * Loop thru bound views to render: \n       */\n      this.boundViews.forEach(function(view) {\n        view.render();\n      })\n    }\n\n    /**\n     * Set model state to `stopped`. Used to determine whether to execute a model event. \n     */\n    stop() {\n     this.stopped = true\n    }\n\n    /** \n     * Set model state to run: \n     */\n    start() {\n      this.stopped = false\n    }\n\n    /** \n     * Check if model is stopped; \n     */\n    isStopped() {\n      return this.stopped\n    }\n\n    /** \n     * Get the value of an object property.\n     * This only works when the model's data is an object.\n     * If used without parameter, will return all data from model, whether object or array. \n     */\n    get(property) {\n      if (property && $.type(this[dataStore]) === 'object') {\n        return this[dataStore][property];\n      } else {\n        return this[dataStore]\n      }\n    }\n\n    /** \n     * Set the value of an object property.\n     * This only works when the model's data is an object.\n     */\n    set(property, data) {\n      if (!property) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noPropertyOrDataError)\n        return;\n      } else if (!data) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noPropertyToSet + property)\n        return;\n      }\n      if ($.type(this[dataStore]) === 'object') {\n        this[dataStore][property] = data;\n        this.updateBoundViews();\n      }\n    }\n\n    /** \n     * Clear out the model's data.\n     * Works with models with objects or arrays.\n     */\n    purge() {\n      if ($.type(this[dataStore]) === 'object') {\n        this[dataStore] = {}\n      } else if ($.type(this[dataStore]) === 'array') {\n        this[dataStore] = [];\n      } else {\n        this[dataStore];\n      }\n    }\n\n    /**\n     * Merge new object into model's object.\n     * This only works when the model's data is an object.\n     * Will replace any existing properties of the same name.\n     */\n    merge(obj) {\n      if (!obj) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noObjectToMerge);\n        return;\n      } else if ($.type(obj) !== 'object') {\n        if ($.supressErrorMessages) return;\n        console.error(errors.incorrectDataForMerging)\n      } else if ($.type(this[dataStore]) === 'object') {\n        for (let key in obj) {\n          this[dataStore][key] = obj[key];\n        }\n        this.updateBoundViews();\n      }\n    }\n\n    /**\n     * Mixin new object into model's object.\n     * This only works when the model's data is an object.\n     * This will not replace any existing properties of the same name.\n     * Only new properties will be added.\n     */\n    mixin(data) {\n      if (!data) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noObjForMixin);\n        return;\n      }\n      if ($.type(this[dataStore]) === 'object') {\n        for (let key in data) {\n          /** \n           * Do not replace property if it exists: \n           */\n          if (!(key in this[dataStore])) {\n            this[dataStore][key] = data[key];\n            this.updateBoundViews();\n          }\n        }\n      } else if ($.type(this[dataStore]) === 'array') {\n        this[dataStore] = this[dataStore].concat(data).unique();\n        this.updateBoundViews();\n      }\n    }\n\n    /**\n     * Replace the data of the model with the provided data.\n     * This works for models of an object or array.\n     */\n    replace(data) {\n      if (data) {      \n      let d;\n      if ($.type(data) == 'array') {\n        d = data.slice();\n      } else if ($.type(data) == 'object') {\n        d = Object.create(data);\n      } else {\n        d = data;\n      }\n        this[dataStore] = d;\n        this.updateBoundViews(this);\n      } else {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noDataToReplaceInModel)\n      }\n    }\n\n    /**\n     * Remove a property from a model's data.\n     * Only works if the data is an object.\n     */\n    remove(prop) {\n      if (!prop) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noPropertyToDelete);\n        return;\n      }\n      if ($.type(this[dataStore]) !== 'object') return;\n      delete this[dataStore][prop];\n      this.updateBoundViews();\n    }\n\n    /**\n     * Register an event on the model:\n     */\n    on(event, callback) {\n      if (this.stopped) return;\n      if (!event) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noEventForModelOn);\n        return;\n      } else if (!callback) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noCallbackForModelOn);\n        return;\n      } \n      if (!this.events[event]) {\n        this.events[event] = [callback];\n      } else {\n        this.events[event].push(callback)\n      }\n    }\n\n    /**\n     * Trigger an event on the model:\n     */\n    trigger(event, data) {\n      if (this.stopped) return;\n      if (!event) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noEventForModelTrigger);\n        return;\n      }\n      data != undefined ? data : {}\n      this.events[event].forEach(item => {\n          item(data);\n      });\n    }\n\n    /**\n     * Remove an event on the model.\n     * If no event is provided, all events will be removed.\n     */\n    off(event) {\n      if (!event) {\n        this.events = {};\n      } else {\n        delete this.events[event];\n      }\n    }\n\n    /**\n     * Array specific methods:\n     */\n\n    getPropAt(property, position) {\n      if (!property) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noPropForPropAt);\n        return;\n      } else if (position === undefined) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noPosForPropAt);\n        return;\n      } \n      if ($.type(this[dataStore]) === 'array') {\n        if (position < 0) {\n          const pos = this[dataStore].length + position;\n          return this[dataStore][pos][property];\n        } else if (position > this[dataStore].length) {\n          console.error(errors.noPosForPropAt);\n          return;\n        } else {\n          return this[dataStore][position][property];\n        }\n      }\n    }\n\n    setPropAt(property, value, position) {\n      if (!property) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noPropForSetPropAt);\n        return;\n      } else if (value === undefined) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noValueForSetPropAt);\n        return;\n      } else if (position === undefined) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noPosForSetPropAt);\n        return;\n      } else if (position > this[dataStore].length -1) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.positionGreaterThanModelLength);\n        return;\n      }\n      if ($.type(this[dataStore]) === 'array') {\n        if (position < 0) {\n          const pos = this[dataStore].length + position;\n          this[dataStore][pos][property] = value;\n          this.updateBoundViews();\n        } else {\n          this[dataStore][position][property] = value;\n          this.updateBoundViews();\n        }\n      }\n    }\n\n    push(data) {\n      if (!data) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noDataToPushToModel);\n        return;\n      }\n      if ($.type(this[dataStore]) === 'array') {\n        this[dataStore].push(data);\n        this.updateBoundViews();\n      }\n    }\n\n    pop() {\n      if ($.type(this[dataStore]) === 'array') {\n        this[dataStore].pop();\n        this.updateBoundViews();\n      }\n    }\n\n    unshift(data) {\n      if (!data) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noDataForShiftToModel);\n        return;\n      } else if ($.type(this[dataStore]) === 'array') {\n        this[dataStore].unshift(data);\n        this.updateBoundViews();\n      }\n    }\n          \n    shift() {\n      if ($.type(this[dataStore]) === 'array') {\n        this[dataStore].shift();\n        this.updateBoundViews();\n      }\n    }\n\n\n    slice(start, end) {\n      if (end === undefined) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noEndForModelSlice);\n        return;\n      } else if (start === undefined) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noStartModelForSlice);\n        return;\n      }\n      if ($.type(this[dataStore]) === 'array') {\n        return this[dataStore].slice(start, end)\n      }\n    }\n\n    splice(start, end, data) {\n      if (end === undefined) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noEndForModelSplice);\n        return;\n      } else if (start === undefined) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noStartForModelSplice);\n        return;\n      }\n      if ($.type(this[dataStore]) === 'array' && data) {\n        this[dataStore].splice(start, end, data);\n        this.updateBoundViews();\n      } else if ($.type(this[dataStore]) === 'array') {\n        if(start == null || !end) return;\n        this[dataStore].splice(start, end);\n        this.updateBoundViews();\n      }\n    }\n\n    /**\n     * Instert an object into the model's array at the designated position:\n     */\n    insert(position, data) {\n      if (data === undefined) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noDataToInsertInModel);\n        return;\n      } else if (position === undefined || $.type(position) !== 'number') {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noPosToInserInModel);\n        return;\n      }\n      if ($.type(this[dataStore]) === 'array') {\n        if ($.type(position) !== 'number') return;\n        this[dataStore].splice(position, 0, data);\n        this.updateBoundViews();\n      }\n    }\n\n    /**\n     * Get an array of the provided property values in the model's array:\n     */\n    pluck(property) {\n      if (!property) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noPropForPlucking);\n        return;\n      } else {\n        let ret = [];\n        if (this[dataStore] && this[dataStore].length) {\n          const len = this[dataStore].length;\n          for (let i = 0; i < len; i++) {\n            ret.push(this[dataStore][i][property]);\n          }\n          return ret;\n        }\n      }\n    }\n\n    /**\n     * \n     */\n    indexOf(element, startFrom) {\n      if (!element) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noElementForIndexOf);\n        return;\n      } else if ($.type(this[dataStore]) === 'array') {\n        return this[dataStore].indexOf(element, startFrom);\n      }\n    }\n\n    /**\n     * This method lets you pass a callback that checks for a property or other state in the array's items and return the match. It returns the first match only.\n     */\n    find(callback) {\n      if (!callback) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noCallbackForModelFind);\n        return;\n      } else if ($.type(this[dataStore]) === 'array') {\n        return this[dataStore].find(callback);\n      }\n    }\n\n    findIndex(callback) {\n      if (!callback) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noCallbackFoFindIndex);\n        return;\n      } else if ($.type(this[dataStore]) === 'array') {\n        return this[dataStore].findIndex(callback);\n      }\n    }\n\n    forEach(callback) {\n      if (!callback) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noCallbackForForEach);\n        return;\n      }\n      if (this[dataStore] && this[dataStore].length) {\n        let value;\n        let i = -1;\n        const len = this[dataStore].length;\n        while (++i < len) {\n          value = callback.call(this[dataStore][i], this[dataStore][i], i);\n          if (value === false) {\n            break;\n          }\n        }\n      }\n    }\n\n    filter(...args) {\n      if (this[dataStore] && this[dataStore].length) {\n        return this[dataStore].filter.apply(this[dataStore], args);\n      }\n    }\n\n    map(...args) {\n      if (this[dataStore] && this[dataStore].length) {\n        return this[dataStore].map.apply(this[dataStore], args);\n      }\n    }\n\n    reverse() {\n      if (this[dataStore] && this[dataStore].length) {\n        this[dataStore].reverse();\n        this.updateBoundViews();\n      }\n    }\n\n    sort(compareFunction) {\n      if (this[dataStore] && this[dataStore].length) {\n        if (compareFunction) {\n          this[dataStore].sort(compareFunction);\n          this.updateBoundViews();\n        } else {\n          this[dataStore].sort();\n          this.updateBoundViews();\n        }\n      }\n    }\n\n    /**\n     * Sort the model's array based on passed properties. By default the ordering is ascendeing. By prefixing the property with a hyphen, the order will be descending. You can use more than one property separated by commas.\n     */\n    orderBy(...props) {\n      if (!props || !props.length) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noPropsForSortBy);\n        return;\n      }\n      const orderBy = (args) => {\n        return (a, b) => {\n          const sortByProperty = (property) => {\n            /** \n             * Default sort order: \n             */\n            let sortOrder = 1;\n            /** \n             * If user provided property with \"-\" prefix, make sort order descending: \n             */\n            if (property[0] === \"-\") {\n              sortOrder = -1;\n              /** \n               * Extract property from hyphen prefix: \n               */\n              property = property.substr(1);\n            }\n            /** \n             * Sort objects by provided properties:\n             */\n            return (a, b) => {\n              const result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;\n              return result * sortOrder;\n            };\n          };\n\n          /** \n           * Loop over all properties and sort objects based on those properties: \n           */\n          let i = 0;\n          let result = 0;\n          const numberOfProperties = props.length;\n          while (result === 0 && i < numberOfProperties) {\n            /** \n             * Use the private function to compare two values: \n             */\n            result = sortByProperty(props[i])(a, b);\n            i++;\n          }\n          return result;\n        };\n      };\n      if (this[dataStore] && this[dataStore].length) {\n        this[dataStore].sort(orderBy.apply(null, props));\n        this.updateBoundViews();\n      }\n    }\n\n    /**\n     * Concat and array of data to the model's array.\n     * After concating, it will remove any duplicates.\n     */\n    concat(data) {\n      if (!data) {\n        if ($.supressErrorMessages) return;\n        console.error(errors.noDataToConcat);\n        return;\n      }\n      if ($.type(this[dataStore]) === 'array') {\n        let temp = this[dataStore].concat(data);\n        this[dataStore] = temp;\n        this.updateBoundViews();\n      }\n    }\n\n    /**\n     * Remove any duplicates from the model's array:\n     */\n    unique() {\n      if ($.type(this[dataStore]) === 'array') {\n        this[dataStore].unique();\n        this.updateBoundViews();\n      }\n    }\n\n    /**\n     * Get an object out of the model's array based on its index:\n     */\n    eq(position) {\n      if ($.type(this[dataStore]) === 'array') {\n        return this[dataStore][position]\n      }\n    } \n\n    /**\n     * Get the length of the model's array.\n     * Only works if the data is an array.\n     */\n    size() {\n      if ($.type(this[dataStore]) === 'array') {\n        return this[dataStore].length\n      }\n    }\n  }\n\n  $.extend({\n    Model: function(data) {\n      return new Model(data)\n    }\n  });\n\n})();\n\n/**\n * Check environment properties.\n */\n$.extend($, {\n  isiPhone: /iphone/img.test(navigator.userAgent),\n  isiPad: /ipad/img.test(navigator.userAgent),\n  isiPod: /ipod/img.test(navigator.userAgent),\n  isiOS: /ip(hone|od|ad)/img.test(navigator.userAgent),\n  isAndroid: (/android/img.test(navigator.userAgent) && !/trident/img.test(navigator.userAgent)),\n  isTouchEnabled: !/trident/img.test(navigator.userAgent) && !/edge/img.test(navigator.userAgent) && 'createTouch' in document,\n  isOnline: navigator.onLine,\n  isStandalone: navigator.standalone || false,\n  isWebkit: (!/trident/img.test(navigator.userAgent) && !/edge/img.test(navigator.userAgent) && /webkit/img.test(navigator.userAgent)),\n  isDesktop: (!/mobile/img.test(navigator.userAgent)),\n  isMobile: (/mobile/img.test(navigator.userAgent)),\n  isSafari: (!/edge/img.test(navigator.userAgent) && !/Chrome/img.test(navigator.userAgent) && /Safari/img.test(navigator.userAgent) && !/android/img.test(navigator.userAgent)),\n  isChrome: !/trident/img.test(navigator.userAgent) && !/edge/img.test(navigator.userAgent) && /Chrome/img.test(navigator.userAgent) && !((/samsung/img.test(navigator.userAgent) || /Galaxy Nexus/img.test(navigator.userAgent) || /HTC/img.test(navigator.userAgent) || /LG/img.test(navigator.userAgent)) && !/trident/img.test(navigator.userAgent) && !/edge/img.test(navigator.userAgent) && /android/i.test(navigator.userAgent) && /webkit/i.test(navigator.userAgent)),\n  isNativeAndroid: ((/samsung/img.test(navigator.userAgent) || /Galaxy Nexus/img.test(navigator.userAgent) || /HTC/img.test(navigator.userAgent) || /\\sLG/img.test(navigator.userAgent)) && !/trident/img.test(navigator.userAgent) && !/edge/img.test(navigator.userAgent) && /android/i.test(navigator.userAgent) && /webkit/i.test(navigator.userAgent) && (/Android 3/i.test(userAgentHTC) || /Android 4/i.test(navigator.userAgent)))\n});\n\n/**\n * ChocolateChip-UI Widget - Setup.\n */\n$(function () {\n  if (!/(mobile)|(ios)|(android)/img.test(navigator.userAgent)) {\n    $('body').addClass('isDesktop');\n  }\n  if ($('link[href*=ios]')[0]) {\n    $('body').addClass('themeIsiOS');\n    $.theme = 'ios';\n  } else if ($('link[href*=android]')[0]) {\n    $('body').addClass('themeIsAndroid');\n    $.theme = 'android';\n  }\n  $.dir = 'ltr';\n  if ($('html').attr('dir') === 'rtl') {\n    $.dir = 'rtl'\n  }\n});\n\n/**\n * ChocolateChip-UI Widget - Activity Indicator.\n */\n$.fn.extend({\n  /**\n   * Setup activitiy indicator:\n   */\n  Busy: function(options) {\n    let settings = {\n      size: 40,\n      color: '#666',\n    };\n    $.extend(settings, options);\n\n    const $this = this;\n    let spinner;\n    /**\n     * For iOS:\n     */\n    const iOSBusy = () => {\n      let small;\n      /**\n       * Smaller busy indicator (less tines):\n       */\n      if (parseInt(settings.size, 10) < 30) {\n        spinner = `<svg class='chui-busy small' width='${ settings.size }px' height='${ settings.size }px' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100' preserveAspectRatio='xMidYMid'>  \n  <g x='0' y='0' width='100' height='100' fill='none' class='bk'>\n    <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(0 50 50) translate(0 -30)'></rect>\n    <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(45 50 50) translate(0 -30)'></rect>\n    <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(90 50 50) translate(0 -30)'></rect>\n    <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(135 50 50) translate(0 -30)'></rect>\n    <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(180 50 50) translate(0 -30)'></rect>\n    <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(225 50 50) translate(0 -30)'></rect>\n    <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(270 50 50) translate(0 -30)'></rect>\n    <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(315 50 50) translate(0 -30)'></rect>\n  </g>\n</svg>`;\n        $this.append(spinner);\n      /**\n       * Larger busy indicator (more tines);\n       */\n      } else {\n        spinner = `<svg class='chui-busy' width='${ settings.size }px' height='${ settings.size }px' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100' preserveAspectRatio='xMidYMid' class='uil-default'> \n  <g x='0' y='0' width='100' height='100' fill='none'>\n    <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(0 50 50) translate(0 -30)'></rect>\n    <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(30 50 50) translate(0 -30)'></rect>\n    <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(60 50 50) translate(0 -30)'></rect>\n    <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(90 50 50) translate(0 -30)'></rect>\n    <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(120 50 50) translate(0 -30)'></rect>\n    <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(150 50 50) translate(0 -30)'></rect>\n    <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(180 50 50) translate(0 -30)'></rect>\n    <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(210 50 50) translate(0 -30)'></rect>\n    <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(240 50 50) translate(0 -30)'></rect>\n    <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(270 50 50) translate(0 -30)'></rect>\n    <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(300 50 50) translate(0 -30)'></rect>\n    <rect  x='46.5' y='40' width='7' height='20' rx='5' ry='5' fill='${ settings.color }' transform='rotate(330 50 50) translate(0 -30)'></rect>\n  </g>\n</svg>`;\n        $this.append(spinner);\n      }\n    };\n\n    /**\n     * For Android:\n     */\n    const androidBusy = () => {\n      settings.id = $.uuid();\n      let androidActivityIndicator = null;\n      if ($.isNativeAndroid) {\n        androidActivityIndicator = `<svg class=\"chui-busy\" version=\"1.1\" id=\"${ settings.id }\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\" enable-background=\"new 0 0 100 100\" xml:space=\"preserve\">\n  <g>\n    <path fill=\"none\" stroke=\"${ settings.color }\" stroke-width=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" d=\"M74.2,65c2.7-4.4,4.3-9.5,4.3-15c0-15.7-12.8-28.5-28.5-28.5S21.5,34.3,21.5,50c0,5.5,1.6,10.6,4.3,15\"/>\n  </g>\n  <polyline fill=\"none\" stroke=\"${ settings.color }\" stroke-width=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-miterlimit=\"10\" points=\"89.4,56.1 74.3,65 65.4,49.9 \"/>\n</svg>`;\n\n        $this.append(androidActivityIndicator);\n        return;\n      } else {\n        androidActivityIndicator = `<svg id=\"${ settings.id }\" class=\"chui-busy\" x=\"0px\" y=\"0px\" viewBox=\"0 0 100 100\"><circle stroke=\"url(#SVGID_1_)\" cx=\"50\" cy=\"50\" r=\"28.5\"/></svg>`;\n        $this.append(androidActivityIndicator);\n        $this.addClass('hasActivityIndicator');\n        if (options.color) {\n          $('#' + settings.id).find('circle').css('stroke', options.color);\n        }\n      }\n      $('#' + settings.id).css({\n        'height': settings.size + 'px',\n        'width': settings.size + 'px'\n      });\n    };\n\n    /**\n     * Create Busy control for appropriate OS:\n     */\n    if ($.theme === 'android') {\n      androidBusy(options);\n    } else if ($.theme === 'ios') {\n      iOSBusy(options);\n    }\n  }\n});\n\n/**\n * ChocolateChip-UI Widget - Screen Blocker.\n */\n$.extend({\n\n  /**\n   * Cover screen:\n   */\n  Block: opacity => {\n    opacity = opacity ? ` style='opacity:${ opacity };'` : ` style='opacity: .5;'`;\n    if ($('.mask')[0]) return;\n    $('body').append(`<div class='mask'${ opacity }></div>`);\n    $('screen.current').attr('aria-hidden', true);\n  },\n\n  /**\n   * Uncover screen:\n   */\n  Unblock: () => {\n    $('.mask').remove();\n    $('screen.current').removeAttr('aria-hidden');\n  }\n});\n\n/**\n * ChocolateChip-UI Widget - Button functions.\n */\nconst chuiBackButtonSVG = `<svg id=\"chui-back-button-svg\" width=\"100px\" height=\"100px\" viewBox=\"0 0 100 100\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n  <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n    <g id=\"chui-back-arrow\" stroke=\"#979797\">\n      <path d=\"M50.7822487,4.05872022 L5.60302012,49.1913445 L50.4625593,94.6779982\" id=\"back-arrow-bracket\"></path>\n      <path d=\"M6,49.368351 L95.8300018,49.368351\" id=\"back-arrow-shaft\"></path>\n    </g>\n  </g>\n</svg>`;\n\n$.fn.extend({\n  decorateBackButton: function() {\n    if ($(this).hasClass('back') || $(this).hasClass('backTo')) {\n      this.forEach(button => {\n        const buttonText = $(button).text();\n        $(button).html(`<span>${ buttonText }</span>`);\n        $(button).prepend(chuiBackButtonSVG);\n      });\n    }\n  }\n});\n$(function () {\n  $('.back').decorateBackButton();\n  $('.backTo').decorateBackButton();\n});\n\n/**\n * ChocolateChip-UI Widget - Center Elements.\n */\n$.fn.extend({\n  /**\n   * Center an Element on Screen\n   */\n  center: function(position) {\n    if (!this[0]) return;\n    const $this = $(this);\n    const parent = $this.parent();\n    if (position) {\n      $(this.css('position', position));\n    } else if ($this.css('position') === 'absolute') {\n      position = 'absolute';\n    } else {\n      position = 'relative';\n    }\n    let height;\n    let width;\n    let parentHeight;\n    let parentWidth;\n    if (position === 'absolute') {\n      height = $this[0].clientHeight;\n      width = $this[0].clientWidth;\n      parentHeight = parent[0].clientHeight;\n      parentWidth = parent[0].clientWidth;\n    } else {\n      height = parseInt($this.css('height'), 10);\n      width = parseInt($this.css('width'), 10);\n      parentHeight = parseInt(parent.css('height'), 10);\n      parentWidth = parseInt(parent.css('width'), 10);\n      $(this).css({\n        'margin-left': 'auto',\n        'margin-right': 'auto'\n      });\n    }\n    let tmpTop;\n    let tmpLeft;\n    if (parent[0].nodeName === 'body') {\n      tmpTop = ((window.innerHeight / 2) + window.pageYOffset) - height / 2 + 'px';\n      tmpLeft = ((window.innerWidth / 2) - (width / 2) + 'px');\n    } else {\n      tmpTop = (parentHeight / 2) - (height / 2) + 'px';\n      tmpLeft = (parentWidth / 2) - (width / 2) + 'px';\n    }\n    if (position !== 'absolute') tmpLeft = 0;\n    $this.css({\n      left: tmpLeft,\n      top: tmpTop\n    });\n    return $this;\n  }\n});\n\n/**\n * ChocolateChip-UI Widget - Edit List.\n */\n$.extend({\n  /**\n   * Setup an editable list, enabling reording of items and deletion:\n   */\n  EditList: function(options) {\n    /**\n      options = {\n        editLabel: labelName,\n        doneLabel: labelName,\n        deleteLabel: labelName,\n        cancelLabel: cancelName,\n        callback: callback (Tapping \"Done\" fires this),\n        deletable: false (no deletables),\n        movable: false (no movables),\n        model: myModel,\n        modelProp: 'id',\n        view: myView\n      }\n    */\n    const settings = {\n      editLabel: 'Edit',\n      doneLabel: 'Done',\n      deleteLabel: 'Delete',\n      cancelLabel: 'Cancel',\n      callback: $.noop,\n      deletable: true,\n      movable: true,\n      model: undefined,\n      modelProp: 'id',\n      view: undefined\n    };\n\n    let __data = [];\n    let __editMade = false;\n    if (!options) {\n      return;\n    }\n    $.extend(settings, options);\n    const __model = settings.model || false;\n\n    if (!settings.deletable && !settings.movable) {\n      return;\n    }\n    const __view = settings.view;\n\n    if (options) $.extend(settings, options);\n\n    let deleteButton;\n    let editButton;\n    let deletionIndicator;\n    let button;\n    let dispelDeletable = 'swiperight';\n    let enableDeletable = 'swipeleft';\n    let moveUpIndicator;\n    let moveDownIndicator;\n    let element = settings.element;\n    let deleteLabel;\n\n    let dir = $('html').attr('dir');\n    dir = dir ? dir.toLowerCase() : '';\n    if (dir === 'rtl') {\n      dispelDeletable = 'swipeleft';\n      enableDeletable = 'swiperight';\n    }\n\n    if (settings.deletable) {\n      deleteButton = \n        `<button class=\"delete\">\n          <label>${ settings.deleteLabel }</label>\n          <svg width=\"27px\" height=\"30px\" viewBox=\"0 0 27 30\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n              <g id=\"delete-icon\" fill=\"#3A3A3A\">\n                <g transform=\"translate(3.000000, 1.000000)\">\n                  <path d=\"M1,6 L20,6 L20,24.9986131 C20,26.6562333 18.6639569,28 16.9998779,28 L4.00012207,28 C2.3432004,28 1,26.6569187 1,24.9986131 L1,6 Z M4,9 L5,9 L5,25 L4,25 L4,9 Z M8,9 L9,9 L9,25 L8,25 L8,9 Z M12,9 L13,9 L13,25 L12,25 L12,9 Z M16,9 L17,9 L17,25 L16,25 L16,9 Z\" id=\"can\"></path><path d=\"M0,4.96611425 L0,1.67759301 L5.1776507,1.7511163 L6.482399,0 L14.5847825,0 L15.8789491,1.7511163 L21,1.7511163 L21,4.9447157 L0,4.96611425 L0,4.96611425 Z\" id=\"lid\"></path>\n                </g>\n              </g>\n            </g>        \n          </svg>      \n        </button>`;\n      deletionIndicator = \n        `<span class=\"deletion-indicator\">\n          <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 20 20\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n              <g id=\"deletion-indicator\">\n                <g id=\"ios-indicator\">\n                  <circle id=\"ios-circle\" fill=\"#FF0000\" cx=\"10\" cy=\"10\" r=\"10\"></circle>\n                  <path d=\"M3.5,10 L16.5,10\" id=\"ios-bar\" stroke=\"#FFFFFF\" stroke-width=\"2\" stroke-linecap=\"square\"></path>\n                </g>\n                <path d=\"M2,13 L9.9294326,16.8406135 L17.1937075,1.90173332\" id=\"checkmark\" stroke=\"#FA0303\" stroke-width=\"2\"></path>\n              </g>\n            </g>\n          </svg>\n        </span>`;\n      $(element).addClass('deletable');\n    }\n    if (settings.movable) {\n      moveUpIndicator = \n        `<span class='move-up'>\n          <svg width=\"22px\" height=\"22px\" viewBox=\"0 0 22 22\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n              <g id=\"move-indicator\">\n                <circle id=\"circle\" cx=\"11\" cy=\"11\" r=\"10\"></circle>\n                <path d=\"M4,13.9645823 L10.9316382,5.94630319 L17.795297,13.9073417\" id=\"move-up\"></path>\n              </g>\n            </g>\n          </svg>\n        </span>`;\n      moveDownIndicator = \n        `<span class='move-down'>\n          <svg width=\"22px\" height=\"22px\" viewBox=\"0 0 22 22\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n              <g id=\"move-indicator\">\n                <circle id=\"circle\" cx=\"11\" cy=\"11\" r=\"10\"></circle>\n                <path d=\"M4.0421421,7.98172087 L10.912246,16 L17.7960071,8.1103389\" id=\"move-down\"></path>\n              </g>\n            </g>\n          </svg>\n        </span>`;\n      $(element).addClass('editable');\n    }\n\n    editButton = `<button class=\"edit\">${ settings.editLabel }</button>`;\n    const screen = $(element).closest('screen');\n    const nav = $(element).closest('screen').find('nav');\n    nav.append(editButton);\n    nav.find('.back').hide();\n    nav.prepend(`<button class=\"cancel\">${ settings.cancelLabel }</button>`);\n    nav.find('.cancel').hide();\n    $.AdjustNavbarLayout($(element).closest('screen'));\n\n    button = $(element).closest('screen').find('.edit');\n    $(element).find('li').forEach(function (ctx) {\n      if (!$(ctx).has('.deletion-indicator').length) {\n        if (settings.deletable) {\n          $(ctx).prepend(deletionIndicator);\n        }\n        if (settings.movable) {\n          $(ctx).append(moveDownIndicator);\n          $(ctx).append(moveUpIndicator);\n        }\n        if (settings.deletable) {\n          $(ctx).append(deleteButton);\n        }\n      }\n    });\n\n    /**\n     * Callback to setup indicator interactions:\n     */\n    const makeEditable = function makeEditable(callback, list, button) {\n      $(function () {\n\n        /**\n         * Check for view and update its template:\n         */\n        if (__view) {\n          const temp = $('<div></div>');\n          temp[0].insertAdjacentHTML('afterbegin', __view.getTemplate());\n          temp.find('li').prepend(deletionIndicator);\n          temp.find('li').append(moveDownIndicator);\n          temp.find('li').append(moveUpIndicator);\n          const template = temp.html();\n          __view.setTemplate(template);\n        }\n\n        button.on('tap', function () {\n          const $this = this;\n\n          /**\n           * When button is in \"Edit\" state:\n           */\n          if (this.classList.contains('edit')) {\n            $(list).addClass('editing');\n            setTimeout(function () {\n              $this.classList.remove('edit');\n              $this.classList.add('done');\n              $($this).text(settings.doneLabel);\n              $(list).addClass('showIndicators');\n              $($this).siblings('.back').hide();\n              $($this).siblings('.cancel').show();\n              $.AdjustNavbarLayout(screen);\n            });\n\n            /**\n             * When button is in \"Done\" state:\n             */\n          } else if (this.classList.contains('done')) {\n            $(list).removeClass('editing');\n            /**\n             * Execute callback if edit was performed:\n             */\n            setTimeout(function () {\n              $this.classList.remove('done');\n              $this.classList.add('edit');\n              $($this).text(settings.editLabel);\n              $(list).removeClass('showIndicators');\n              $(list).find('li').removeClass('selected');\n              $($this).siblings('.cancel').hide();\n              if (settings.deletable) {\n                if ($(list).find('button.delete')[0]) return;\n                $(list).find('li').append(deleteButton);\n              }\n              $.AdjustNavbarLayout(screen);\n            });\n            if (!__editMade) return;\n            const movedItems = [];\n            $(list).find('li').forEach(function (ctx, idx) {\n              __data.push($(ctx).attr('data-id'));\n            });\n\n            /**\n             * Reorder model based on user choice:\n             */\n            if (__model) {\n              (function () {\n                let __newarray = [];\n                __data.filter(function (item) {\n                  const ret = __model.filter(function (b) {\n                    return b[settings.modelProp] == item;\n                  });\n                  __newarray.push(ret[0]);\n                });\n                __data = [];\n                __model.purge();\n                __model.replace(__newarray, false);\n                __newarray = [];\n              })();\n            }\n            if ($(list).data('list-edit')) {\n              callback.call(callback, __model);\n            }\n            __editMade = false;\n          }\n          setTimeout(function () {\n            $.AdjustNavbarLayout(screen);\n          });\n        });\n\n        /**\n         * Handle deletion indicators:\n         */\n        $(list).off('tap', '.deletion-indicator');\n        $(list).on('tap', '.deletion-indicator', function () {\n          if ($(this).closest('li').hasClass('selected')) {\n            $(this).closest('li').removeClass('selected');\n            return;\n          } else {\n            $(this).closest('li').addClass('selected');\n          }\n        });\n\n        /**\n         * Handle swipe gestures:\n         */\n        $(list).on(dispelDeletable, 'li', function () {\n          /**\n           * If no deletables, disable swipes:\n           */\n          if (!settings.deletable) return;\n          /**\n           * Else reveal delete button:\n           */\n          $(this).removeClass('selected');\n        });\n\n        $(list).on(enableDeletable, 'li', function () {\n          /**\n           * If no deletables, disable swipes:\n           */\n          if (!settings.deletable) return;\n          /**\n           * Else reveal delete button:\n           */\n          $(this).addClass('selected');\n        });\n\n        /**\n         * Move list item up:\n         */\n        $(list).on('tap', '.move-up', function (e) {\n          const _this = this;\n          __editMade = true;\n\n          let item = $(this).closest('li');\n          if (item.is('li:first-child')) {\n            return;\n          } else {\n            (function () {\n              /**\n               * Mark list as edited:\n               */\n              $(list).data('list-edit', true);\n              item = $(_this).closest('li');\n              const prev = item.prev();\n              /**\n               * Clone the items to replace the transitioned ones alter:\n               */\n              const itemClone = item.clone();\n              const prevClone = prev.clone();\n              const height = item[0].offsetHeight;\n              item.css({\n                \"-webkit-transform\": 'translate3d(0,-' + height + 'px,0)',\n                \"transform\": 'translate3d(0,-' + height + 'px,0)'\n              });\n\n              prev.css({\n                \"-webkit-transform\": 'translate3d(0,' + height + 'px,0)',\n                \"transform\": 'translate3d(0,' + height + 'px,0)'\n              });\n              setTimeout(function () {\n                $.replace(prevClone, item);\n                $.replace(itemClone, prev);\n                /**\n                 * Remove Android ripple from moved list item.\n                 */\n                $('ripple-sheath').remove();\n              }, 250);\n            })();\n          }\n        });\n\n        /**\n         * Move list item down:\n         */\n        $(list).on('tap', '.move-down', function (e) {\n          __editMade = true;\n          const item = $(this).closest('li');\n          const next = item.next();\n          if (item.is('li:last-child')) {\n            return;\n          } else {\n            (function () {\n              /**\n               * Clone the items to replace the transitioned ones alter:\n               */\n              const itemClone = item.clone();\n              const nextClone = next.clone();\n              /**\n               * Mark list as edited:\n               */\n              $(list).data('list-edit', true);\n\n              const height = item[0].offsetHeight;\n              item.css({\n                '-webkit-transform': 'translate3d(0,' + height + 'px,0)',\n                transform: 'translate3d(0,' + height + 'px,0)'\n              });\n              next.css({\n                \"-webkit-transform\": 'translate3d(0,-' + height + 'px,0)',\n                \"transform\": 'translate3d(0,-' + height + 'px,0)'\n              });\n              setTimeout(function () {\n                \n                $.replace(nextClone, item);\n                $.replace(itemClone, next);\n                /**\n                 * Remove Android ripple from moved list item.\n                 */\n                $('ripple-sheath').remove();\n              }, 250);\n            })();\n          }\n        });\n\n        /**\n         * Handle deletion of list item:\n         */\n        $(list).on('tap', '.delete', function () {\n          const $this = this;\n          __editMade = true;\n          const listItem = $(this).parent();\n\n          /**\n           * Mark list as edited:\n           */\n          $(list).data('list-edit', true);\n          let direction = '-1200%';\n          if ($('html').attr('dir') === 'rtl') direction = '1000%';\n          $(this).siblings().css({\n            '-webkit-transform': 'translate3d(' + direction + ',0,0)',\n            '-webkit-transition': 'all 1s ease-out',\n            'transform': 'translate3d(' + direction + ',0,0)',\n            'transition': 'all 1s ease-out'\n          });\n\n          setTimeout(function () {\n            listItem.remove();\n          }, 500);\n        });\n\n        /**\n         * Cancel edits:\n         */\n        nav.find('.cancel').on('tap', function () {\n          __editMade = false;\n          nav.find('.back').show();\n          $(this).hide();\n          __view.render();\n          nav.find('.done').addClass('edit').removeClass('done').text(settings.editLabel);\n          $(list).removeClass('showIndicators');\n          $(list).find('li').removeClass('selected');\n          $(this).hide();\n          if (settings.deletable) {\n            $(list).find('li').append(deleteButton);\n          }\n        });\n      });\n    };\n    /**\n     * Initialize the editable list:\n     */\n    makeEditable(settings.callback, element, button);\n\n    return {\n      getModel: function getModel() {\n        return __model;\n      },\n\n      getView: function getView() {\n        return __view;\n      }\n    };\n  }\n});\n\n/**\n * ChocolateChip-UI Widget - Multi-Select List.\n */\n$.extend({\n  /**\n   * Setup a multi-select list:\n   */\n  MultiSelectList: options => {\n    if (!options || !options.element) return;\n    let settings = {\n      element: undefined,\n      selected: [],\n      name: $.uuid() + '[]',\n      callback: $.noop,\n      model: undefined\n    };\n    let __selection = [];\n    $.extend(settings, options);\n    let selections = settings.selected;\n    const name = settings.name;\n    const list = $(settings.element);\n    list.addClass('multi-select-list');\n    list.find('li').forEach(function(ctx, idx) {\n      let value = ctx.getAttribute(\"data-select\") !== null ? ctx.getAttribute(\"data-select\") : \"\";\n      selections.forEach(function(item) {\n        if (item.index === idx) {\n          __selection.push({\n            index: idx,\n            value: value\n          });\n        }\n      });\n\n      ctx.setAttribute('role', 'checkbox');\n      $(ctx).removeClass('selected').find('input').removeAttr('checked');\n      $(ctx).prepend(`<aside>\n        <span class=\"multi-selection-indicator\">\n          <svg width=\"30px\" height=\"30px\" viewBox=\"0 0 30 30\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n            <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g id=\"multi-select-icon\" stroke=\"#979797\">\n              <g id=\"multi-select-circle-+-multi-select-checkmark\" transform=\"translate(2.000000, 2.000000)\">\n                <circle id=\"multi-select-circle\" cx=\"13\" cy=\"13\" r=\"13\"></circle>\n                <path d=\"M4.71521456,15.9877529 L13.0000002,20.7028494 L19.977049,5.70284941\" id=\"multi-select-checkmark\"></path>\n                </g>\n              </g>\n            </g>\n          </svg>\n        </span>\n      </aside>`);\n      $(ctx).append(`<input type=\"checkbox\" name=\"${ name }\" value=\"${ value }\">`);\n      if (selections.length) {\n        selections.forEach(function(sel) {\n          if (sel === idx) {\n            ctx.setAttribute('aria-checked', 'true');\n            ctx.classList.add('selected');\n            $(ctx).find('input').prop('checked', true).attr('value', value);\n            __selection.push({\n              index: sel,\n              value: value\n            });\n          }\n        });\n\n      }\n    });\n\n    list.on('tap', 'li', function() {\n      const item = $(this);\n      if (item.hasClass('selected')) {\n        item.removeClass('selected').removeAttr('aria-checked');\n        item.find('input').removeProp('checked');\n        let dataObj = {\n          index: item.index(),\n          value: item.attr('data-select')\n        }\n        let pos;\n        __selection.forEach(function(item, idx) {\n          if (item.index === dataObj.index && item.value === dataObj.value) {\n            pos = idx;\n          }\n        });\n        __selection.splice(pos, 1);\n\n        settings.callback.apply(this, arguments);\n      } else {\n        __selection.push({\n          index: item.index(),\n          value: item.attr('data-select')\n        });\n        __selection.unique();\n        item.addClass('selected');\n        item.attr('aria-checked', true);\n        item.find('input').prop('checked', true);\n\n        settings.callback.apply(this, arguments);\n      }\n\n    });\n\n    return {\n      val: () => __selection,\n      getSelection: () => __selection\n    };\n  }\n});\n\n/**\n * ChocolateChip-UI Widget - Adjust Navbar for iOS.\n */\n$(() => {\n\n  /**\n   * Method to center H1 in Navbar.\n   * Check on widths of siblings:\n   */\n  $.extend({\n\n    /**\n     * Track whether to add a global nav for styling navbars.\n     */\n    globalNav: false,\n\n    AdjustNavbarLayout: function(screen) {\n      if (!$('link[href*=ios]')[0]) return;\n      if (document.body && document.body.hasAttribute('nocenterheader')) {\n        return;\n      }\n      screen = $(screen);\n      if (!screen[0]);\n      const h1 = screen.find('h1');\n      if (h1.hasClass('do-not-adjust')) return;\n      const siblings = h1.siblings();\n      let whichSide;\n      let oppositeSide;\n      const rtl = $('html').attr('dir') === 'rtl';\n      let amount = 0;\n      let hidden = false;\n      let visibleSibling;\n\n      const calculateLongest = function calculateLongest(a, b) {\n        let widthA = a[0].clientWidth;\n        let widthB = b[0].clientWidth;\n        if (!widthA) {\n          widthA = 0;\n          whichSide = 'margin-right';\n          oppositeSide = 'margin-left';\n          if (rtl) {\n            whichSide = 'margin-left';\n            oppositeSide = 'margin-right';\n          }\n        }\n        if (!widthB) {\n          widthB = 0;\n          whichSide = 'margin-left';\n          oppositeSide = 'margin-right';\n          if (rtl) {\n            whichSide = 'margin-right';\n            oppositeSide = 'margin-left';\n          }\n        }\n        if (widthB > widthA) {\n          whichSide = 'margin-left';\n          oppositeSide = 'margin-right';\n          if (rtl) {\n            whichSide = 'margin-right';\n            oppositeSide = 'margin-left';\n          }\n          amount = widthB - widthA;\n        } else if (widthA > widthB) {\n          whichSide = 'margin-right';\n          oppositeSide = 'margin-left';\n          if (rtl) {\n            whichSide = 'margin-left';\n            oppositeSide = 'margin-right';\n          }\n          amount = widthA - widthB;\n        } else {\n          amount = 0;\n        }\n      };\n\n      function handleOneSibling(sib) {\n        const sibling = sib || h1.siblings();\n        amount = sibling[0].clientWidth;\n        if (sibling.is(':first-child')) {\n          whichSide = 'margin-right';\n          oppositeSide = 'margin-left';\n          if (rtl) {\n            whichSide = 'margin-left';\n            oppositeSide = 'margin-right';\n          }\n        } else if (sibling.is(':last-child')) {\n          whichSide = 'margin-left';\n          oppositeSide = 'margin-right';\n          if (rtl) {\n            whichSide = 'margin-right';\n            oppositeSide = 'margin-left';\n          }\n        }\n      }\n\n      /**\n       * If one sibling:\n       */\n      if (siblings.length === 1) {\n        handleOneSibling();\n\n        /**\n         * If two siblings:\n         */\n      } else if (siblings.length === 2) {\n          siblings.forEach(function (item) {\n            if ($(item).css('display') === 'none') {\n              hidden = true;\n            } else {\n              visibleSibling = $(item);\n            }\n          });\n          if (hidden) {\n            handleOneSibling(visibleSibling);\n          } else {\n            calculateLongest(siblings.eq(0), siblings.eq(1));\n          }\n\n          /**\n           * H1 is alone:\n           */\n      } else {\n        whichSide = 'margin-left';\n        oppositeSide = 'margin-right';\n        amount = 0;\n      }\n      let props = {};\n      props[whichSide] = amount;\n      props[oppositeSide] = 0;\n      let sibwidth = 0;\n      if (siblings.size()) {\n        siblings.forEach(function (item) {\n          sibwidth += $(item)[0].clientWidth;\n        });\n      }\n      let headerWidth = screen.find('nav').width() / 2;\n      if (sibwidth + 20 > headerWidth) {\n        h1.css({\n          'margin-left': 0,\n          'margin-right': 0\n        });\n      } else {\n        h1.css(props);\n      }\n    }\n  });\n  setTimeout(function() {\n    if (!$('#globalNav')[0]) {\n      $('body').prepend('<nav id=\"globalNav\"></nav>')\n    }\n    $('screen').forEach(function(screen) {\n      $.AdjustNavbarLayout(screen);\n    });\n  });\n});\n\n/**\n * ChocolateChip-UI Widget - Navigation Module.\n */\n\n$(() => {\n  /**\n   * Private variable to track navigation state:\n   */\n  let isNavigating = false;\n  /**\n   * get screen by id:\n   */\n  const getScreen = screen => $('#' + screen);\n\n  /**\n   * Handle state of screens:\n   */\n  const makeScreenCurrent = screen => {\n    screen = $(screen);\n    screen.addClass('current');\n    screen.removeClass('previous');\n    screen.removeClass('next');\n  };\n  const makeScreenPrevious = screen => {\n    screen = $(screen);\n    screen.removeClass('current');\n    screen.removeClass('next');\n    screen.addClass('previous');\n  };\n  const makeScreenNext = screen => {\n    screen = $(screen);\n    screen.removeClass('current');\n    screen.removeClass('previous');\n    screen.addClass('next');\n  };\n\n  $.extend({\n\n    /**\n     * Navigate to Specific Article\n     */\n    GoToScreen: destination => {\n      if ($.isNavigating) return;\n      $.isNavigating = true;\n      setTimeout(function () {\n        $.isNavigating = false;\n      }, 500);\n      $.ChuiRoutes.push(destination);\n      const currentScreen = $.screens.getCurrent();\n      const destinationScreen = function () {\n        let temp;\n        const regex = /:/img;\n        temp = regex.test(destination) ? destination.split(':')[0] : destination;\n        return getScreen(temp);\n      }();\n      if (currentScreen[0]) currentScreen[0].scrollTop = 0;\n      if (destinationScreen[0]) destinationScreen[0].scrollTop = 0;\n      makeScreenPrevious(currentScreen);\n      makeScreenCurrent(destinationScreen);\n      $.Router.dispatch(destination);\n    },\n\n    /**\n     * Navigate Back to Previous Article\n     */\n    GoBack: () => {\n      if ($.isNavigating) return;\n      $.isNavigating = true;\n      const currentScreen = $.screens.getCurrent();\n      $.ChuiRoutes.pop();\n      const destination = $.ChuiRoutes[$.ChuiRoutes.length - 1];\n      const destinationScreen = function () {\n        let temp;\n        const regex = /:/img;\n        temp = regex.test(destination) ? destination.split(':')[0] : destination;\n        return getScreen(temp);\n      }();\n      if (currentScreen[0]) currentScreen[0].scrollTop = 0;\n      if (destinationScreen[0]) destinationScreen[0].scrollTop = 0;\n      makeScreenNext(currentScreen);\n      makeScreenCurrent(destinationScreen);\n      $.Router.dispatch(destination);\n      setTimeout(function () {\n        $.isNavigating = false;\n      }, 500);\n    },\n\n    isNavigating: false,\n\n    /**\n     * Navigate Back to Non-linear Article\n     */\n    GoBackToScreen: destination => {\n      const position = $.ChuiRoutes.findIndex(function(dest) {\n        return dest = destination\n      });\n      const destinationScreen = getScreen(destination);\n      while ($.ChuiRoutes.length > position + 1) {\n        let route = $.ChuiRoutes.pop();\n        route = route.split(':')[0];\n        let screen = getScreen(route);\n        makeScreenNext(screen);\n      }\n      makeScreenCurrent(destinationScreen);\n      $.Router.dispatch(destination);\n    }\n  });\n\n  /**\n   * Initialize Back Buttons:\n   */\n  $('body').on('tap', '.back', function () {\n    if (this.hasAttribute('disabled')) return;\n    $.GoBack();\n  });\n\n  /**\n   * Handle navigation events:\n   */\n  const handleNavigationEvent = element => {\n    element = $(element);\n    if ($.isNavigating) return;\n    if (!element.hazAttr('data-goto')[0]) return;\n    if (element.closest('ul').is('.deletable')) return;\n    let destination = element.attr('data-goto');\n    if (!destination) return;\n    element.addClass('selected');\n    setTimeout(() => element.removeClass('selected'), 1000);\n    /**\n     * Handle navigation:\n     */\n    $.GoToScreen(destination);\n  };\n\n  $('body').on('tap', 'li', function () {\n    handleNavigationEvent($(this));\n  });\n  \n  $('body').on('doubletap', 'li', function () {\n    if (!$.isNavigating) {\n      handleNavigationEvent($(this));\n    }\n  });\n});\n\n/**\n * ChocolateChip-UI Widget - Paging.\n */\n$.extend({\n  /**\n   * Setup a paging control:\n   */\n  Paging: options => {\n    if (!options || !options.element) return;\n    const screen = $(options.element);\n    const pager = \n      '<div class=\"pager\">\\n\\\n        <button class=\"previous\">\\n\\\n          <svg width=\"24px\" height=\"36px\" viewBox=\"0 0 24 36\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g id=\"pagination-icons\" stroke=\"#979797\"><path d=\"M19.7729197,3 L4.25431067,17.8699971 L19.7729196,32.9558941\" id=\"page-previous\"></path></g></g></svg>\\n\\\n        </button>\\n\\\n        <button class=\"next\">\\n\\\n          <svg width=\"24px\" height=\"36px\" viewBox=\"0 0 24 36\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\"><g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g id=\"pagination-icons\" stroke=\"#979797\"><path d=\"M4.08862955,3.06871359 L20.0261609,18.0528447 L4.08862956,32.9999994\" id=\"page-next\"></path></g></g></svg>\\n\\\n        </button>\\n\\\n      </div>';\n\n    $(screen).find('nav').append(pager);\n\n    const currentSection = $(screen).find('section');\n\n    const articles = function() {\n      return currentSection.find('article').length;\n    };\n    $.AdjustNavbarLayout(screen);\n\n    /**\n     * Handle paging forward:\n     */\n    const pageForward = pagerButton => {\n      if (articles() < 2) return;\n      pagerButton.prev().removeClass('selected');\n      pagerButton.addClass('selected');\n      let currentArticle = undefined;\n      if (pagerButton[0] && pagerButton[0].classList.contains('disabled')) return;\n      currentArticle = currentSection.find('article.current');\n      if ($(screen).find('section').find('article').eq(-1).is(currentArticle)) {\n        /**\n         * Start again!\n         */\n        currentArticle.removeClass('current').addClass('next');\n        currentArticle.siblings().removeClass('previous').addClass('next');\n        currentSection.find('article').eq(0).addClass('current').removeClass('previous').removeClass('next');\n      } else {\n        currentArticle.removeClass('current').addClass('previous');\n        currentArticle.next().removeClass('next').addClass('current');\n      }\n      setTimeout(function() {\n        pagerButton.removeClass('selected');\n      }, 250);\n    };\n\n    const pageBack = pagerButton => {\n      if (articles() === 1) return;\n      pagerButton.next().removeClass('selected');\n      pagerButton.addClass('selected');\n      let currentArticle = undefined;\n      currentArticle = currentSection.find('article.current');\n\n      if ($(screen).find('section').find('article').eq(0).is(currentArticle)) {\n        currentArticle.removeClass('current');\n        currentArticle.siblings().eq(-1).addClass('current').removeClass('next');\n        currentArticle.siblings().eq(-1).siblings().removeClass('next').addClass('previous');\n      } else {\n        currentArticle.removeClass('current').addClass('next');\n        currentArticle.prev().removeClass('previous').addClass('current');\n      }\n      setTimeout(() => {\n        pagerButton.removeClass('selected');\n      }, 250);\n    };\n\n    $('.pager').on($.eventStart, 'button:last-of-type', () => {\n      pageForward($(this));\n    });\n    $('.pager').on($.eventStart, 'button:first-of-type', () => {\n      pageBack($(this));\n    });\n\n  }\n});\n\n/**\n * ChocolateChip-UI Widget - Popover.\n */\n$.extend({\n  /**\n   * Setup a popover (dropdown menu):\n   */\n  Popover: options => {\n    /**\n      id: myUniqueID,\n      title: 'Great',\n      callback: myCallback,\n    */\n    options = options || {};\n    let settings = {\n      id: $.uuid(),\n      callback: $.noop,\n      title: '',\n    };\n    $.extend(settings, options);\n    if (options && options.content) {\n      settings.content = options.content;\n    } else {\n      settings.content = '';\n    }\n    const header = `<header><h1>${ settings.title }</h1></header>`;\n    const popover = `<div class=\"popover\" id=\"${ settings.id }\">${ header }<section></section></div>`;\n    const popoverID = '#' + settings.id;\n\n    /**\n     * Calculate position of popover relative to the button that opened it:\n     */\n    const __calcPopPos = element => {\n      const offset = $(element).offset();\n      let left = offset.left;\n      let calcLeft;\n      let calcTop;\n      let popover = $(popoverID);\n      const popoverOffset = popover.offset();\n      calcLeft = popoverOffset.left;\n      calcTop = offset.top + $(element)[0].clientHeight;\n      if ((popover.width() + offset.left) > window.innerWidth) {\n        popover.css({\n          'left': ((window.innerWidth - popover.width()) - 20) + 'px',\n          'top': (calcTop) + 25 + 'px'\n        });\n      } else {\n        popover.css({\n          'left': left + 'px',\n          'top': (calcTop - 30) + 'px'\n        });\n      }\n    };\n\n    if ($('.mask')[0]) {\n      $.ClosePopover();\n      $('body').Unblock();\n      return;\n    }\n    $.Block('.5');\n    $('body').append(popover);\n    if ($('body').hasClass('themeIsAndroid')) {\n      setTimeout(() => {\n        $(popoverID).addClass('opened');\n      }, 200);\n    }\n    $(popoverID).data('triggerEl', settings.trigger);\n    $(popoverID).find('section').append(settings.content);\n    settings.callback.call(settings.callback, settings.trigger);\n    __calcPopPos(settings.trigger);\n\n  },\n\n  AlignPopover: () => {\n    let popover = $('.popover');\n    if (!popover.length) return;\n    const triggerID = popover.data('triggerEl');\n    const offset = $(triggerID).offset();\n    const left = offset.left;\n    if (($(popover).width() + offset.left) > window.innerWidth) {\n      popover.css({\n        'left': ((window.innerWidth - $(popover).width()) - 20) + 'px'\n      });\n    } else {\n      popover.css({\n        'left': left + 'px'\n      });\n    }\n  },\n\n  ClosePopover: () => {\n    $.Unblock();\n    $('.popover').css({transform: 'scaleY(0)'});\n    setTimeout(() => {\n      $('.popover').off();\n      $('.popover').remove();\n    }, 100);\n  }\n});\n\n$(() => {\n  /**\n   * Reposition popovers on window resize:\n   */\n  window.onresize = () => {\n    $.AlignPopover();\n  };\n  // const events = \"$.eventStart singletap $.eventEnd\";\n  $('body').on($.eventStart, '.mask', e => {\n    // if ($('.popover')[0]) {\n    //   if (e && e.nodeType === 1) return;\n    // } else {\n      // alert('closing popover')\n      $.ClosePopover();\n    // }\n  });\n});\n\n/**\n * ChocolateChip-UI Widget - Popup.\n */\n$.extend({\n  /**\n   * Setup  a popup dialog:\n   */\n  Popup: function(options) {\n    /**\n    options {\n      id: 'alertID',\n      title: 'Alert',\n      message: 'This is a message from me to you.',\n      cancelButton: 'Cancel',\n      continueButton: 'Go Ahead',\n      width: '100px',\n      callback: function() { // do something },\n      empty: true\n    }\n    */\n    if (!options) return;\n    let settings = {};\n    settings.id = $.uuid();\n    settings.content = true;\n    $.extend(settings, options);\n    let width = '';\n    if (settings.width) {\n      width = `style=\"width:${settings.width}px;\"`;\n    }\n\n    const id = settings.id;\n    const title = settings.title ? `<header><h1>${settings.title}</h1></header>` : '';\n    const message = settings.message ? `<p role=\"note\">${options.message}</p>` : '';\n    const cancelButton = options.cancelButton ? `<button class=\"cancel\" role=\"button\">${settings.cancelButton}</button>` : '';\n    const continueButton = settings.continueButton ? `<button class=\"continue\" role=\"button\">${settings.continueButton}</button>` : '';\n    const callback = settings.callback || $.noop;\n    let popup;\n    if (settings.empty) {\n      popup = `<div id=\"${id}\" class=\"popup\"><div ${width} class=\"dialog\" role=\"alertdialog\"></div></div>`;\n    } else {\n      popup = `<div class=\"popup\" id=\"${id}\"><div class=\"dialog\" role=\"alertdialog\"><div class=\"panel\">${title}${message}</div><footer>${cancelButton}${continueButton}</footer></div></div>`;\n    }\n    $('body').append(popup);\n    if (settings.empty) {\n      $('.dialog').css({\n        \"display\": \"-webkit-flex\",\n        \"-webkit-justify-content\": \"center\", \n        \"-webkit-align-items\": \"center\", \n        \"display\": \"flex\",\n        \"justify-content\": \"center\", \n        \"align-items\": \"center\"\n      })\n    }\n    if (callback && continueButton) {\n      $('#' + id).find('.continue').on('tap', function () {\n        const $this = $(this);\n        if ($.isAndroid || $.isChrome) {\n          $this.addClass('selected');\n          setTimeout(function () {\n            $this.removeClass('selected');\n            $('.popup').ClosePopup();\n            callback.call(callback);\n          }, 300);\n        } else {\n          $('#' + id).ClosePopup();\n          callback.call(callback);\n        }\n        $.delay(1000)\n        .then(function() {\n          $('#' + id).remove();\n        })\n      });\n    }\n    $('#' + id).find('.cancel').on('tap', function () {\n      const $this = $(this);\n      if ($.isAndroid || $.isChrome) {\n        $this.addClass('selected');\n        setTimeout(function () {\n          $this.removeClass('selected');\n          $('#' + id).ClosePopup();\n        }, 300);\n      } else {\n        $('#' + id).ClosePopup();\n      }\n      $.delay(1000)\n      .then(function() {\n        $('#' + id).remove();\n      });\n    });\n\n    $('.popup').on('tap', function (e) {\n      $(this).removeClass('opened')\n    });\n  },\n\n});\n$.fn.extend({\n  /**\n   * Show Popup:\n   */\n  ShowPopup: function ShowPopup() {\n    const self = $(this);\n    self.removeClass('forPopup')\n    self.addClass('opened');\n    setTimeout(function() {\n      self.find('.popup').addClass('opened')\n    }, 0)\n  },\n\n  /**\n   * Close Popup:\n   */\n  ClosePopup: function ClosePopup() {\n    const self = $(this);\n    self.removeClass('opened');\n    self.find('.popup').removeClass('opened')\n  }\n});\n\n/**\n * ChocolateChip-UI Widget - Range Input.\n */\n$.fn.extend({\n  /**\n   * Setup a range input:\n   */\n  Range: function() {\n    if (this[0].nodeName !== 'INPUT') return;\n    let input = $(this);\n    let newPlace;\n    const width = input.width();\n    const newPoint = (input.val() - input.attr(\"min\")) / (input.attr(\"max\") - input.attr(\"min\"));\n    let offset = -1.3;\n    if (newPoint < 0) {\n      newPlace = 0;\n    } else if (newPoint > 1) {\n      newPlace = width;\n    } else {\n      newPlace = width * newPoint + offset;\n      offset -= newPoint;\n    }\n    if ($.theme === 'android') {\n      input.css({\n        'background-size': Math.round(newPlace) + 'px 3px, 100% 3px'\n      });\n    } else {\n      input.css({\n        'background-size': Math.round(newPlace) + 'px 10px'\n      });\n    }\n  }\n});\n$(() => {\n  $('input[type=range]').forEach(ctx => {\n    $(ctx).Range();\n  });\n  $('body').on('input', 'input[type=range]', function() {\n    $(this).Range();\n  });\n});\n\n/**\n * ChocolateChip-UI Widget - Router.\n */\n$.extend({\n  /**\n   * Define Router:\n   */\n  ChuiRoutes: [],\n\n  Router: () => {\n\n    return {\n      addRoute: options => {\n        if ($.type(options) === 'array') {\n          options.forEach(item => $.on(item.route, item.callback));\n        }\n      },\n\n      getFullRoute: () => $.ChuiRoutes.join('/'),\n\n      getCurrentLoc: () => {\n        const temp = this.getFullRoute().split('/');\n        return temp[temp.length - 1];\n      },\n\n      dispatch: route => {\n        let temp;\n        let id;\n        if (route.match(/\\:/)) {\n          temp = route.split(':');\n          id = temp[1];\n          route = temp[0];\n        }\n        $.send(route);\n      }\n    };\n  }\n});\n\n$.extend($.Router, {\n  dispatch: route => {\n    if (!route) return;\n    let temp;\n    let id;\n    if (route.match(/\\:/)) {\n      temp = route.split(':');\n      id = temp[1];\n      route = temp[0];\n    }\n    $.send(route, id)\n  }\n});\n\n$.extend($.ChuiRoutes, {\n  getFullRoute: function getFullRoute() {\n    return this.join('/');\n  }\n});\n\n$(() => {\n  /**\n   * Set up initial route:\n   */\n  if ($('screen').size() && !$.ChuiRoutes.length) {\n    $.ChuiRoutes.push($('screen')[0].id);\n  }\n});\n\n/**\n * ChocolateChip-UI Widget - Screens.\n */\n$(() => {\n  /**\n   * Interface for the app's screens:\n   */\n  $.extend({\n    screens: $('screen')\n  });\n  $.extend($.screens, {\n    getCurrent: function() {\n      return this.hazClass('current');\n    },\n\n    getNext: function() {\n      return this.hazClass('next');\n    },\n\n    getPrevious: function() {\n      return this.hazClass('previous');\n    }\n  });\n});\n\n/**\n * ChocolateChip-UI Widget - Segmented Buttons.\n */\n$(() => {\n  $.extend({\n    /**\n     * Setup a segmented button:\n     */\n    Segmented: function(options) {\n      if (!options || !options.element) return;\n      /**\n        options = {\n          element: '#segmentHolder'\n          labels : ['first','second','third'],\n          selected: 0,\n          callback: function() { alert('Boring!'); }\n        }\n      */\n      let settings = {\n        selected: 0,\n        callback: $.noop\n      };\n      $.extend(settings, options);\n\n      let segmented;\n      const labels = (settings.labels) ? settings.labels : [];\n      let __selection;\n      let __element = settings.element;\n\n      function createSegmentedButton() {\n        let androidSelectionIndicator = '';\n        if ($.theme = 'android') {\n          androidSelectionIndicator = '<span class=\"androidSelectionBorder\"></span>';\n        }\n        let __segmented = ['<div class=\"segmented\">'];\n        labels.forEach(function(ctx, idx) {\n          if (settings.selected === idx) {\n            __segmented.push('<button role=\"radio\" aria-checked=\"true\" class=\"selected\">');\n            __selection = idx;\n          } else {\n            __segmented.push('<button role=\"radio\">');\n          }\n\n          __segmented.push(ctx);\n          __segmented.push('</button>');\n        });\n        __segmented.push(androidSelectionIndicator + '</div>');\n        segmented = __segmented.join('');\n        $(settings.element).append(segmented);\n\n\n      }\n      createSegmentedButton();\n\n      /**\n       * For Android Material Design:\n       */\n      let androidSelectionBorder;\n      if ($.theme === 'android') {\n        androidSelectionBorder = $(__element).find('.androidSelectionBorder');\n        let selectedButton = $(__element).find('button').eq(settings.selected);\n        let width = selectedButton.width();\n        let left = selectedButton.offset().left -16;\n        if ($.dir === 'rtl') {\n          left = selectedButton.offset().left +16;\n        }\n        androidSelectionBorder.css({width: width + 'px', left: left + 'px'});\n      }\n\n      const callback = settings.callback;\n      $(__element).on('tap', '.segmented > button', function(e) {\n        let $this = $(this);\n        if (this.parentNode.classList.contains('paging')) return;\n        $this.siblings('button').removeClass('selected');\n        $this.siblings('button').removeAttr('aria-checked');\n        $this.addClass('selected');\n        __selection = $this.index();\n        __element = $(this);\n        $this.attr('aria-checked', true);\n        callback.call(this, e);\n\n        /**\n         * For Android Material Design:\n         */\n        if ($.theme === 'android') {\n          let width = $this.width();\n          let left = $this.offset().left -16;\n          if ($.dir === 'rtl') {\n            left = $this.offset().left +16;\n          }\n          androidSelectionBorder.css({width: width + 'px', left: left + 'px'});\n        }\n      });\n\n      return {\n        val: function() {\n          return {\n            index: __selection,\n            element: __element\n          }\n        },\n        getSelection: function() {\n          return {\n            index: __selection,\n            element: __element\n          }\n        }\n      }\n    }\n  });\n});\n\n/**\n * ChocolateChip-UI Widget - Select List.\n */\n$.extend({\n  /**\n   * Setup a select list:\n   */\n  SelectList: function(options) {\n    if (!options || !options.element) return;\n    let settings = {\n      element: undefined,\n      selected: undefined,\n      name: $.uuid(),\n      callback: $.noop,\n      model: undefined\n    };\n    let __selection = {};\n\n    $.extend(settings, options);\n    const name = settings.name;\n    let list = $(settings.element);\n    list.addClass('select-list');\n    list.find('li').forEach((ctx, idx) => {\n      const value = ctx.getAttribute(\"data-select\") !== null ? ctx.getAttribute(\"data-select\") : \"\";\n      ctx.setAttribute('role', 'radio');\n      $(ctx).removeClass('selected').find('input').removeAttr('checked');\n      $(ctx).append(`<aside>\n          <span class=\"selection-indicator\">\n            <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 20 20\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n              <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                <g id=\"selection-indicator\">\n                  <path d=\"M2,13 L9.9294326,16.8406135 L17.1937075,1.90173332\" id=\"checkmark\" stroke=\"#007AFF\" stroke-width=\"2\"></path>\n                  <circle id=\"outer-circle\" stroke=\"#007AFF\" stroke-width=\"2\" cx=\"10\" cy=\"10\" r=\"9\"></circle><circle id=\"inner-circle\" fill=\"#007AFF\" cx=\"10\" cy=\"10\" r=\"5\"></circle>\n                </g>\n              </g>\n            </svg>\n          </span>\n        </aside>`);\n      if (settings.selected === idx) {\n        ctx.setAttribute('aria-checked', 'true');\n        ctx.classList.add('selected');\n        if (!$(ctx).find('input')[0]) {\n          $(ctx).append(`<input type=\"radio\" checked=\"checked\" name=\"${ name }\" value=\"${ value }\">`);\n        } else {\n          $(ctx).find('input').prop('checked', true).attr('value', value);\n        }\n        __selection = {\n          index: settings.selected,\n          value: value\n        };\n      } else {\n        if (!$(ctx).find('input')[0]) {\n          $(ctx).append(`<input type=\"radio\" name=\"${ name }\" value=\"${ value }\">`);\n        }\n      }\n    });\n    list.on('tap', 'li', function() {\n      const item = $(this);\n      __selection = {\n        index: item.index(),\n        value: item.find('input').val()\n      };\n      item.siblings('li').removeClass('selected');\n      item.siblings('li').removeAttr('aria-checked');\n      item.siblings('li').find('input').removeProp('checked');\n      item.addClass('selected');\n      item.attr('aria-checked', true);\n      item.find('input').prop('checked', true);\n      settings.callback.apply(this, arguments);\n    });\n\n    return {\n      val: () => __selection,\n      getSelection: () => __selection\n    };\n  }\n});\n\n/**\n * ChocolateChip-UI Widget - Sheets.\n */\n$.extend({\n  /**\n   * Create a sliding sheet:\n   */\n  Sheet: options => {\n    /**\n      var options {\n        id : 'starTrek',\n        background: 'transparent',\n        handle: false,\n        slideDown: false // default is slideUp\n      }\n    */\n    if (!options) return;\n    let settings = {\n      id: $.uuid(),\n      background: '',\n      handle: true,\n      slideFrom: false\n    };\n\n    $.extend(settings, options);\n\n    if (settings.background) settings.background = ' style=\"background-color:' + settings.background + '\" ';\n    if (settings.slideFrom === 'top') {\n      settings.slideDown = ' class=\"slideDown\" ';\n    } else {\n      settings.slideFrom = '';\n    }\n    if (settings.handle === false) settings.handle = '';\n    else settings.handle = \n      `<chui-sheet-handle>\n        <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 76 27\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" xml:space=\"preserve\" style=\"fill-rule:evenodd;clip-rule:evenodd;stroke-linecap:butt;stroke-linejoin:butt;stroke-miterlimit:1.41421;\">\n          <g id=\"sheet-handle\" transform=\"matrix(1,0,0,1,-29.7966,-15.7797)\">\n            <path id=\"sheet-handle-path\" d=\"M36.25,26.242L67.645,34.215L98.176,25.789\" style=\"fill:none;\"/>\n          </g>\n        </svg>\n      </chui-sheet-handle>`;\n\n    const sheet = `<sheet id=\"${ settings.id }\"${ settings.slideDown }${ settings.background }>${ settings.handle }<section></section></sheet>`;\n\n    $('body').append(sheet);\n\n    $('#' + settings.id).find('chui-sheet-handle').on($.eventStart, () => {\n      $.HideSheet('#' + settings.id);\n    });\n  },\n  ShowSheet: id => {\n    let sheet = id ? id : '.sheet';\n    $('screen.current').addClass('blurred');\n    if ($.isAndroid || $.isChrome) {\n      $(sheet).css('display', 'block');\n      setTimeout(function() {\n        $(sheet).addClass('opened');\n      }, 20);\n    } else {\n      $(sheet).addClass('opened');\n    }\n  },\n  HideSheet: id => {\n    $(id).removeClass('opened');\n    $('screen.current').addClass('removeBlurSlow');\n    setTimeout(() => {\n      $('screen').removeClass('blurred');\n      $('screen').removeClass('removeBlurSlow');\n    }, 500);\n  }\n});\n\n/**\n * ChocolateChip-UI Widget - Slide Out Menu.\n */\n$.extend({\n  /**\n   * Setup a slide out menu:\n   */\n  SlideOut: () => {\n    const slideoutID = $.uuid();\n    const buttonID = $.uuid();\n    const slideOutButton = $(`<button id=\"${ buttonID }\" class=\"slide-out-button\"></button>`);\n    const slideOut = `<slideout id=\"${ slideoutID }\"><section></section></slideout>`;\n    $('body').prepend(slideOut);\n    $('body').append(slideOutButton);\n    /**\n     * Get Slide Out & Slide Out button:\n     */\n    let slideout = $(`#${ slideoutID }`);\n    let slideOutBtn = $(`#${ buttonID }`);\n\n    /**\n     * Set up state for Slide Out and screens:\n     */\n    slideout.attr('aria-hidden', true);\n    $(\"screens\").attr('aria-hidden', true);\n    $(\"screens\").eq(0).addClass('show').attr('aria-hidden', \"false\");\n\n    /**\n     * Handle Slide Out button events:\n     */\n    slideOutBtn.on('tap', function() {\n      $(this).toggleClass('focused');\n      if (slideout.hasClass('open')) {\n        slideout.removeClass('open');\n        slideout.removeAttr('aria-hidden');\n        $('button.back').removeClass('disabled').removeProp('disabled');\n        $('button.backTo').removeClass('disabled').removeProp('disabled');\n      } else {\n        slideout.addClass('open')\n        slideout.attr('aria-hidden', true);\n        $('button.back').addClass('disabled').prop('disabled', true);\n        $('button.backTo').addClass('disabled').prop('disabled', true);\n      }\n    });\n\n    $(`#${ slideoutID }`).on('tap', 'li', function() {\n      let menuItems = slideout.find('li[data-show]');\n      slideout.attr('aria-hidden', 'true')\n\n      /**\n       * Toggle Slide Out button:\n       */\n      slideOutBtn.toggleClass('focused');\n      \n      $('button.back').removeClass('disabled').removeProp('disabled');\n      $('button.backTo').removeClass('disabled').removeProp('disabled');\n\n      /**\n       * This list item shows a single screen:\n       */\n      menuItems.hazClass('selected').removeClass('selected');\n      $.screens.hazClass('show').removeClass('show').attr('aria-hidden', true);\n      const screenToShow = '#' + $(this).attr('data-show').split(':')[0];\n      /**\n       * Account for presence of navigation list state:\n       */\n      setTimeout(function() {\n        $(screenToShow)[0].classList.remove('next');\n      }, 200);\n      $(screenToShow)[0].classList.add('show')\n      $(screenToShow).attr('aria-hidden', false);\n      $('screen.current').addClass('next').removeClass('current');\n      $('screen.previous').addClass('next').removeClass('previous');\n      /**\n       * Get route to dispatch:\n       */\n      $.Router.dispatch($(this).attr('data-show'));\n      if ($.ChuiRoutes.length > 1) $.ChuiRoutes.pop()\n\n      /**\n       * Close slide out:\n       */\n      slideout.removeClass('open');\n    });\n\n    return {\n      populate: options => {\n        const slideout = $(`#${ slideoutID }`);\n        if (!slideout[0]) return;\n        if (!options) {\n          return;\n        } else {\n          slideout.find('section').append('<ul class=\"list\"></ul>');\n          let list = slideout.find('ul');\n          options.forEach(ctx => {\n            for (let key in ctx) {\n              if (key === 'header') {\n                list.append('<li class=\"menu-header\"><h2>' + ctx[key] + '</h2></li>');\n              } else {\n                list.append('<li data-show=\"' + key + '\"><h3>' + ctx[key] + '</h3></li>');\n              }\n            }\n          });\n          slideout.find('li').eq(0).addClass('selected');\n        }\n      }\n    };\n  }\n});\n\n/**\n * ChocolateChip-UI Widget - Stepper.\n */\n$.extend({\n  /**\n   * Create a stepper:\n   */\n  Stepper: options => {\n    if (!options) return;\n    if (!options.element) return;\n    if (!options.min) return;\n    if (!options.max) return;\n\n    let stepper = $(options.element);\n    const min = options.min;\n    const max = options.max;\n    const defaultValue = options.defaultValue ? options.defaultValue : options.min;\n    let increaseSymbol = '+';\n    let decreaseSymbol = '-';\n    let disabledDecrease = '';\n    let disabledIncrease = '';\n    if (min === defaultValue) {\n      disabledDecrease = ' disabled ';\n    } else if (max === defaultValue) {\n      disabledIncrease = ' disabled ';\n    }\n    const decreaseButton = '<button ' + disabledDecrease + ' class=\"decrease\"><span>-</span></button>';\n    const label = `<label>${ defaultValue }</label><input type=\"text\" value=\"${ defaultValue }\">`;\n    const increaseButton = '<button ' + disabledIncrease + '  class=\"increase\"><span>+</span></button>';\n    stepper.append(decreaseButton + label + increaseButton);\n    stepper.data('data-value', {\n      min: min,\n      max: max,\n      defaultValue: defaultValue\n    });\n\n    const increaseStepperValue = function() {\n      const currentValue = stepper.find('input').val();\n      const value = stepper.data('data-value');\n      const max = value.max;\n      let newValue;\n      newValue = parseInt(currentValue, 10) + 1;\n      stepper.find('button:first-of-type').removeAttr('disabled');\n      stepper.find('label').text(newValue);\n      stepper.find('input')[0].value = newValue;\n      if (newValue === max) {\n        $(this).attr('disabled', 'disabled');\n      }\n    };\n\n    const decreaseStepperValue = function() {\n      const currentValue = stepper.find('input').val();\n      const value = stepper.data('data-value');\n      let newValue;\n      newValue = parseInt(currentValue, 10) - 1;\n      stepper.find('button:last-of-type').removeAttr('disabled');\n      stepper.find('label').text(newValue);\n      stepper.find('input')[0].value = newValue;\n      if (newValue === min) {\n        $(this).attr('disabled', 'disabled');\n      }\n    };\n\n    stepper.find('button:last-of-type').on($.eventStart, function() {\n      increaseStepperValue.call(this, stepper);\n    });\n\n    stepper.find('button:first-of-type').on($.eventStart, function() {\n      decreaseStepperValue.call(this, stepper);\n    });\n\n    return {\n      val: () => stepper.find('input').val(),\n      getValue: () => stepper.find('input').val()\n    }\n  }\n});\n\n/**\n * ChocolateChip-UI Widget - Switches.\n */\n$.extend({\n  /**\n   * Create a switch control:\n   */\n  Switch: options => {\n    if (!options || !options.element) return;\n    let __checked = false;\n    let settings = {\n      element: undefined,\n      name: undefined,\n      value: undefined,\n      checked: false,\n      on: $.noop,\n      off: $.noop,\n      onCallback: $.noop,\n      offCallback: $.noop\n    };\n\n    $.extend(settings, options);\n    let __selection = {\n      checked: __checked,\n      value: settings.value\n    };\n\n    let __element = $(settings.element);\n    __checked = settings.checked;\n\n    /**\n     * Abrstract swipe for left-to-right and right-to-left:\n     */\n    let swipeOn = \"swiperight\";\n    let swipeOff = \"swipeleft\";\n    if (document.documentElement.dir === \"rtl\") {\n      swipeOn = \"swipeleft\";\n      swipeOff = \"swiperight\";\n    }\n\n    let checkState = settings.checked ? ' checked' : '';\n    const __switch = `<em></em><input type=\"checkbox\" name=\"${ settings.name }\" ${ checkState } value=\"${ settings.value }\">`;\n\n    __element.append(__switch);\n    __element.prop('value', settings.value);\n    __element.attr('name', settings.name)\n\n    if (__checked) {\n      __element.addClass('checked');\n      __element.attr('role', 'checkbox');\n      __element.prop('checked', true);\n    }\n\n    __element.on('tap', function() {\n      const checkbox = this.querySelector('input');\n      if (this.classList.contains('checked')) {\n        this.classList.remove('checked');\n        this.setAttribute('aria-checked', false);\n        checkbox.removeAttribute('checked');\n        __selection.checked = false;\n        __checked = false;\n        __element.prop('checked', false);\n        if (options.offCallback) {\n          settings.offCallback.call(this);\n        } else {\n          settings.off.call(this);\n        }\n      } else {\n        this.classList.add('checked');\n        checkbox.setAttribute('checked', 'checked');\n        __element.prop('checked', true);\n        this.setAttribute('aria-checked', true);\n        __selection.checked = true;\n        __checked = true;\n        if (options.onCallback) {\n          settings.onCallback.call(this);\n        } else {\n          settings.on.call(this);\n        }\n        \n      }\n    });\n    __element.on(swipeOn, function() {\n      const checkbox = this.querySelector('input');\n      if (this.classList.contains('checked')) {\n        this.classList.remove('checked');\n        this.setAttribute('aria-checked', false);\n        __element.prop('checked', false);\n        checkbox.removeAttribute('checked');\n        __selection.checked = true;\n        __checked = true;\n        if (options.onCallback) {\n          settings.onCallback.call(this);\n        } else {\n          settings.on.call(this);\n        }\n      }\n    });\n    __element.on(swipeOff, function() {\n      const checkbox = this.querySelector('input');\n      if (!this.classList.contains('checked')) {\n        this.classList.add('checked');\n        checkbox.setAttribute('checked', 'checked');\n        this.setAttribute('aria-checked', true);\n        __element.prop('checked', true);\n        __selection.checked = false;\n        __checked = false;\n        if (options.offCallback) {\n          settings.offCallback.call(this);\n        } else {\n          settings.off.call(this);\n        }\n      }\n    });\n\n    return {\n      val: () => __selection,\n      getValue: () => __selection\n    };\n  }\n});\n\n/**\n * ChocolateChip-UI Widget - Tab Bar.\n */\n$.extend({\n  /**\n   * Creates a Tab Bar for Toggling Articles:\n   */\n  TabBar: options => {\n    /**\n    var options = {\n      id: 'mySpecialTabbar',\n      labels: [\"Refresh\", \"Add\", \"Info\", \"Downloads\", \"Favorite\"],\n      icons: [\"refresh\", \"add\", \"info\", \"downloads\", \"favorite\"],\n      screens: [],\n      selected: 2,\n      showIcons: false // set to true for Android\n    }\n    */\n    if (!options) return;\n    let id = $.uuid();\n    let settings = {\n      selected: 0\n    };\n    $.extend(settings, options);\n    if (!settings.icons.length) {\n      settings.icons = settings.labels;\n    }\n    if (!settings.id) {\n      settings.id = id;\n    } else {\n      id = settings.id;\n    }\n\n    /**\n     * Private variable to keep track of screens:\n     */\n    let __tabbarScreens = $();\n\n    let screens = $();\n    const screenPrefix = '#';\n\n    if (settings.screens) {\n      settings.screens.forEach(function (screen) {\n        if (!/screenPrefix/img.test(screen)) {\n          __tabbarScreens.push($(screenPrefix + screen)[0]);\n          $(screenPrefix + screen).addClass('tabScreen');\n        } else {\n          __tabbarScreens.concat($(screen)[0]);\n          $(screen).addClass('tabScreen');\n        }\n      });\n    } else {\n      settings.labels.forEach(function (screen, idx) {\n        __tabbarScreens.push(screens.eq(idx));\n      });\n    }\n    let selectedScreen;\n    let androidSelectionIndicator = '';\n    if ($.theme === 'android') {\n      androidSelectionIndicator = '<span class=\"androidSelectionBorder\"></span>';\n    }\n    const showIcons = settings.showIcons ? ' class=\"showIcons\" ' : '';\n\n    /**\n     * Helper: Set Screen to Current:\n     */\n    const setToCurrent = element => {\n      $(element).removeClass('previous').removeClass('next').addClass('current');\n      $(element).attr('aria-hidden', 'false');\n    };\n\n    /**\n     * Helper: Set Screen to Next:\n     */\n    const setToNext = element => {\n      $(element).removeClass('current').addClass('next');\n      $(element).attr('aria-hidden', 'true');\n    };\n\n    /**\n     * Create tabs:\n     */\n    const makeTab = (label, icon, idx) => {\n      let tab = '<button role=\"tab\" class=\"' + icon;\n      if (settings.selected === idx) {\n        tab += ' selected';\n      }\n      tab += '\"';\n      if (settings.screens && settings.screens.length) {\n        tab += ` data-id=\"${ settings.screens[idx] }\"`;\n      }\n      tab += `><span class=\"icon\"></span><label>${ settings.labels[idx] }</label></button>`;\n      return tab;\n    };\n    /**\n     * Create tab bar:\n     */\n    let tabbarTmpl = $(`<tabbar role=\"tabpanel\"${ showIcons }>${ androidSelectionIndicator }</tabbar>`);\n    tabbarTmpl[0].id = settings.id;\n    tabbarTmpl.addClass('tabbar');\n\n    setToNext($('screen'));\n    selectedScreen = $('screen').eq(settings.selected);\n    setToCurrent(selectedScreen);\n\n    if (settings.labels.length) {\n      settings.labels.forEach(function (label, idx) {\n        tabbarTmpl.append(makeTab(label, settings.icons[idx], idx));\n      });\n    }\n\n    /**\n     * Append tabbar to page:\n     */\n    $('body').prepend(tabbarTmpl);\n\n    /**\n     * Get id of appended tab bar:\n     */\n    const tabbar = $('#' + settings.id);\n    const selectedTabButton = tabbar.find('button.selected');\n\n\n    /**\n     * Private variables to manage tab bar: \n     */\n    const __tabbarButtons = tabbar.find('button');\n    const __selectedTabbarButton = __tabbarButtons.eq(settings.selected);\n    const __selectedTabbarScreen = __tabbarScreens.eq(settings.selected);\n\n    /**\n     * For Android Material Design:\n     */\n    const androidSelectionBorder = tabbar.find('.androidSelectionBorder');\n    function handleTabSelectionForAndroid(tab) {\n      let width = $(tab).width();\n      let left = $(tab).offset().left;\n      androidSelectionBorder.css({width: width + 'px', left: left + 'px'});\n    }\n    if ($.theme === 'android') {\n      handleTabSelectionForAndroid(selectedTabButton);\n    }\n\n    /**\n     * Setup events on tabs:\n     */\n    $(() => {\n\n      $.ChuiRoutes = [];\n      $.ChuiRoutes.push(__tabbarScreens.eq(settings.selected)[0].id);\n\n      const tabbarButtons = tabbar.find('button');\n      $.Router.dispatch(__selectedTabbarScreen[0].id);\n      tabbarButtons.forEach(function (button, idx) {\n        $(button).data('chui-route', __tabbarScreens.eq(idx)[0].id);\n      });\n\n      /**\n       * Tap on tab:\n       */\n      tabbar.on('tap', 'button', function () {\n        const tab = $(this);\n        const routes = tab.data('chui-route').split('/');\n        const fullRoute = $.ChuiRoutes.join('/');\n        let navRoutesFull = tab.data('chui-route');\n        const navRoutes = navRoutesFull.split('/');\n\n        /**\n         * This tab holds a navigation list:\n         */\n        if (routes.length > 1) {\n          __tabbarButtons.hazClass('selected').data('chui-route', fullRoute);\n          __tabbarButtons.hazClass('selected').removeClass('selected').addClass('next');\n          navRoutesFull = $(this).data('chui-route');\n          /**\n           * Set this tab to `selected`:\n           */\n          tab.addClass('selected');\n          /**\n           * Deal with previously selected tab and screen:\n           */\n          $('screens').removeClass('current').addClass('next').attr('aria-hidden', true);\n          $('screens').removeClass('previous').addClass('next').attr('aria-hidden', true);\n          const navRoutes = navRoutesFull.split('/');\n          navRoutes.forEach( function(route, idx) {\n            const routing = route.split(':');\n            let whichRoute = routing[0];\n            if (idx !== routes.length - 1) {\n              $('#' + whichRoute).removeClass('next').addClass('previous').attr('aria-hidden', true);\n            } else {\n              $('#' + whichRoute).removeClass('next').addClass('current').attr('aria-hidden', false);\n            }\n          });\n          /**\n           * Take care of routes:\n           */\n          $.ChuiRoutes = routes;\n          $.Router.dispatch(routes[routes.length - 1]); \n\n          /**\n           * Handle Android ripple effect:\n           */\n          if ($.theme === 'android') {\n            handleTabSelectionForAndroid(tab);\n          }\n\n          /**\n           * This tab has a single screen:\n           */\n        } else {\n          const screen = $('screen').eq(tab.index());\n          __tabbarButtons.hazClass('selected').data('chui-route', fullRoute);\n          __tabbarButtons.hazClass('selected').removeClass('selected').addClass('next');\n          /**\n           * Deal with previously selected tab and screen:\n           */\n          $('screen').removeClass('current').addClass('next').attr('aria-hidden', true);\n          $('screen').removeClass('previous').addClass('next').attr('aria-hidden', true);\n          /**\n           * Set this tab to `selected`:\n           */\n          tab.addClass('selected');\n          if ($.theme === 'android') {\n            handleTabSelectionForAndroid(tab);\n          }\n\n          routes.forEach(function (route, idx) {\n            const routing = route.split(':');\n            const whichRoute = routing[0];\n            if (idx !== routes.length - 1) {\n              $('#' + whichRoute).removeClass('next').addClass('previous').attr('aria-hidden', true);\n            } else {\n              $('#' + whichRoute).removeClass('next').addClass('current').attr('aria-hidden', false);\n            }\n          });\n          \n          /**\n           * Take care of routes:\n           */\n          $.ChuiRoutes = routes;\n          $.Router.dispatch(fullRoute);\n        }\n      });\n    });\n\n    return {\n      getSelectedTab: () => {\n        return __selectedTabbarButton;\n      },\n\n      getSelectedScreen: () => {\n        return __selectedTabbarScreen;\n      },\n\n      setSelectedTab: (position) => {\n        tabbar.find('button').iz('.selected').removeClass('selected').addClass('next');\n        tabbar.children('button').eq(position).addClass('selected');\n        setToNext(__tabbarScreens.iz('.current')[0]);\n        setToCurrent(__tabbarScreens.eq(position)[0]);\n      }\n    };\n  }\n});\n\n/**\n * Methods to handle color management and coversion.\n */\n$.extend({\n  /** \n   * Create a color object from provided color value.\n   * Handles three values:\n   * rgb(255,0,0) -- with or without spaces\n   * #ff0000\n   * #f00\n   * The returned object has two methods:\n   * myColor.toHex()\n   * myColor.toRGB()\n   *\n   * @constructor - Must use new keyword\n   * @param {string} color - A hex or rgb value.\n   * @return {object} ChuiColor\n   */\n  ChuiColor: function(color) {\n    this.ok = false;\n    /** \n     * Check for hex color value.\n     * String \"#\" if found.\n     */\n    if (color.charAt(0) == '#') {\n      color = color.substr(1,6);\n    }\n    color = color.toLowerCase();\n\n\n    /**\n     * Array of color format regex patterns.\n     * These will identify the format of the color provided above.\n     * The process function converts hex color values into decimal (rgb).\n     */\n    const colorRegex = [\n      {\n        /* Example: ['rgb(123, 234, 45)', 'rgb(255, 234, 245)'] */\n        re: /^rgb\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*\\)$/,\n        process: function(bits) {\n          return [\n            parseInt(bits[1]),\n            parseInt(bits[2]),\n            parseInt(bits[3])\n          ];\n        }\n      },\n      {\n        /* Example: ['#00ff00', '336699'] */\n        re: /^(\\w{2})(\\w{2})(\\w{2})$/,\n        process: function(bits) {\n          return [\n            parseInt(bits[1], 16),\n            parseInt(bits[2], 16),\n            parseInt(bits[3], 16)\n          ];\n        }\n      },\n      {\n        /**\n         * Example: ['#fb0', 'f0f'] \n         */\n        re: /^(\\w{1})(\\w{1})(\\w{1})$/,\n        process: function(bits) {\n          return [\n            parseInt(bits[1] + bits[1], 16),\n            parseInt(bits[2] + bits[2], 16),\n            parseInt(bits[3] + bits[3], 16)\n          ];\n        }\n      }\n    ];\n\n    /**\n     * Check for a match using each regex. \n     */\n    for (let i = 0; i < 3; i++) {\n      const re = colorRegex[i].re;\n      const processor = colorRegex[i].process;\n      const bits = re.exec(color);\n      if (bits) {\n        const channels = processor(bits);\n        this.r = channels[0];\n        this.g = channels[1];\n        this.b = channels[2];\n        this.ok = true;\n      }\n    }\n\n    /**\n     * Validate/cleanup values. \n     */\n    this.r = (this.r < 0 || isNaN(this.r)) ? 0 : ((this.r > 255) ? 255 : this.r);\n    this.g = (this.g < 0 || isNaN(this.g)) ? 0 : ((this.g > 255) ? 255 : this.g);\n    this.b = (this.b < 0 || isNaN(this.b)) ? 0 : ((this.b > 255) ? 255 : this.b);\n\n    this.toHex = function() {\n      let r = this.r.toString(16);\n      let g = this.g.toString(16);\n      let b = this.b.toString(16);\n      if (r.length == 1) r = '0' + r;\n      if (g.length == 1) g = '0' + g;\n      if (b.length == 1) b = '0' + b;\n      return '#' + r + g + b;\n    }\n\n    this.toRGB = function() {\n      return 'rgb(' + this.r +',' + this.g + ',' + this.b + ')';\n    }\n  },\n\n  /**\n   * Make global method to get brightness of provided color.\n   * This is based on the values of YIQ color formula.\n   * This method expects a color object created by $.ChuiColor.\n   */\n  getBrightness: function(color) {\n    if ($.type(color) === 'string') color = $.ChuiColor(color);\n    return (color.r * .299) + (color.g * .587) + (color.b * .114);           \n  },\n\n  /**\n   * Function to light a color.\n   * Expects a hex value as string and an integer as percent:\n   */\n  lightenColor: function(color, percent) {  \n    const num = parseInt(color.slice(1), 16);\n    const amt = Math.round(2.55 * percent);\n    let R = (num >> 16) + amt;\n    let G = (num >> 8 & 0x00FF) + amt;\n    let B = (num & 0x0000FF) + amt;\n    return \"#\" + (0x1000000 + (R < 255 ? R < 1 ? 0 : R : 255) * 0x10000 + (G < 255 ? G < 1 ? 0 : G : 255) * 0x100 + (B < 255 ? B < 1 ? 0 : B : 255)).toString(16).slice(1);\n  },\n\n  /**\n   * Function to darken a color.\n   * Expects a hex value as string and an integer as percent:\n   */\n  darkenColor: function(color, percent) {  \n    const num = parseInt(color.slice(1), 16);\n    const amt = Math.round(2.55 * percent);\n    let R = (num >> 16) - amt;\n    let G = (num >> 8 & 0x00FF) - amt;\n    let B = (num & 0x0000FF) - amt;\n    return \"#\" + (0x1000000 + (R < 255 ? R < 1 ? 0 : R : 255) * 0x10000 + (G < 255 ? G < 1 ? 0 : G : 255) * 0x100 + (B < 255 ? B < 1 ? 0 : B : 255)).toString(16).slice(1);\n  },\n\n  /**\n   * Method to calculate color contrast.\n   * It expects a hex or rgb value:\n   */\n  calculateBrightness: function(color) {\n    if ($.type(color) === 'object') color = color.toHex();\n    const kolor = new $.ChuiColor(color);\n    return $.getBrightness(kolor);\n  }\n});\n\n\n/**\n * Android Ripple Effect - Triggered when Android theme is detected.\n */\n$(function() {\n\n  if ($.theme === 'android') {\n    $('body').on($.eventStart, \"button, ul.editing > li, li[data-show], li[data-select], li[data-goto], chui-sheet-handle, switch, .popover li\", function(e) {\n\n      let target = this;\n      \n      /**\n       * If item is disabled, do nothing.\n       */\n      if (target.hasAttribute(\"disabled\") || target.classList.contains(\"disabled\")) {\n        return;\n      }\n      \n      /**\n       * Get dimensions of target:\n       */\n      const offset = $(target).offset();\n      let w = Math.min(this.offsetWidth, 160);\n      let h = Math.min(this.offsetHeight, 160);\n      const d = Math.max(w, h);\n      /**\n       * Set width and height to whichever is greater:\n       */\n      w = d;\n      h = d;\n\n      const x = $.isAndroid ? e.touches[0].pageX - offset.left : e.pageX - offset.left;\n      const y = $.isAndroid ? e.touches[0].pageY - offset.top :  e.pageY - offset.top;\n\n      let navBkColor;\n      let backgroundColor;\n\n      /**\n       * Create ripple sheath and append to target:\n       */\n      const ripple = $('<ripple-sheath></ripple-sheath>');\n      $(target).append(ripple);\n\n      /**\n       * Check if button  is in navbar.\n       * If it is, get navbar background color and base ripple on that:\n       */\n\n      if (target.nodeName === 'BUTTON' && target.classList.contains('slide-out-button')) {\n        let navBkColor = $('screen > nav').eq(0).css('background-color');\n        backgroundColor = new $.ChuiColor(navBkColor).toHex();\n      } else if ((target.nodeName === 'BUTTON' && $(target).closest('nav')[0])) {\n        navBkColor = $(target).closest('nav').css('background-color');\n        backgroundColor = new $.ChuiColor(navBkColor).toHex();\n\n      } else if ((target.nodeName === 'BUTTON' && $(target).closest('toolbar')[0])) {\n        navBkColor = $(target).closest('toolbar').css('background-color');\n        backgroundColor = new $.ChuiColor(navBkColor).toHex();\n\n      } else {\n        backgroundColor = $(this).css('background-color');\n        if (!backgroundColor || backgroundColor === 'rgba(0, 0, 0, 0)') {\n          backgroundColor = '#fff'\n        }\n      }\n\n      /**\n       * Handle ripple color:\n       */\n      let rippleColor = '#fff';\n      const brightness = $.calculateBrightness(backgroundColor);\n      if (brightness > 195) {\n        rippleColor = '#aaa';\n      } else {\n        rippleColor = '#fff';\n      }\n\n      /**\n       * If ripple parent has custom color for ripple, use that:\n       */\n      if (target.dataset.rippleColor) {\n        rippleColor = target.dataset.rippleColor\n      }\n      \n      /**\n       * Create expanding ripple effect:\n       */\n      const rippleWave = $('<ripple-wave></ripple-wave>');\n      rippleWave.css({\n        \"background-color\": rippleColor,\n        width: h + 'px',\n        height: h + 'px',\n        left: x - (h/2) + 'px',\n        top: y - (h/2) + 'px',\n      });\n\n      /**\n       * Append to ripple, then delete:\n       */\n      ripple.append(rippleWave);\n      setTimeout(function() {\n        ripple.remove();\n      }, 1000);\n    });\n  }\n});\n$.extend({\n  Box: (function (globalObject) {\n    /**\n     * IndexedDB Driver:\n     */\n    (function () {\n      const self = this;\n      let indexedDB = indexedDB || globalObject.indexedDB || globalObject.webkitIndexedDB || globalObject.mozIndexedDB || globalObject.OIndexedDB || globalObject.msIndexedDB;\n      if (!indexedDB) {\n        return;\n      }\n\n      const DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\n      let supportsBlobs;\n      let dbContexts;\n      const toString = Object.prototype.toString;\n\n      function _binStringToArrayBuffer(bin) {\n        const length = bin.length;\n        const buf = new ArrayBuffer(length);\n        const arr = new Uint8Array(buf);\n        for (let i = 0; i < length; i++) {\n          arr[i] = bin.charCodeAt(i);\n        }\n        return buf;\n      }\n\n      function _checkBlobSupportWithoutCaching(txn) {\n        return new Promise(function(resolve) {\n          const blob = createBlob(['']);\n          txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n          txn.onabort = function(e) {\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n          };\n\n          txn.oncomplete = function() {\n            const matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            const matchedEdge = navigator.userAgent.match(/Edge\\//);\n            resolve(matchedEdge || !matchedChrome ||\n              parseInt(matchedChrome[1], 10) >= 43);\n          };\n        }).catch(function() {\n          return false;\n        });\n      }\n\n      function _checkBlobSupport(idb) {\n        if (typeof supportsBlobs === 'boolean') {\n          return Promise.resolve(supportsBlobs);\n        }\n        return _checkBlobSupportWithoutCaching(idb).then(function(value) {\n          supportsBlobs = value;\n          return supportsBlobs;\n        });\n      }\n\n      function _deferReadiness(dbInfo) {\n        const dbContext = dbContexts[dbInfo.name];\n        const deferredOperation = {};\n\n        deferredOperation.promise = new Promise(function(resolve) {\n          deferredOperation.resolve = resolve;\n        });\n\n        dbContext.deferredOperations.push(deferredOperation);\n\n        if (!dbContext.dbReady) {\n          dbContext.dbReady = deferredOperation.promise;\n        } else {\n          dbContext.dbReady = dbContext.dbReady.then(function() {\n            return deferredOperation.promise;\n          });\n        }\n      }\n\n      function _advanceReadiness(dbInfo) {\n        const dbContext = dbContexts[dbInfo.name];\n        const deferredOperation = dbContext.deferredOperations.pop();\n\n        if (deferredOperation) {\n          deferredOperation.resolve();\n        }\n      }\n\n      function _getConnection(dbInfo, upgradeNeeded) {\n        return new Promise(function(resolve, reject) {\n\n          if (dbInfo.db) {\n            if (upgradeNeeded) {\n              _deferReadiness(dbInfo);\n              dbInfo.db.close();\n            } else {\n              return resolve(dbInfo.db);\n            }\n          }\n\n          const dbArgs = [dbInfo.name];\n\n          if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n          }\n\n          const openreq = idb.open.apply(idb, dbArgs);\n\n          if (upgradeNeeded) {\n            openreq.onupgradeneeded = function(e) {\n              const db = openreq.result;\n              try {\n                db.createObjectStore(dbInfo.storeName);\n                if (e.oldVersion <= 1) {\n                  db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                }\n              } catch (ex) {\n                if (ex.name === 'ConstraintError') {\n                  console.warn('The database \"' + dbInfo.name + '\"' +\n                    ' has been upgraded from version ' + e.oldVersion +\n                    ' to version ' + e.newVersion +\n                    ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                } else {\n                  throw ex;\n                }\n              }\n            };\n          }\n\n          openreq.onerror = function() {\n            reject(openreq.error);\n          };\n\n          openreq.onsuccess = function() {\n            resolve(openreq.result);\n            _advanceReadiness(dbInfo);\n          };\n        });\n      }\n\n      function _getOriginalConnection(dbInfo) {\n        return _getConnection(dbInfo, false);\n      }\n\n      function _getUpgradedConnection(dbInfo) {\n        return _getConnection(dbInfo, true);\n      }\n\n      function _isUpgradeNeeded(dbInfo, defaultVersion) {\n        if (!dbInfo.db) {\n          return true;\n        }\n\n        const isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n        const isDowngrade = dbInfo.version < dbInfo.db.version;\n        const isUpgrade = dbInfo.version > dbInfo.db.version;\n\n        if (isDowngrade) {\n          if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' +\n              ' can\\'t be downgraded from version ' + dbInfo.db.version +\n              ' to version ' + dbInfo.version + '.');\n          }\n          dbInfo.version = dbInfo.db.version;\n        }\n\n        if (isUpgrade || isNewStore) {\n          if (isNewStore) {\n            const incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n              dbInfo.version = incVersion;\n            }\n          }\n          return true;\n        }\n        return false;\n      }\n\n      function _encodeBlob(blob) {\n        return new Promise(function(resolve, reject) {\n          const reader = new FileReader();\n          reader.onerror = reject;\n          reader.onloadend = function(e) {\n            const base64 = btoa(e.target.result || '');\n            resolve({\n              __local_forage_encoded_blob: true,\n              data: base64,\n              type: blob.type\n            });\n          };\n          reader.readAsBinaryString(blob);\n        });\n      }\n\n      function _decodeBlob(encodedBlob) {\n        const arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n        return createBlob([arrayBuff], {type: encodedBlob.type});\n      }\n\n      function _isEncodedBlob(value) {\n        return value && value.__local_forage_encoded_blob;\n      }\n\n      function _fullyReady(callback) {\n        const self = this;\n\n        const promise = self._initReady().then(function() {\n          let dbContext = dbContexts[self._dbInfo.name];\n\n          if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n          }\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n      }\n\n      function _initStorage(options) {\n        const self = this;\n        const dbInfo = {\n          db: null\n        };\n\n        if (options) {\n          for (let i in options) {\n            dbInfo[i] = options[i];\n          }\n        }\n\n        if (!dbContexts) {\n          dbContexts = {};\n        }\n\n        let dbContext = dbContexts[dbInfo.name];\n\n        if (!dbContext) {\n          dbContext = {\n            forages: [],\n            db: null,\n            dbReady: null,\n            deferredOperations: []\n          };\n          dbContexts[dbInfo.name] = dbContext;\n        }\n\n        dbContext.forages.push(self);\n\n        if (!self._initReady) {\n          self._initReady = self.ready;\n          self.ready = _fullyReady;\n        }\n\n        const initPromises = [];\n\n        function ignoreErrors() {\n          return Promise.resolve();\n        }\n\n        for (let j = 0; j < dbContext.forages.length; j++) {\n          const forage = dbContext.forages[j];\n          if (forage !== self) {\n            initPromises.push(forage._initReady().catch(ignoreErrors));\n          }\n        }\n\n        const forages = dbContext.forages.slice(0);\n\n        return Promise.all(initPromises).then(function() {\n          dbInfo.db = dbContext.db;\n          return _getOriginalConnection(dbInfo);\n        }).then(function(db) {\n          dbInfo.db = db;\n          if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            return _getUpgradedConnection(dbInfo);\n          }\n          return db;\n        }).then(function(db) {\n          dbInfo.db = dbContext.db = db;\n          self._dbInfo = dbInfo;\n          for (let k = 0; k < forages.length; k++) {\n            let forage = forages[k];\n            if (forage !== self) {\n              forage._dbInfo.db = dbInfo.db;\n              forage._dbInfo.version = dbInfo.version;\n            }\n          }\n        });\n      }\n\n      function get(key, callback) {\n        const self = this;\n\n        if (typeof key !== 'string') {\n          console.warn(key +\n            ' used as a key, but it is not a string.');\n          key = String(key);\n        }\n\n        const promise = new Promise(function(resolve, reject) {\n          self.ready().then(function() {\n            const dbInfo = self._dbInfo;\n            const store = dbInfo.db.transaction(dbInfo.storeName, 'readonly')\n              .objectStore(dbInfo.storeName);\n            const req = store.get(key);\n\n            req.onsuccess = function() {\n              let value = req.result;\n              if (value === undefined) {\n                value = null;\n              }\n              if (_isEncodedBlob(value)) {\n                value = _decodeBlob(value);\n              }\n              resolve(value);\n            };\n\n            req.onerror = function() {\n              reject(req.error);\n            };\n          }).catch(reject);\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function each(iterator, callback) {\n        const self = this;\n\n        const promise = new Promise(function(resolve, reject) {\n          self.ready().then(function() {\n            const dbInfo = self._dbInfo;\n            const store = dbInfo.db.transaction(dbInfo.storeName, 'readonly')\n              .objectStore(dbInfo.storeName);\n\n            const req = store.openCursor();\n            let iterationNumber = 1;\n\n            req.onsuccess = function() {\n              const cursor = req.result;\n\n              if (cursor) {\n                let value = cursor.value;\n                if (_isEncodedBlob(value)) {\n                  value = _decodeBlob(value);\n                }\n                const result = iterator(value, cursor.key,\n                  iterationNumber++);\n\n                if (result !== void(0)) {\n                  resolve(result);\n                } else {\n                  cursor.continue();\n                }\n              } else {\n                resolve();\n              }\n            };\n\n            req.onerror = function() {\n              reject(req.error);\n            };\n          }).catch(reject);\n        });\n\n        executeCallback(promise, callback);\n\n        return promise;\n      }\n\n      function set(key, value, callback) {\n        const self = this;\n\n        if (typeof key !== 'string') {\n          console.warn(key +\n            ' used as a key, but it is not a string.');\n          key = String(key);\n        }\n\n        const promise = new Promise(function(resolve, reject) {\n          let dbInfo;\n          self.ready().then(function() {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n              return _checkBlobSupport(dbInfo.db).then(function(blobSupport) {\n                if (blobSupport) {\n                  return value;\n                }\n                return _encodeBlob(value);\n              });\n            }\n            return value;\n          }).then(function(value) {\n            const transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            const store = transaction.objectStore(dbInfo.storeName);\n\n            if (value === null) {\n              value = undefined;\n            }\n\n            transaction.oncomplete = function() {\n              if (value === undefined) {\n                value = null;\n              }\n\n              resolve(value);\n            };\n            transaction.onabort = transaction.onerror = function() {\n              const err = req.error ? req.error : req.transaction.error;\n              reject(err);\n            };\n\n            const req = store.put(value, key);\n          }).catch(reject);\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function remove(key, callback) {\n        const self = this;\n\n        if (typeof key !== 'string') {\n          console.warn(key +\n            ' used as a key, but it is not a string.');\n          key = String(key);\n        }\n\n        const promise = new Promise(function(resolve, reject) {\n          self.ready().then(function() {\n            const dbInfo = self._dbInfo;\n            const transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            const store = transaction.objectStore(dbInfo.storeName);\n            const req = store.delete(key);\n            transaction.oncomplete = function() {\n              resolve();\n            };\n\n            transaction.onerror = function() {\n              reject(req.error);\n            };\n\n            transaction.onabort = function() {\n              const err = req.error ? req.error : req.transaction.error;\n              reject(err);\n            };\n          }).catch(reject);\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function clear(callback) {\n        const self = this;\n\n        const promise = new Promise(function(resolve, reject) {\n          self.ready().then(function() {\n            const dbInfo = self._dbInfo;\n            const transaction = dbInfo.db.transaction(dbInfo.storeName, 'readwrite');\n            const store = transaction.objectStore(dbInfo.storeName);\n            const req = store.clear();\n\n            transaction.oncomplete = function() {\n              resolve();\n            };\n\n            transaction.onabort = transaction.onerror = function() {\n              const err = req.error ? req.error : req.transaction.error;\n              reject(err);\n            };\n          }).catch(reject);\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function length(callback) {\n        const self = this;\n\n        const promise = new Promise(function(resolve, reject) {\n          self.ready().then(function() {\n            const dbInfo = self._dbInfo;\n            const store = dbInfo.db.transaction(dbInfo.storeName, 'readonly')\n              .objectStore(dbInfo.storeName);\n            const req = store.count();\n\n            req.onsuccess = function() {\n              resolve(req.result);\n            };\n\n            req.onerror = function() {\n              reject(req.error);\n            };\n          }).catch(reject);\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function key(n, callback) {\n        const self = this;\n\n        const promise = new Promise(function(resolve, reject) {\n          if (n < 0) {\n            resolve(null);\n\n            return;\n          }\n\n          self.ready().then(function() {\n            const dbInfo = self._dbInfo;\n            const store = dbInfo.db.transaction(dbInfo.storeName, 'readonly')\n              .objectStore(dbInfo.storeName);\n\n            let advanced = false;\n            const req = store.openCursor();\n            req.onsuccess = function() {\n              const cursor = req.result;\n              if (!cursor) {\n                resolve(null);\n\n                return;\n              }\n\n              if (n === 0) {\n                resolve(cursor.key);\n              } else {\n                if (!advanced) {\n                  advanced = true;\n                  cursor.advance(n);\n                } else {\n                  resolve(cursor.key);\n                }\n              }\n            };\n\n            req.onerror = function() {\n              reject(req.error);\n            };\n          }).catch(reject);\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function keys(callback) {\n        const self = this;\n\n        const promise = new Promise(function(resolve, reject) {\n          self.ready().then(function() {\n            const dbInfo = self._dbInfo;\n            const store = dbInfo.db.transaction(dbInfo.storeName, 'readonly')\n              .objectStore(dbInfo.storeName);\n\n            const req = store.openCursor();\n            const keys = [];\n\n            req.onsuccess = function() {\n              const cursor = req.result;\n\n              if (!cursor) {\n                resolve(keys);\n                return;\n              }\n\n              keys.push(cursor.key);\n              cursor.continue();\n            };\n\n            req.onerror = function() {\n              reject(req.error);\n            };\n          }).catch(reject);\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      const asyncStorage = {\n        _driver: 'asyncStorage',\n        _initStorage: _initStorage,\n        each: each,\n        get: get,\n        set: set,\n        remove: remove,\n        clear: clear,\n        length: length,\n        key: key,\n        keys: keys\n      };\n\n      /**\n       * Export driver:\n       */\n      this.asyncStorage = asyncStorage;\n      globalObject.asyncStorage = asyncStorage;\n    }).call(window);\n\n    /**\n     * WebSQL Driver:\n     */\n    (function () {\n      const globalObject = this;\n      const openDatabase = this.openDatabase;\n      if (!openDatabase) {\n        return;\n      }\n\n      function __initStorage(options) {\n        const self = this;\n        let dbInfo = {\n          db: null\n        };\n\n        if (options) {\n          for (let i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n          }\n        }\n\n        const dbInfoPromise = new Promise(function (resolve, reject) {\n          try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n          } catch (e) {\n            return self.setDriver(self.LOCALSTORAGE).then(function () {\n              return self.__initStorage(options);\n            }).then(resolve)['catch'](reject);\n          }\n\n          dbInfo.db.transaction(function (t) {\n            t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.boxName + ' (id INTEGER PRIMARY KEY, key unique, value)', [], function () {\n              self.__dbInfo = dbInfo;\n              resolve();\n            }, function (t, error) {\n              reject(error);\n            });\n          });\n        });\n\n        return new Promise(function (resolve, reject) {\n          resolve(chuiBoxSerializer);\n        }).then(function (lib) {\n          dbInfo.serializer = lib;\n          return dbInfoPromise;\n        });\n      }\n\n      function get(key, callback) {\n        const self = this;\n        if (typeof key !== 'string') {\n          globalObject.console.warn(key + ' used as a key, but it is not a string.');\n          key = String(key);\n        }\n\n        const promise = new Promise(function (resolve, reject) {\n          self.ready().then(function () {\n            const dbInfo = self.__dbInfo;\n            dbInfo.db.transaction(function (t) {\n              t.executeSql('SELECT * FROM ' + dbInfo.boxName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                let result = results.rows.length ? results.rows.item(0).value : null;\n                if (result) {\n                  result = dbInfo.serializer.deserialize(result);\n                }\n                resolve(result);\n              }, \n              function (t, error) {\n                reject(error);\n              });\n            });\n          })['catch'](reject);\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function each(iterator, callback) {\n        const self = this;\n        const promise = new Promise(function (resolve, reject) {\n          self.ready().then(function () {\n            const dbInfo = self.__dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n              t.executeSql('SELECT * FROM ' + dbInfo.boxName, [], function (t, results) {\n                const rows = results.rows;\n                const length = rows.length;\n\n                for (let i = 0; i < length; i++) {\n                  const item = rows.item(i);\n                  let result = item.value;\n                  if (result) {\n                    result = dbInfo.serializer.deserialize(result);\n                  }\n                  result = iterator(result, item.key, i + 1);\n                  if (result !== undefined) {\n                    resolve(result);\n                    return;\n                  }\n                }\n\n                resolve();\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })['catch'](reject);\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function set(key, value, callback) {\n        const self = this;\n        if (typeof key !== 'string') {\n          globalObject.console.warn(key + ' used as a key, but it is not a string.');\n          key = String(key);\n        }\n\n        const promise = new Promise(function (resolve, reject) {\n          self.ready().then(function () {\n            if (value === undefined) {\n              value = null;\n            }\n\n            const originalValue = value;\n            const dbInfo = self.__dbInfo;\n\n            dbInfo.serializer.serialize(value, function (value, error) {\n              if (error) {\n                reject(error);\n              } else {\n                dbInfo.db.transaction(function (t) {\n                  t.executeSql('INSERT OR REPLACE INTO ' + dbInfo.boxName + ' (key, value) VALUES (?, ?)', [key, value], function () {\n                    resolve(originalValue);\n                  }, function (t, error) {\n                    reject(error);\n                  });\n                }, function (sqlError) {\n                  if (sqlError.code === sqlError.QUOTA_ERR) {\n                    reject(sqlError);\n                  }\n                });\n              }\n            });\n          })['catch'](reject);\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function remove(key, callback) {\n        const self = this;\n        if (typeof key !== 'string') {\n          globalObject.console.warn(key + ' used as a key, but it is not a string.');\n          key = String(key);\n        }\n\n        const promise = new Promise(function (resolve, reject) {\n          self.ready().then(function () {\n            const dbInfo = self.__dbInfo;\n            dbInfo.db.transaction(function (t) {\n              t.executeSql('DELETE FROM ' + dbInfo.boxName + ' WHERE key = ?', [key], function () {\n                resolve();\n              }, function (t, error) {\n\n                reject(error);\n              });\n            });\n          })['catch'](reject);\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function clear(callback) {\n        const self = this;\n        const promise = new Promise(function (resolve, reject) {\n          self.ready().then(function () {\n            const dbInfo = self.__dbInfo;\n            dbInfo.db.transaction(function (t) {\n              t.executeSql('DELETE FROM ' + dbInfo.boxName, [], function () {\n                resolve();\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })['catch'](reject);\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function size(callback) {\n        const self = this;\n        const promise = new Promise(function (resolve, reject) {\n          self.ready().then(function () {\n            const dbInfo = self.__dbInfo;\n            dbInfo.db.transaction(function (t) {\n              t.executeSql('SELECT COUNT(key) as c FROM ' + dbInfo.boxName, [], function (t, results) {\n                const result = results.rows.item(0).c;\n\n                resolve(result);\n              }, function (t, error) {\n\n                reject(error);\n              });\n            });\n          })['catch'](reject);\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function key(n, callback) {\n        const self = this;\n\n        const promise = new Promise(function (resolve, reject) {\n          self.ready().then(function () {\n            const dbInfo = self.__dbInfo;\n            dbInfo.db.transaction(function (t) {\n              t.executeSql('SELECT key FROM ' + dbInfo.boxName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                const result = results.rows.length ? results.rows.item(0).key : null;\n                resolve(result);\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })['catch'](reject);\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function keys(callback) {\n        const self = this;\n        const promise = new Promise(function (resolve, reject) {\n          self.ready().then(function () {\n            const dbInfo = self.__dbInfo;\n            dbInfo.db.transaction(function (t) {\n              t.executeSql('SELECT key FROM ' + dbInfo.boxName, [], function (t, results) {\n                const keys = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                  keys.push(results.rows.item(i).key);\n                }\n                resolve(keys);\n\n              }, function (t, error) {\n                reject(error);\n              });\n            });\n          })['catch'](reject);\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function executeCallback(promise, callback) {\n        if (callback) {\n          promise.then(function (result) {\n            callback(null, result);\n          }, function (error) {\n            callback(error);\n          });\n        }\n      }\n\n      const webSQLStorage = {\n        __driver: 'webSQLStorage',\n        __initStorage: __initStorage,\n        each: each,\n        get: get,\n        set: set,\n        remove: remove,\n        clear: clear,\n        size: size,\n        key: key,\n        keys: keys\n      };\n\n      /**\n       * Export driver:\n       */\n      this.webSQLStorage = webSQLStorage;\n      globalObject.webSQLStorage = webSQLStorage;\n    }).call(window);\n\n    /**\n     * localStorage Driver:\n     */\n    (function () {\n      const globalObject = this;\n      let localStorage = null;\n      try {\n        if (!this.localStorage || !('set' in this.localStorage)) {\n          return;\n        }\n        localStorage = this.localStorage;\n      } catch (e) {\n        return;\n      }\n\n      function __initStorage(options) {\n        const self = this;\n        const dbInfo = {};\n        if (options) {\n          for (var i in options) {\n            dbInfo[i] = options[i];\n          }\n        }\n\n        dbInfo.keyPrefix = dbInfo.name + '/';\n\n        if (dbInfo.boxName !== self.__defaultConfig.boxName) {\n          dbInfo.keyPrefix += dbInfo.boxName + '/';\n        }\n\n        self.__dbInfo = dbInfo;\n\n        return new Promise(function (resolve, reject) {\n          resolve(chuiBoxSerializer);\n        }).then(function (lib) {\n          dbInfo.serializer = lib;\n          return Promise.resolve();\n        });\n      }\n\n      function clear(callback) {\n        const self = this;\n        const promise = self.ready().then(function () {\n          const keyPrefix = self.__dbInfo.keyPrefix;\n\n          for (let i = localStorage.length - 1; i >= 0; i--) {\n            const _key = localStorage.key(i);\n\n            if (_key.indexOf(keyPrefix) === 0) {\n              localStorage.remove(_key);\n            }\n          }\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function get(key, callback) {\n        const self = this;\n        if (typeof key !== 'string') {\n          globalObject.console.warn(key + ' used as a key, but it is not a string.');\n          key = String(key);\n        }\n\n        const promise = self.ready().then(function () {\n          const dbInfo = self.__dbInfo;\n          let result = localStorage.get(dbInfo.keyPrefix + key);\n          if (result) {\n            result = dbInfo.serializer.deserialize(result);\n          }\n          return result;\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function each(iterator, callback) {\n        const self = this;\n\n        const promise = self.ready().then(function () {\n          const dbInfo = self.__dbInfo;\n          const keyPrefix = dbInfo.keyPrefix;\n          const keyPrefixLength = keyPrefix.length;\n          const length = localStorage.length;\n          let iterationNumber = 1;\n\n          for (var i = 0; i < length; i++) {\n            const _key2 = localStorage.key(i);\n            if (_key2.indexOf(keyPrefix) !== 0) {\n              continue;\n            }\n            let value = localStorage.get(_key2);\n            if (value) {\n              value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, _key2.substring(keyPrefixLength), iterationNumber++);\n            if (value !== undefined) {\n              return value;\n            }\n          }\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function key(n, callback) {\n        const self = this;\n        const promise = self.ready().then(function () {\n          const dbInfo = self.__dbInfo;\n          let result;\n          try {\n            result = localStorage.key(n);\n          } catch (error) {\n            result = null;\n          }\n\n          if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n          }\n          return result;\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function keys(callback) {\n        const self = this;\n        const promise = self.ready().then(function () {\n          const dbInfo = self.__dbInfo;\n          const length = localStorage.length;\n          const keys = [];\n\n          for (let i = 0; i < length; i++) {\n            if (localStorage.key(i).indexOf(dbInfo.keyPrefix) === 0) {\n              keys.push(localStorage.key(i).substring(dbInfo.keyPrefix.length));\n            }\n          }\n          return keys;\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function size(callback) {\n        const self = this;\n        const promise = self.keys().then(function (keys) {\n          return keys.length;\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function remove(key, callback) {\n        const self = this;\n        if (typeof key !== 'string') {\n          globalObject.console.warn(key + ' used as a key, but it is not a string.');\n          key = String(key);\n        }\n\n        const promise = self.ready().then(function () {\n          const dbInfo = self.__dbInfo;\n          localStorage.remove(dbInfo.keyPrefix + key);\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function set(key, value, callback) {\n        const self = this;\n        if (typeof key !== 'string') {\n          globalObject.console.warn(key + ' used as a key, but it is not a string.');\n          key = String(key);\n        }\n\n        const promise = self.ready().then(function () {\n          if (value === undefined) {\n            value = null;\n          }\n          const originalValue = value;\n\n          return new Promise(function (resolve, reject) {\n            const dbInfo = self.__dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n              if (error) {\n                reject(error);\n              } else {\n                try {\n                  localStorage.set(dbInfo.keyPrefix + key, value);\n                  resolve(originalValue);\n                } catch (e) {\n                  if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                    reject(e);\n                  }\n                  reject(e);\n                }\n              }\n            });\n          });\n        });\n\n        executeCallback(promise, callback);\n        return promise;\n      }\n\n      function executeCallback(promise, callback) {\n        if (callback) {\n          promise.then(function (result) {\n            callback(null, result);\n          }, function (error) {\n            callback(error);\n          });\n        }\n      }\n\n      const localStorageWrapper = {\n        __driver: 'localStorageWrapper',\n        __initStorage: __initStorage,\n        each: each,\n        get: get,\n        set: set,\n        remove: remove,\n        clear: clear,\n        size: size,\n        key: key,\n        keys: keys\n      };\n\n      /**\n       * Export driver:\n       */\n      this.localStorageWrapper = localStorageWrapper;\n      window.localStorageWrapper = localStorageWrapper;\n    }).call(window);\n\n    /**\n     * Blob Serializer:\n     */\n    (function () {\n      const BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n      const BLOB_TYPE_PREFIX = '~~chui_box_type~';\n      const BLOB_TYPE_PREFIX_REGEX = /^~~chui_box_type~([^~]+)~/;\n      const SERIALIZED_MARKER = '__lfsc__:';\n      const SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n      const TYPE_ARRAYBUFFER = 'arbf';\n      const TYPE_BLOB = 'blob';\n      const TYPE_INT8ARRAY = 'si08';\n      const TYPE_UINT8ARRAY = 'ui08';\n      const TYPE_UINT8CLAMPEDARRAY = 'uic8';\n      const TYPE_INT16ARRAY = 'si16';\n      const TYPE_INT32ARRAY = 'si32';\n      const TYPE_UINT16ARRAY = 'ur16';\n      const TYPE_UINT32ARRAY = 'ui32';\n      const TYPE_FLOAT32ARRAY = 'fl32';\n      const TYPE_FLOAT64ARRAY = 'fl64';\n      const TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n      const globalObject = this;\n\n      function __createBlob(parts, properties) {\n        parts = parts || [];\n        properties = properties || {};\n\n        try {\n          return new Blob(parts, properties);\n        } catch (err) {\n          if (err.name !== 'TypeError') {\n            throw err;\n          }\n\n          const BlobBuilder = globalObject.BlobBuilder || globalObject.MSBlobBuilder || globalObject.MozBlobBuilder || globalObject.WebKitBlobBuilder;\n\n          const builder = new BlobBuilder();\n          for (let i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n          }\n          return builder.getBlob(properties.type);\n        }\n      }\n\n      function serialize(value, callback) {\n        let valueString = '';\n        if (value) {\n          valueString = value.toString();\n        }\n\n        if (value && (value.toString() === '[object ArrayBuffer]' || value.buffer && value.buffer.toString() === '[object ArrayBuffer]')) {\n          let buffer;\n          let marker = SERIALIZED_MARKER;\n\n          if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n          } else {\n            buffer = value.buffer;\n\n            if (valueString === '[object Int8Array]') {\n              marker += TYPE_INT8ARRAY;\n            } else if (valueString === '[object Uint8Array]') {\n              marker += TYPE_UINT8ARRAY;\n            } else if (valueString === '[object Uint8ClampedArray]') {\n              marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueString === '[object Int16Array]') {\n              marker += TYPE_INT16ARRAY;\n            } else if (valueString === '[object Uint16Array]') {\n              marker += TYPE_UINT16ARRAY;\n            } else if (valueString === '[object Int32Array]') {\n              marker += TYPE_INT32ARRAY;\n            } else if (valueString === '[object Uint32Array]') {\n              marker += TYPE_UINT32ARRAY;\n            } else if (valueString === '[object Float32Array]') {\n              marker += TYPE_FLOAT32ARRAY;\n            } else if (valueString === '[object Float64Array]') {\n              marker += TYPE_FLOAT64ARRAY;\n            } else {\n              callback(new Error('Failed to get type for BinaryArray'));\n            }\n          }\n\n          callback(marker + bufferToString(buffer));\n        } else if (valueString === '[object Blob]') {\n          const fileReader = new FileReader();\n\n          fileReader.onload = function () {\n            const str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n          };\n\n          fileReader.readAsArrayBuffer(value);\n        } else {\n          try {\n            callback(JSON.stringify(value));\n          } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n          }\n        }\n      }\n\n      function deserialize(value) {\n        if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n          return JSON.parse(value);\n        }\n        let serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n        const type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n        let blobType;\n        if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n          const matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n          blobType = matcher[1];\n          serializedString = serializedString.substring(matcher[0].length);\n        }\n        const buffer = stringToBuffer(serializedString);\n\n        switch (type) {\n          case TYPE_ARRAYBUFFER:\n            return buffer;\n          case TYPE_BLOB:\n            return __createBlob([buffer], {\n              type: blobType\n            });\n          case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n          case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n          case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n          case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n          case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n          case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n          case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n          case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n          case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n          default:\n            throw new Error('Unkown type: ' + type);\n        }\n      }\n\n      function stringToBuffer(serializedString) {\n        let bufferLength = serializedString.length * 0.75;\n        const len = serializedString.length;\n        let i;\n        let p = 0;\n        var encoded1,\n            encoded2,\n            encoded3,\n            encoded4;\n        if (serializedString[serializedString.length - 1] === '=') {\n          bufferLength--;\n          if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n          }\n        }\n        const buffer = new ArrayBuffer(bufferLength);\n        const bytes = new Uint8Array(buffer);\n\n        for (i = 0; i < len; i += 4) {\n          encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n          encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n          encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n          encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n          /*jslint bitwise: true */\n          bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n          bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n          bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n        }\n        return buffer;\n      }\n\n      function bufferToString(buffer) {\n        const bytes = new Uint8Array(buffer);\n        let base64String = '';\n        let i;\n\n        for (i = 0; i < bytes.length; i += 3) {\n          /*jslint bitwise: true */\n          base64String += BASE_CHARS[bytes[i] >> 2];\n          base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n          base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n          base64String += BASE_CHARS[bytes[i + 2] & 63];\n        }\n        if (bytes.length % 3 === 2) {\n          base64String = base64String.substring(0, base64String.length - 1) + '=';\n        } else if (bytes.length % 3 === 1) {\n          base64String = base64String.substring(0, base64String.length - 2) + '==';\n        }\n        return base64String;\n      }\n\n      const chuiBoxSerializer = {\n        serialize: serialize,\n        deserialize: deserialize,\n        stringToBuffer: stringToBuffer,\n        bufferToString: bufferToString\n      };\n\n      /**\n       * Export driver:\n       */\n      this.chuiBoxSerializer = chuiBoxSerializer;\n      window.chuiBoxSerializer = chuiBoxSerializer;\n    }).call(window);\n\n    /**\n     * ChocolateChip-UI Box Implementation:\n     */\n    const CustomDrivers = {};\n    const DriverType = {\n      INDEXEDDB: 'asyncStorage',\n      LOCALSTORAGE: 'localStorageWrapper',\n      WEBSQL: 'webSQLStorage'\n    };\n    const DefaultDriverOrder = [DriverType.INDEXEDDB, DriverType.WEBSQL, DriverType.LOCALSTORAGE];\n    const LibraryMethods = ['clear', 'get', 'each', 'key', 'keys', 'size', 'remove', 'set'];\n\n    const DefaultConfig = {\n      description: '',\n      driver: DefaultDriverOrder.slice(),\n      name: 'chuibox',\n      size: 4980736,\n      boxName: 'keyvaluepairs',\n      version: 1.0\n    };\n\n    const driverSupport = (function (self) {\n      const indexedDB = indexedDB || self.indexedDB || self.webkitIndexedDB || self.mozIndexedDB || self.OIndexedDB || self.msIndexedDB;\n      const result = {};\n      result[DriverType.WEBSQL] = !!self.openDatabase;\n      result[DriverType.INDEXEDDB] = !!(function () {\n        if (typeof self.openDatabase !== 'undefined' && self.navigator && self.navigator.userAgent && /Safari/.test(self.navigator.userAgent) && !/Chrome/.test(self.navigator.userAgent)) {\n          return false;\n        }\n        try {\n          return indexedDB && typeof indexedDB.open === 'function' && typeof self.IDBKeyRange !== 'undefined';\n        } catch (e) {\n          return false;\n        }\n      })();\n\n      result[DriverType.LOCALSTORAGE] = !!(function () {\n        try {\n          return self.localStorage && 'set' in self.localStorage && self.localStorage.set;\n        } catch (e) {\n          return false;\n        }\n      })();\n\n      return result;\n    })(window);\n\n    const isArray = Array.isArray || function (arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    };\n\n    function callWhenReady(chuiBoxInstance, libraryMethod) {\n      chuiBoxInstance[libraryMethod] = function () {\n        const __args = arguments;\n        return chuiBoxInstance.ready().then(function () {\n          return chuiBoxInstance[libraryMethod].apply(chuiBoxInstance, __args);\n        });\n      };\n    }\n\n    function extend() {\n      for (let i = 1; i < arguments.length; i++) {\n        const arg = arguments[i];\n\n        if (arg) {\n          for (let key in arg) {\n            if (arg.hasOwnProperty(key)) {\n              if (isArray(arg[key])) {\n                arguments[0][key] = arg[key].slice();\n              } else {\n                arguments[0][key] = arg[key];\n              }\n            }\n          }\n        }\n      }\n\n      return arguments[0];\n    }\n\n    function isLibraryDriver(driverName) {\n      for (let driver in DriverType) {\n        if (DriverType.hasOwnProperty(driver) && DriverType[driver] === driverName) {\n          return true;\n        }\n      }\n\n      return false;\n    }\n\n    const ChuiBox = (function () {\n      function ChuiBox(options) {\n\n        this.INDEXEDDB = DriverType.INDEXEDDB;\n        this.LOCALSTORAGE = DriverType.LOCALSTORAGE;\n        this.WEBSQL = DriverType.WEBSQL;\n\n        this.__defaultConfig = extend({}, DefaultConfig);\n        this.__config = extend({}, this.__defaultConfig, options);\n        this.__driverSet = null;\n        this.__initDriver = null;\n        this.__ready = false;\n        this.__dbInfo = null;\n\n        this.__wrapLibraryMethodsWithReady();\n        this.setDriver(this.__config.driver);\n      }\n\n      ChuiBox.prototype.config = function (options) {\n        if (typeof options === 'object') {\n          if (this.__ready) {\n            return new Error(\"Can't call config() after chuibox \" + 'has been used.');\n          }\n          for (let i in options) {\n            if (i === 'boxName') {\n              options[i] = options[i].replace(/\\W/g, '_');\n            }\n\n            this.__config[i] = options[i];\n          }\n          if ('driver' in options && options.driver) {\n            this.setDriver(this.__config.driver);\n          }\n\n          return true;\n        } else if (typeof options === 'string') {\n          return this.__config[options];\n        } else {\n          return this.__config;\n        }\n      };\n\n      ChuiBox.prototype.defineDriver = function (driverObject, callback, errorCallback) {\n        const promise = new Promise(function (resolve, reject) {\n          try {\n            const _ret = (function () {\n              const driverName = driverObject.__driver;\n              const complianceError = new Error('Custom driver not compliant; see ChocolateChip-UI Box documentation');\n              const namingError = new Error('Custom driver name already in use: ' + driverObject.__driver);\n              if (!driverObject.__driver) {\n                reject(complianceError);\n                return {\n                  v: undefined\n                };\n              }\n              if (isLibraryDriver(driverObject.__driver)) {\n                reject(namingError);\n                return {\n                  v: undefined\n                };\n              }\n\n              const customDriverMethods = LibraryMethods.concat('__initStorage');\n              for (let i = 0; i < customDriverMethods.length; i++) {\n                const customDriverMethod = customDriverMethods[i];\n                if (!customDriverMethod || !driverObject[customDriverMethod] || typeof driverObject[customDriverMethod] !== 'function') {\n                  reject(complianceError);\n                  return {\n                    v: undefined\n                  };\n                }\n              }\n\n              let supportPromise = Promise.resolve(true);\n              if ('__support' in driverObject) {\n                if (driverObject.__support && typeof driverObject.__support === 'function') {\n                  supportPromise = driverObject.__support();\n                } else {\n                  supportPromise = Promise.resolve(!!driverObject.__support);\n                }\n              }\n\n              supportPromise.then(function (supportResult) {\n                driverSupport[driverName] = supportResult;\n                CustomDrivers[driverName] = driverObject;\n                resolve();\n              }, reject);\n            })();\n\n            if (typeof _ret === 'object') return _ret.v;\n          } catch (e) {\n            reject(e);\n          }\n        });\n\n        promise.then(callback, errorCallback);\n        return promise;\n      };\n\n      ChuiBox.prototype.driver = function () {\n        return this.__driver || null;\n      };\n\n      ChuiBox.prototype.getDriver = function (driverName, callback, errorCallback) {\n        const self = this;\n        const getDriverPromise = (function () {\n          if (isLibraryDriver(driverName)) {\n            switch (driverName) {\n              case self.INDEXEDDB:\n                return new Promise(function (resolve, reject) {\n                  resolve(asyncStorage);\n                });\n              case self.LOCALSTORAGE:\n                return new Promise(function (resolve, reject) {\n                  resolve(localStorageWrapper);\n                });\n              case self.WEBSQL:\n                return new Promise(function (resolve, reject) {\n                  resolve(webSQLStorage);\n                });\n            }\n          } else if (CustomDrivers[driverName]) {\n            console.log('Using: ' + driverName);\n            return Promise.resolve(CustomDrivers[driverName]);\n          }\n\n          return Promise.reject(new Error('Driver not found.'));\n        })();\n\n        getDriverPromise.then(callback, errorCallback);\n        return getDriverPromise;\n      };\n\n      ChuiBox.prototype.getSerializer = function (callback) {\n        const serializerPromise = new Promise(function (resolve, reject) {\n          resolve(chuiBoxSerializer);\n        });\n        if (callback && typeof callback === 'function') {\n          serializerPromise.then(function (result) {\n            callback(result);\n          });\n        }\n        return serializerPromise;\n      };\n\n      ChuiBox.prototype.ready = function (callback) {\n        const self = this;\n\n        const promise = self.__driverSet.then(function () {\n          if (self.__ready === null) {\n            self.__ready = self.__initDriver();\n          }\n\n          return self.__ready;\n        });\n\n        promise.then(callback, callback);\n        return promise;\n      };\n\n      ChuiBox.prototype.setDriver = function (drivers, callback, errorCallback) {\n        const self = this;\n\n        if (!isArray(drivers)) {\n          drivers = [drivers];\n        }\n\n        const supportedDrivers = this.__getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n          self.__config.driver = self.driver();\n        }\n\n        function initDriver(supportedDrivers) {\n          return function () {\n            var currentDriverIndex = 0;\n\n            function driverPromiseLoop() {\n              while (currentDriverIndex < supportedDrivers.length) {\n                const driverName = supportedDrivers[currentDriverIndex];\n                currentDriverIndex++;\n\n                self.__dbInfo = null;\n                self.__ready = null;\n\n                return self.getDriver(driverName).then(function (driver) {\n                  self.__extend(driver);\n                  setDriverToConfig();\n\n                  self.__ready = self.__initStorage(self.__config);\n                  return self.__ready;\n                })['catch'](driverPromiseLoop);\n              }\n\n              setDriverToConfig();\n              const error = new Error('No available storage method found.');\n              self.__driverSet = Promise.reject(error);\n              return self.__driverSet;\n            }\n\n            return driverPromiseLoop();\n          };\n        }\n\n        const oldDriverSetDone = this.__driverSet !== null ? this.__driverSet['catch'](function () {\n          return Promise.resolve();\n        }) : Promise.resolve();\n\n        this.__driverSet = oldDriverSetDone.then(function () {\n          const driverName = supportedDrivers[0];\n          self.__dbInfo = null;\n          self.__ready = null;\n\n          return self.getDriver(driverName).then(function (driver) {\n            self.__driver = driver.__driver;\n            setDriverToConfig();\n            self.__wrapLibraryMethodsWithReady();\n            self.__initDriver = initDriver(supportedDrivers);\n          });\n        })['catch'](function () {\n          setDriverToConfig();\n          const error = new Error('No available storage method found.');\n          self.__driverSet = Promise.reject(error);\n          return self.__driverSet;\n        });\n\n        this.__driverSet.then(callback, errorCallback);\n        return this.__driverSet;\n      };\n\n      ChuiBox.prototype.supports = function (driverName) {\n        return !!driverSupport[driverName];\n      };\n\n      ChuiBox.prototype.__extend = function (libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n      };\n\n      ChuiBox.prototype.__getSupportedDrivers = function (drivers) {\n        var supportedDrivers = [];\n        for (let i = 0, len = drivers.length; i < len; i++) {\n          const driverName = drivers[i];\n          if (this.supports(driverName)) {\n            supportedDrivers.push(driverName);\n          }\n        }\n        return supportedDrivers;\n      };\n\n      ChuiBox.prototype.__wrapLibraryMethodsWithReady = function () {\n        for (let i = 0; i < LibraryMethods.length; i++) {\n          callWhenReady(this, LibraryMethods[i]);\n        }\n      };\n\n      ChuiBox.prototype.createInstance = function (options) {\n        return new ChuiBox(options);\n      };\n\n      return ChuiBox;\n    })();\n\n    const chuiBox = new ChuiBox();\n    return chuiBox;\n  })(window)\n});"]}